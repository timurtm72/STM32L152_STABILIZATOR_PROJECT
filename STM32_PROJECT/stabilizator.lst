;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 23.02.2021 14:49:18
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x3FFC2000  	536887292
0x0004	0x33FD0000  	13309
0x0008	0x336D0000  	13165
0x000C	0x336D0000  	13165
0x0010	0x336D0000  	13165
0x0014	0x336D0000  	13165
0x0018	0x336D0000  	13165
0x001C	0x336D0000  	13165
0x0020	0x336D0000  	13165
0x0024	0x336D0000  	13165
0x0028	0x336D0000  	13165
0x002C	0x336D0000  	13165
0x0030	0x336D0000  	13165
0x0034	0x336D0000  	13165
0x0038	0x336D0000  	13165
0x003C	0x336D0000  	13165
0x0040	0x336D0000  	13165
0x0044	0x336D0000  	13165
0x0048	0x336D0000  	13165
0x004C	0x336D0000  	13165
0x0050	0x336D0000  	13165
0x0054	0x336D0000  	13165
0x0058	0x336D0000  	13165
0x005C	0x336D0000  	13165
0x0060	0x336D0000  	13165
0x0064	0x336D0000  	13165
0x0068	0x336D0000  	13165
0x006C	0x336D0000  	13165
0x0070	0x336D0000  	13165
0x0074	0x336D0000  	13165
0x0078	0x336D0000  	13165
0x007C	0x336D0000  	13165
0x0080	0x336D0000  	13165
0x0084	0x336D0000  	13165
0x0088	0x336D0000  	13165
0x008C	0x336D0000  	13165
0x0090	0x336D0000  	13165
0x0094	0x336D0000  	13165
0x0098	0x336D0000  	13165
0x009C	0x336D0000  	13165
0x00A0	0x336D0000  	13165
0x00A4	0x336D0000  	13165
0x00A8	0x336D0000  	13165
0x00AC	0x336D0000  	13165
0x00B0	0x33750000  	13173
0x00B4	0x33ED0000  	13293
0x00B8	0x336D0000  	13165
0x00BC	0x336D0000  	13165
0x00C0	0x336D0000  	13165
0x00C4	0x336D0000  	13165
0x00C8	0x336D0000  	13165
0x00CC	0x336D0000  	13165
0x00D0	0x336D0000  	13165
0x00D4	0x336D0000  	13165
0x00D8	0x336D0000  	13165
0x00DC	0x336D0000  	13165
0x00E0	0x336D0000  	13165
0x00E4	0x336D0000  	13165
0x00E8	0x336D0000  	13165
0x00EC	0x336D0000  	13165
0x00F0	0x336D0000  	13165
; end of ____SysVT
_main:
;main.c, 4 :: 		void main()
0x33FC	0xF000F81A  BL	13364
0x3400	0xF000F984  BL	14092
0x3404	0xF000F8C4  BL	13712
0x3408	0xF000F940  BL	13964
;main.c, 6 :: 		Init_flags();
0x340C	0xF7FFFE22  BL	_Init_flags+0
;main.c, 7 :: 		Init_ADC_chanell();
0x3410	0xF7FFFEE2  BL	_Init_ADC_chanell+0
;main.c, 8 :: 		Init_LCD();
0x3414	0xF7FFFF14  BL	_Init_LCD+0
;main.c, 9 :: 		Init_pin();
0x3418	0xF7FFFF40  BL	_Init_pin+0
;main.c, 10 :: 		EnableInterrupts();
0x341C	0xF7FFFED4  BL	_EnableInterrupts+0
;main.c, 11 :: 		StartMainTimer_10ms();
0x3420	0xF7FFFF7A  BL	_StartMainTimer_10ms+0
;main.c, 12 :: 		WDT_Init();
0x3424	0xF7FFFF16  BL	_WDT_Init+0
;main.c, 13 :: 		EnableInterrupts();
0x3428	0xF7FFFECE  BL	_EnableInterrupts+0
;main.c, 16 :: 		while(TRUE)
L_main0:
;main.c, 18 :: 		globalProcess();
0x342C	0xF7FFFEEA  BL	_globalProcess+0
;main.c, 19 :: 		}
0x3430	0xE7FC    B	L_main0
;main.c, 20 :: 		}
L_end_main:
L__main_end_loop:
0x3432	0xE7FE    B	L__main_end_loop
; end of _main
_EnableInterrupts:
;__Lib_System_15X.c, 109 :: 		
0x31C8	0xB081    SUB	SP, SP, #4
;__Lib_System_15X.c, 112 :: 		
0x31CA	0xF3EF8C10  MRS	R12, #16
0x31CE	0x4660    MOV	R0, R12
; result start address is: 0 (R0)
;__Lib_System_15X.c, 113 :: 		
0x31D0	0xB662    CPSIE	i
;__Lib_System_15X.c, 115 :: 		
; result end address is: 0 (R0)
;__Lib_System_15X.c, 116 :: 		
L_end_EnableInterrupts:
0x31D2	0xB001    ADD	SP, SP, #4
0x31D4	0x4770    BX	LR
; end of _EnableInterrupts
___FillZeros:
;__Lib_System_15X.c, 72 :: 		
0x3120	0xB081    SUB	SP, SP, #4
;__Lib_System_15X.c, 74 :: 		
0x3122	0xF04F0900  MOV	R9, #0
;__Lib_System_15X.c, 75 :: 		
0x3126	0xF04F0C00  MOV	R12, #0
;__Lib_System_15X.c, 76 :: 		
0x312A	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_15X.c, 77 :: 		
0x312E	0xDC04    BGT	L_loopFZs
;__Lib_System_15X.c, 78 :: 		
0x3130	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_15X.c, 79 :: 		
0x3134	0xDB01    BLT	L_loopFZs
;__Lib_System_15X.c, 80 :: 		
0x3136	0x46D4    MOV	R12, R10
;__Lib_System_15X.c, 81 :: 		
0x3138	0x46EA    MOV	R10, SP
;__Lib_System_15X.c, 82 :: 		
L_loopFZs:
;__Lib_System_15X.c, 83 :: 		
0x313A	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_15X.c, 84 :: 		
0x313E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_15X.c, 85 :: 		
0x3142	0xD1FA    BNE	L_loopFZs
;__Lib_System_15X.c, 86 :: 		
0x3144	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_15X.c, 87 :: 		
0x3148	0xDD05    BLE	L_norep
;__Lib_System_15X.c, 88 :: 		
0x314A	0x46E2    MOV	R10, R12
;__Lib_System_15X.c, 89 :: 		
0x314C	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_15X.c, 90 :: 		
0x3150	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_15X.c, 91 :: 		
0x3154	0xE7F1    B	L_loopFZs
;__Lib_System_15X.c, 92 :: 		
L_norep:
;__Lib_System_15X.c, 94 :: 		
L_end___FillZeros:
0x3156	0xB001    ADD	SP, SP, #4
0x3158	0x4770    BX	LR
; end of ___FillZeros
_Init_flags:
;init_func.c, 31 :: 		void Init_flags()
;init_func.c, 33 :: 		flag_t.ovf_flag                                       = 0;
0x3054	0x2100    MOVS	R1, #0
0x3056	0x481E    LDR	R0, [PC, #120]
0x3058	0x7001    STRB	R1, [R0, #0]
;init_func.c, 34 :: 		flag_t.start_button_status                            = 0;
0x305A	0x2100    MOVS	R1, #0
0x305C	0x481D    LDR	R0, [PC, #116]
0x305E	0x7001    STRB	R1, [R0, #0]
;init_func.c, 35 :: 		flag_t.input_voltage_status_first_step                = 0;
0x3060	0x2100    MOVS	R1, #0
0x3062	0x481D    LDR	R0, [PC, #116]
0x3064	0x7001    STRB	R1, [R0, #0]
;init_func.c, 36 :: 		flag_t.input_voltage_status_second_step               = 0;
0x3066	0x2100    MOVS	R1, #0
0x3068	0x481C    LDR	R0, [PC, #112]
0x306A	0x7001    STRB	R1, [R0, #0]
;init_func.c, 37 :: 		flag_t.status_main_contactor                          = 0;
0x306C	0x2100    MOVS	R1, #0
0x306E	0x481C    LDR	R0, [PC, #112]
0x3070	0x7001    STRB	R1, [R0, #0]
;init_func.c, 38 :: 		flag_t.input_voltage_status_bypass                    = 0;
0x3072	0x2100    MOVS	R1, #0
0x3074	0x481B    LDR	R0, [PC, #108]
0x3076	0x7001    STRB	R1, [R0, #0]
;init_func.c, 39 :: 		flag_t.input_voltage_status_hight                     = 0;
0x3078	0x2100    MOVS	R1, #0
0x307A	0x481B    LDR	R0, [PC, #108]
0x307C	0x7001    STRB	R1, [R0, #0]
;init_func.c, 40 :: 		flag_t.input_voltage_status_lo                        = 0;
0x307E	0x2100    MOVS	R1, #0
0x3080	0x481A    LDR	R0, [PC, #104]
0x3082	0x7001    STRB	R1, [R0, #0]
;init_func.c, 41 :: 		flag_t.output_voltage_status                          = 0;
0x3084	0x2100    MOVS	R1, #0
0x3086	0x481A    LDR	R0, [PC, #104]
0x3088	0x7001    STRB	R1, [R0, #0]
;init_func.c, 42 :: 		flag_t.current_status                                 = 0;
0x308A	0x2100    MOVS	R1, #0
0x308C	0x4819    LDR	R0, [PC, #100]
0x308E	0x7001    STRB	R1, [R0, #0]
;init_func.c, 43 :: 		flag_t.short_current_status                           = 0;
0x3090	0x2100    MOVS	R1, #0
0x3092	0x4819    LDR	R0, [PC, #100]
0x3094	0x7001    STRB	R1, [R0, #0]
;init_func.c, 44 :: 		flag_t.first_start                                    = 0;
0x3096	0x2100    MOVS	R1, #0
0x3098	0x4818    LDR	R0, [PC, #96]
0x309A	0x7001    STRB	R1, [R0, #0]
;init_func.c, 45 :: 		flag_t.current_global_status                          = 0;
0x309C	0x2100    MOVS	R1, #0
0x309E	0x4818    LDR	R0, [PC, #96]
0x30A0	0x7001    STRB	R1, [R0, #0]
;init_func.c, 46 :: 		flag_t.status_bypass                                  = 0;
0x30A2	0x2100    MOVS	R1, #0
0x30A4	0x4817    LDR	R0, [PC, #92]
0x30A6	0x7001    STRB	R1, [R0, #0]
;init_func.c, 47 :: 		flag_t.status_first_step                              = 0;
0x30A8	0x2100    MOVS	R1, #0
0x30AA	0x4817    LDR	R0, [PC, #92]
0x30AC	0x7001    STRB	R1, [R0, #0]
;init_func.c, 48 :: 		flag_t.status_second_step                             = 0;
0x30AE	0x2100    MOVS	R1, #0
0x30B0	0x4816    LDR	R0, [PC, #88]
0x30B2	0x7001    STRB	R1, [R0, #0]
;init_func.c, 49 :: 		flag_t.output_voltage_status_temp                     = 0;
0x30B4	0x2100    MOVS	R1, #0
0x30B6	0x4816    LDR	R0, [PC, #88]
0x30B8	0x7001    STRB	R1, [R0, #0]
;init_func.c, 50 :: 		flag_t.current_status_temp                            = 0;
0x30BA	0x2100    MOVS	R1, #0
0x30BC	0x4815    LDR	R0, [PC, #84]
0x30BE	0x7001    STRB	R1, [R0, #0]
;init_func.c, 51 :: 		flag_t.short_current_status_temp                      = 0;
0x30C0	0x2100    MOVS	R1, #0
0x30C2	0x4815    LDR	R0, [PC, #84]
0x30C4	0x7001    STRB	R1, [R0, #0]
;init_func.c, 52 :: 		flag_t.change_button_status                           = 0;
0x30C6	0x2100    MOVS	R1, #0
0x30C8	0x4814    LDR	R0, [PC, #80]
0x30CA	0x7001    STRB	R1, [R0, #0]
;init_func.c, 53 :: 		}
L_end_Init_flags:
0x30CC	0x4770    BX	LR
0x30CE	0xBF00    NOP
0x30D0	0x005A2000  	_flag_t+0
0x30D4	0x005B2000  	_flag_t+1
0x30D8	0x005C2000  	_flag_t+2
0x30DC	0x005D2000  	_flag_t+3
0x30E0	0x005E2000  	_flag_t+4
0x30E4	0x005F2000  	_flag_t+5
0x30E8	0x00602000  	_flag_t+6
0x30EC	0x00612000  	_flag_t+7
0x30F0	0x00622000  	_flag_t+8
0x30F4	0x00632000  	_flag_t+9
0x30F8	0x00642000  	_flag_t+10
0x30FC	0x00652000  	_flag_t+11
0x3100	0x00662000  	_flag_t+12
0x3104	0x00672000  	_flag_t+13
0x3108	0x00682000  	_flag_t+14
0x310C	0x00692000  	_flag_t+15
0x3110	0x006A2000  	_flag_t+16
0x3114	0x006B2000  	_flag_t+17
0x3118	0x006C2000  	_flag_t+18
0x311C	0x006D2000  	_flag_t+19
; end of _Init_flags
_Init_ADC_chanell:
;adc_func.c, 4 :: 		void Init_ADC_chanell()
0x31D8	0xB081    SUB	SP, SP, #4
0x31DA	0xF8CDE000  STR	LR, [SP, #0]
;adc_func.c, 6 :: 		ADC_CCRbits.ADCPRE = 0x02;              //предделитель АЦП
0x31DE	0x2202    MOVS	R2, #2
0x31E0	0x4907    LDR	R1, [PC, #28]
0x31E2	0x6808    LDR	R0, [R1, #0]
0x31E4	0xF3624011  BFI	R0, R2, #16, #2
0x31E8	0x6008    STR	R0, [R1, #0]
;adc_func.c, 7 :: 		ADC1_Init();
0x31EA	0xF7FFFA01  BL	_ADC1_Init+0
;adc_func.c, 8 :: 		ADC_Set_Input_Channel(_ADC_CHANNEL_4|_ADC_CHANNEL_5);
0x31EE	0xF04F0030  MOV	R0, #48
0x31F2	0xF7FFF95F  BL	_ADC_Set_Input_Channel+0
;adc_func.c, 14 :: 		}
L_end_Init_ADC_chanell:
0x31F6	0xF8DDE000  LDR	LR, [SP, #0]
0x31FA	0xB001    ADD	SP, SP, #4
0x31FC	0x4770    BX	LR
0x31FE	0xBF00    NOP
0x3200	0x27044001  	ADC_CCRbits+0
; end of _Init_ADC_chanell
_ADC1_Init:
;__Lib_ADC_32Lxxx_20ch.c, 156 :: 		
0x25F0	0xB081    SUB	SP, SP, #4
0x25F2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_ADC_32Lxxx_20ch.c, 157 :: 		
0x25F6	0x4907    LDR	R1, [PC, #28]
0x25F8	0x4807    LDR	R0, [PC, #28]
0x25FA	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_32Lxxx_20ch.c, 159 :: 		
0x25FC	0x2101    MOVS	R1, #1
0x25FE	0xB249    SXTB	R1, R1
0x2600	0x4806    LDR	R0, [PC, #24]
0x2602	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_32Lxxx_20ch.c, 161 :: 		
0x2604	0x4806    LDR	R0, [PC, #24]
0x2606	0xF7FFFEB5  BL	__Lib_ADC_32Lxxx_20ch_ADCx_Init+0
;__Lib_ADC_32Lxxx_20ch.c, 194 :: 		
L_end_ADC1_Init:
0x260A	0xF8DDE000  LDR	LR, [SP, #0]
0x260E	0xB001    ADD	SP, SP, #4
0x2610	0x4770    BX	LR
0x2612	0xBF00    NOP
0x2614	0x06950000  	_ADC1_Get_Sample+0
0x2618	0x00802000  	_ADC_Get_Sample_Ptr+0
0x261C	0x04244247  	RCC_APB2ENRbits+0
0x2620	0x24004001  	ADC_SR+0
; end of _ADC1_Init
__Lib_ADC_32Lxxx_20ch_ADCx_Init:
;__Lib_ADC_32Lxxx_20ch.c, 86 :: 		
; base start address is: 0 (R0)
0x2374	0xB081    SUB	SP, SP, #4
; base end address is: 0 (R0)
; base start address is: 0 (R0)
;__Lib_ADC_32Lxxx_20ch.c, 90 :: 		
0x2376	0x1D03    ADDS	R3, R0, #4
0x2378	0x681A    LDR	R2, [R3, #0]
0x237A	0x4922    LDR	R1, [PC, #136]
0x237C	0xEA020101  AND	R1, R2, R1, LSL #0
0x2380	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32Lxxx_20ch.c, 92 :: 		
0x2382	0xF2000308  ADDW	R3, R0, #8
0x2386	0x681A    LDR	R2, [R3, #0]
0x2388	0x491F    LDR	R1, [PC, #124]
0x238A	0xEA020101  AND	R1, R2, R1, LSL #0
0x238E	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32Lxxx_20ch.c, 100 :: 		
0x2390	0x1D03    ADDS	R3, R0, #4
0x2392	0x2200    MOVS	R2, #0
0x2394	0x6819    LDR	R1, [R3, #0]
0x2396	0xF3622108  BFI	R1, R2, #8, #1
0x239A	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32Lxxx_20ch.c, 103 :: 		
0x239C	0xF2000308  ADDW	R3, R0, #8
0x23A0	0x2200    MOVS	R2, #0
0x23A2	0x6819    LDR	R1, [R3, #0]
0x23A4	0xF3620141  BFI	R1, R2, #1, #1
0x23A8	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32Lxxx_20ch.c, 105 :: 		
0x23AA	0xF2000308  ADDW	R3, R0, #8
0x23AE	0x2200    MOVS	R2, #0
0x23B0	0x6819    LDR	R1, [R3, #0]
0x23B2	0xF36221CB  BFI	R1, R2, #11, #1
0x23B6	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32Lxxx_20ch.c, 113 :: 		
0x23B8	0xF2000330  ADDW	R3, R0, #48
0x23BC	0x2200    MOVS	R2, #0
0x23BE	0x6819    LDR	R1, [R3, #0]
0x23C0	0xF3625114  BFI	R1, R2, #20, #1
0x23C4	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32Lxxx_20ch.c, 114 :: 		
0x23C6	0xF2000330  ADDW	R3, R0, #48
0x23CA	0x2200    MOVS	R2, #0
0x23CC	0x6819    LDR	R1, [R3, #0]
0x23CE	0xF3625155  BFI	R1, R2, #21, #1
0x23D2	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32Lxxx_20ch.c, 115 :: 		
0x23D4	0xF2000330  ADDW	R3, R0, #48
0x23D8	0x2200    MOVS	R2, #0
0x23DA	0x6819    LDR	R1, [R3, #0]
0x23DC	0xF3625196  BFI	R1, R2, #22, #1
0x23E0	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32Lxxx_20ch.c, 116 :: 		
0x23E2	0xF2000330  ADDW	R3, R0, #48
0x23E6	0x2200    MOVS	R2, #0
0x23E8	0x6819    LDR	R1, [R3, #0]
0x23EA	0xF36251D7  BFI	R1, R2, #23, #1
0x23EE	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32Lxxx_20ch.c, 120 :: 		
0x23F0	0xF2000308  ADDW	R3, R0, #8
; base end address is: 0 (R0)
0x23F4	0x2201    MOVS	R2, #1
0x23F6	0x6819    LDR	R1, [R3, #0]
0x23F8	0xF3620100  BFI	R1, R2, #0, #1
0x23FC	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32Lxxx_20ch.c, 131 :: 		
L_end_ADCx_Init:
0x23FE	0xB001    ADD	SP, SP, #4
0x2400	0x4770    BX	LR
0x2402	0xBF00    NOP
0x2404	0xFEFFFFF0  	#-983297
0x2408	0xF7FDFFF1  	#-919555
; end of __Lib_ADC_32Lxxx_20ch_ADCx_Init
_ADC_Set_Input_Channel:
;__Lib_ADC_32Lxxx_20ch.c, 47 :: 		
; input_mask start address is: 0 (R0)
0x24B4	0xB081    SUB	SP, SP, #4
0x24B6	0xF8CDE000  STR	LR, [SP, #0]
0x24BA	0x4683    MOV	R11, R0
; input_mask end address is: 0 (R0)
; input_mask start address is: 44 (R11)
;__Lib_ADC_32Lxxx_20ch.c, 48 :: 		
0x24BC	0xF3CB0100  UBFX	R1, R11, #0, #1
0x24C0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel0
;__Lib_ADC_32Lxxx_20ch.c, 49 :: 		
0x24C2	0xF2400101  MOVW	R1, #1
0x24C6	0x4847    LDR	R0, [PC, #284]
0x24C8	0xF7FFFFA0  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel0:
;__Lib_ADC_32Lxxx_20ch.c, 50 :: 		
0x24CC	0xF3CB0140  UBFX	R1, R11, #1, #1
0x24D0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel1
;__Lib_ADC_32Lxxx_20ch.c, 51 :: 		
0x24D2	0xF2400102  MOVW	R1, #2
0x24D6	0x4843    LDR	R0, [PC, #268]
0x24D8	0xF7FFFF98  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel1:
;__Lib_ADC_32Lxxx_20ch.c, 52 :: 		
0x24DC	0xF3CB0180  UBFX	R1, R11, #2, #1
0x24E0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel2
;__Lib_ADC_32Lxxx_20ch.c, 53 :: 		
0x24E2	0xF2400104  MOVW	R1, #4
0x24E6	0x483F    LDR	R0, [PC, #252]
0x24E8	0xF7FFFF90  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel2:
;__Lib_ADC_32Lxxx_20ch.c, 54 :: 		
0x24EC	0xF3CB01C0  UBFX	R1, R11, #3, #1
0x24F0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel3
;__Lib_ADC_32Lxxx_20ch.c, 55 :: 		
0x24F2	0xF2400108  MOVW	R1, #8
0x24F6	0x483B    LDR	R0, [PC, #236]
0x24F8	0xF7FFFF88  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel3:
;__Lib_ADC_32Lxxx_20ch.c, 56 :: 		
0x24FC	0xF3CB1100  UBFX	R1, R11, #4, #1
0x2500	0xB121    CBZ	R1, L_ADC_Set_Input_Channel4
;__Lib_ADC_32Lxxx_20ch.c, 57 :: 		
0x2502	0xF2400110  MOVW	R1, #16
0x2506	0x4837    LDR	R0, [PC, #220]
0x2508	0xF7FFFF80  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel4:
;__Lib_ADC_32Lxxx_20ch.c, 58 :: 		
0x250C	0xF3CB1140  UBFX	R1, R11, #5, #1
0x2510	0xB121    CBZ	R1, L_ADC_Set_Input_Channel5
;__Lib_ADC_32Lxxx_20ch.c, 59 :: 		
0x2512	0xF2400120  MOVW	R1, #32
0x2516	0x4833    LDR	R0, [PC, #204]
0x2518	0xF7FFFF78  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel5:
;__Lib_ADC_32Lxxx_20ch.c, 60 :: 		
0x251C	0xF3CB1180  UBFX	R1, R11, #6, #1
0x2520	0xB121    CBZ	R1, L_ADC_Set_Input_Channel6
;__Lib_ADC_32Lxxx_20ch.c, 61 :: 		
0x2522	0xF2400140  MOVW	R1, #64
0x2526	0x482F    LDR	R0, [PC, #188]
0x2528	0xF7FFFF70  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel6:
;__Lib_ADC_32Lxxx_20ch.c, 62 :: 		
0x252C	0xF3CB11C0  UBFX	R1, R11, #7, #1
0x2530	0xB121    CBZ	R1, L_ADC_Set_Input_Channel7
;__Lib_ADC_32Lxxx_20ch.c, 63 :: 		
0x2532	0xF2400180  MOVW	R1, #128
0x2536	0x482B    LDR	R0, [PC, #172]
0x2538	0xF7FFFF68  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel7:
;__Lib_ADC_32Lxxx_20ch.c, 64 :: 		
0x253C	0xF3CB2100  UBFX	R1, R11, #8, #1
0x2540	0xB121    CBZ	R1, L_ADC_Set_Input_Channel8
;__Lib_ADC_32Lxxx_20ch.c, 65 :: 		
0x2542	0xF2400101  MOVW	R1, #1
0x2546	0x4828    LDR	R0, [PC, #160]
0x2548	0xF7FFFF60  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel8:
;__Lib_ADC_32Lxxx_20ch.c, 66 :: 		
0x254C	0xF3CB2140  UBFX	R1, R11, #9, #1
0x2550	0xB121    CBZ	R1, L_ADC_Set_Input_Channel9
;__Lib_ADC_32Lxxx_20ch.c, 67 :: 		
0x2552	0xF2400102  MOVW	R1, #2
0x2556	0x4824    LDR	R0, [PC, #144]
0x2558	0xF7FFFF58  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel9:
;__Lib_ADC_32Lxxx_20ch.c, 68 :: 		
0x255C	0xF3CB2180  UBFX	R1, R11, #10, #1
0x2560	0xB121    CBZ	R1, L_ADC_Set_Input_Channel10
;__Lib_ADC_32Lxxx_20ch.c, 69 :: 		
0x2562	0xF2400101  MOVW	R1, #1
0x2566	0x4821    LDR	R0, [PC, #132]
0x2568	0xF7FFFF50  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel10:
;__Lib_ADC_32Lxxx_20ch.c, 70 :: 		
0x256C	0xF3CB21C0  UBFX	R1, R11, #11, #1
0x2570	0xB121    CBZ	R1, L_ADC_Set_Input_Channel11
;__Lib_ADC_32Lxxx_20ch.c, 71 :: 		
0x2572	0xF2400102  MOVW	R1, #2
0x2576	0x481D    LDR	R0, [PC, #116]
0x2578	0xF7FFFF48  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel11:
;__Lib_ADC_32Lxxx_20ch.c, 72 :: 		
0x257C	0xF3CB3100  UBFX	R1, R11, #12, #1
0x2580	0xB121    CBZ	R1, L_ADC_Set_Input_Channel12
;__Lib_ADC_32Lxxx_20ch.c, 73 :: 		
0x2582	0xF2400104  MOVW	R1, #4
0x2586	0x4819    LDR	R0, [PC, #100]
0x2588	0xF7FFFF40  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel12:
;__Lib_ADC_32Lxxx_20ch.c, 74 :: 		
0x258C	0xF3CB3140  UBFX	R1, R11, #13, #1
0x2590	0xB121    CBZ	R1, L_ADC_Set_Input_Channel13
;__Lib_ADC_32Lxxx_20ch.c, 75 :: 		
0x2592	0xF2400108  MOVW	R1, #8
0x2596	0x4815    LDR	R0, [PC, #84]
0x2598	0xF7FFFF38  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel13:
;__Lib_ADC_32Lxxx_20ch.c, 76 :: 		
0x259C	0xF3CB3180  UBFX	R1, R11, #14, #1
0x25A0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel14
;__Lib_ADC_32Lxxx_20ch.c, 77 :: 		
0x25A2	0xF2400110  MOVW	R1, #16
0x25A6	0x4811    LDR	R0, [PC, #68]
0x25A8	0xF7FFFF30  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel14:
;__Lib_ADC_32Lxxx_20ch.c, 78 :: 		
0x25AC	0xF3CB31C0  UBFX	R1, R11, #15, #1
0x25B0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel15
;__Lib_ADC_32Lxxx_20ch.c, 79 :: 		
0x25B2	0xF2400120  MOVW	R1, #32
0x25B6	0x480D    LDR	R0, [PC, #52]
0x25B8	0xF7FFFF28  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel15:
;__Lib_ADC_32Lxxx_20ch.c, 80 :: 		
0x25BC	0xF3CB4180  UBFX	R1, R11, #18, #1
0x25C0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel16
;__Lib_ADC_32Lxxx_20ch.c, 81 :: 		
0x25C2	0xF2410100  MOVW	R1, #4096
0x25C6	0x4808    LDR	R0, [PC, #32]
0x25C8	0xF7FFFF20  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel16:
;__Lib_ADC_32Lxxx_20ch.c, 82 :: 		
0x25CC	0xF3CB41C0  UBFX	R1, R11, #19, #1
; input_mask end address is: 44 (R11)
0x25D0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel17
;__Lib_ADC_32Lxxx_20ch.c, 83 :: 		
0x25D2	0xF2420100  MOVW	R1, #8192
0x25D6	0x4804    LDR	R0, [PC, #16]
0x25D8	0xF7FFFF18  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel17:
;__Lib_ADC_32Lxxx_20ch.c, 84 :: 		
L_end_ADC_Set_Input_Channel:
0x25DC	0xF8DDE000  LDR	LR, [SP, #0]
0x25E0	0xB001    ADD	SP, SP, #4
0x25E2	0x4770    BX	LR
0x25E4	0x00004002  	GPIOA_BASE+0
0x25E8	0x04004002  	GPIOB_BASE+0
0x25EC	0x08004002  	GPIOC_BASE+0
; end of _ADC_Set_Input_Channel
_GPIO_Analog_Input:
;__Lib_GPIO_32l1xx.c, 247 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x240C	0xB081    SUB	SP, SP, #4
0x240E	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32l1xx.c, 248 :: 		
0x2412	0xF04F0201  MOV	R2, #1
0x2416	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x2418	0xF7FEFD06  BL	_GPIO_Config+0
;__Lib_GPIO_32l1xx.c, 249 :: 		
L_end_GPIO_Analog_Input:
0x241C	0xF8DDE000  LDR	LR, [SP, #0]
0x2420	0xB001    ADD	SP, SP, #4
0x2422	0x4770    BX	LR
; end of _GPIO_Analog_Input
_GPIO_Config:
;__Lib_GPIO_32l1xx.c, 81 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0E28	0xB084    SUB	SP, SP, #16
0x0E2A	0xF8CDE000  STR	LR, [SP, #0]
0x0E2E	0xB28D    UXTH	R5, R1
0x0E30	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32l1xx.c, 82 :: 		
;__Lib_GPIO_32l1xx.c, 83 :: 		
;__Lib_GPIO_32l1xx.c, 87 :: 		
0x0E32	0x4B86    LDR	R3, [PC, #536]
0x0E34	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x0E38	0x461F    MOV	R7, R3
;__Lib_GPIO_32l1xx.c, 89 :: 		
0x0E3A	0x4618    MOV	R0, R3
0x0E3C	0xF7FFF9CE  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32l1xx.c, 92 :: 		
0x0E40	0xF1B50FFF  CMP	R5, #255
0x0E44	0xD120    BNE	L_GPIO_Config20
;__Lib_GPIO_32l1xx.c, 93 :: 		
0x0E46	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32l1xx.c, 94 :: 		
0x0E48	0x4B81    LDR	R3, [PC, #516]
0x0E4A	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x0E4E	0x4618    MOV	R0, R3
;__Lib_GPIO_32l1xx.c, 95 :: 		
0x0E50	0x4B80    LDR	R3, [PC, #512]
0x0E52	0x429E    CMP	R6, R3
0x0E54	0xD114    BNE	L_GPIO_Config21
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32l1xx.c, 96 :: 		
0x0E56	0xF2455355  MOVW	R3, #21845
0x0E5A	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32l1xx.c, 97 :: 		
0x0E5E	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32l1xx.c, 98 :: 		
0x0E60	0x1D3D    ADDS	R5, R7, #4
0x0E62	0x682C    LDR	R4, [R5, #0]
0x0E64	0xF06F03FF  MVN	R3, #255
0x0E68	0xEA040303  AND	R3, R4, R3, LSL #0
0x0E6C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32l1xx.c, 99 :: 		
0x0E6E	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x0E72	0x682C    LDR	R4, [R5, #0]
0x0E74	0xF64F73FF  MOVW	R3, #65535
0x0E78	0xEA440303  ORR	R3, R4, R3, LSL #0
0x0E7C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32l1xx.c, 100 :: 		
0x0E7E	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32l1xx.c, 101 :: 		
L_GPIO_Config21:
;__Lib_GPIO_32l1xx.c, 102 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x0E80	0x2E42    CMP	R6, #66
0x0E82	0xD101    BNE	L_GPIO_Config22
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32l1xx.c, 103 :: 		
0x0E84	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32l1xx.c, 104 :: 		
0x0E86	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32l1xx.c, 105 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32l1xx.c, 106 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config20:
;__Lib_GPIO_32l1xx.c, 108 :: 		
0x0E88	0xF64F73FF  MOVW	R3, #65535
0x0E8C	0x429D    CMP	R5, R3
0x0E8E	0xD113    BNE	L_GPIO_Config23
;__Lib_GPIO_32l1xx.c, 109 :: 		
0x0E90	0x4B70    LDR	R3, [PC, #448]
0x0E92	0x429E    CMP	R6, R3
0x0E94	0xD10B    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32l1xx.c, 110 :: 		
0x0E96	0xF04F3355  MOV	R3, #1431655765
0x0E9A	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32l1xx.c, 111 :: 		
0x0E9C	0x1D3C    ADDS	R4, R7, #4
0x0E9E	0x2300    MOVS	R3, #0
0x0EA0	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32l1xx.c, 112 :: 		
0x0EA2	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x0EA6	0xF04F33FF  MOV	R3, #-1
0x0EAA	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32l1xx.c, 113 :: 		
0x0EAC	0xE0CA    B	L_end_GPIO_Config
;__Lib_GPIO_32l1xx.c, 114 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32l1xx.c, 115 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x0EAE	0x2E42    CMP	R6, #66
0x0EB0	0xD102    BNE	L_GPIO_Config25
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32l1xx.c, 116 :: 		
0x0EB2	0x2300    MOVS	R3, #0
0x0EB4	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32l1xx.c, 117 :: 		
0x0EB6	0xE0C5    B	L_end_GPIO_Config
;__Lib_GPIO_32l1xx.c, 118 :: 		
L_GPIO_Config25:
;__Lib_GPIO_32l1xx.c, 119 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config23:
;__Lib_GPIO_32l1xx.c, 121 :: 		
0x0EB8	0xF0060301  AND	R3, R6, #1
0x0EBC	0xB10B    CBZ	R3, L_GPIO_Config26
;__Lib_GPIO_32l1xx.c, 122 :: 		
; mode start address is: 0 (R0)
0x0EBE	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x0EC0	0xE00A    B	L_GPIO_Config27
L_GPIO_Config26:
;__Lib_GPIO_32l1xx.c, 123 :: 		
0x0EC2	0xF0060308  AND	R3, R6, #8
0x0EC6	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32l1xx.c, 124 :: 		
; mode start address is: 0 (R0)
0x0EC8	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x0ECA	0xE005    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32l1xx.c, 125 :: 		
0x0ECC	0xF0060304  AND	R3, R6, #4
0x0ED0	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32l1xx.c, 126 :: 		
; mode start address is: 0 (R0)
0x0ED2	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x0ED4	0xE000    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32l1xx.c, 128 :: 		
; mode start address is: 0 (R0)
0x0ED6	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config27:
;__Lib_GPIO_32l1xx.c, 130 :: 		
; mode start address is: 0 (R0)
0x0ED8	0xF4062301  AND	R3, R6, #528384
0x0EDC	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32l1xx.c, 131 :: 		
; speed start address is: 4 (R1)
0x0EDE	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x0EE0	0xE00A    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32l1xx.c, 132 :: 		
0x0EE2	0xF4066300  AND	R3, R6, #2048
0x0EE6	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32l1xx.c, 133 :: 		
; speed start address is: 4 (R1)
0x0EE8	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x0EEA	0xE005    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32l1xx.c, 134 :: 		
0x0EEC	0xF4066380  AND	R3, R6, #1024
0x0EF0	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32l1xx.c, 135 :: 		
; speed start address is: 4 (R1)
0x0EF2	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x0EF4	0xE000    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32l1xx.c, 137 :: 		
; speed start address is: 4 (R1)
0x0EF6	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config33:
;__Lib_GPIO_32l1xx.c, 139 :: 		
; speed start address is: 4 (R1)
0x0EF8	0xF0060320  AND	R3, R6, #32
0x0EFC	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32l1xx.c, 140 :: 		
; otype start address is: 8 (R2)
0x0EFE	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x0F00	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32l1xx.c, 142 :: 		
; otype start address is: 8 (R2)
0x0F02	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config39:
;__Lib_GPIO_32l1xx.c, 144 :: 		
; otype start address is: 8 (R2)
0x0F04	0xF4067380  AND	R3, R6, #256
0x0F08	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32l1xx.c, 145 :: 		
; pull start address is: 12 (R3)
0x0F0A	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x0F0C	0xE005    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32l1xx.c, 146 :: 		
0x0F0E	0xF0060380  AND	R3, R6, #128
0x0F12	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32l1xx.c, 147 :: 		
; pull start address is: 12 (R3)
0x0F14	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x0F16	0xE000    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32l1xx.c, 149 :: 		
; pull start address is: 12 (R3)
0x0F18	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config43:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config41:
;__Lib_GPIO_32l1xx.c, 153 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x0F1A	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x0F1E	0x9201    STR	R2, [SP, #4]
0x0F20	0xFA1FF985  UXTH	R9, R5
0x0F24	0x46B0    MOV	R8, R6
0x0F26	0x4606    MOV	R6, R0
0x0F28	0x4618    MOV	R0, R3
0x0F2A	0x460A    MOV	R2, R1
0x0F2C	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config44:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x0F2E	0xF1BA0F10  CMP	R10, #16
0x0F32	0xF0808087  BCS	L_GPIO_Config45
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32l1xx.c, 155 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x0F36	0xF04F0301  MOV	R3, #1
0x0F3A	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32l1xx.c, 157 :: 		
0x0F3E	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32l1xx.c, 159 :: 		
0x0F42	0x42A3    CMP	R3, R4
0x0F44	0xF040807B  BNE	L_GPIO_Config47
;__Lib_GPIO_32l1xx.c, 161 :: 		
0x0F48	0xEA4F044A  LSL	R4, R10, #1
0x0F4C	0xF04F0303  MOV	R3, #3
0x0F50	0x40A3    LSLS	R3, R4
0x0F52	0x43DC    MVN	R4, R3
0x0F54	0x683B    LDR	R3, [R7, #0]
0x0F56	0x4023    ANDS	R3, R4
0x0F58	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32l1xx.c, 162 :: 		
0x0F5A	0xEA4F034A  LSL	R3, R10, #1
0x0F5E	0xFA06F403  LSL	R4, R6, R3
0x0F62	0x683B    LDR	R3, [R7, #0]
0x0F64	0x4323    ORRS	R3, R4
0x0F66	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32l1xx.c, 164 :: 		
0x0F68	0xF008030C  AND	R3, R8, #12
0x0F6C	0xB33B    CBZ	R3, L_GPIO_Config48
;__Lib_GPIO_32l1xx.c, 167 :: 		
0x0F6E	0xF2070508  ADDW	R5, R7, #8
0x0F72	0xEA4F044A  LSL	R4, R10, #1
0x0F76	0xF04F0303  MOV	R3, #3
0x0F7A	0x40A3    LSLS	R3, R4
0x0F7C	0x43DC    MVN	R4, R3
0x0F7E	0x682B    LDR	R3, [R5, #0]
0x0F80	0x4023    ANDS	R3, R4
0x0F82	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32l1xx.c, 168 :: 		
0x0F84	0xF2070508  ADDW	R5, R7, #8
0x0F88	0xEA4F034A  LSL	R3, R10, #1
0x0F8C	0xFA02F403  LSL	R4, R2, R3
0x0F90	0x682B    LDR	R3, [R5, #0]
0x0F92	0x4323    ORRS	R3, R4
0x0F94	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32l1xx.c, 171 :: 		
0x0F96	0x1D3D    ADDS	R5, R7, #4
0x0F98	0xFA1FF48A  UXTH	R4, R10
0x0F9C	0xF04F0301  MOV	R3, #1
0x0FA0	0x40A3    LSLS	R3, R4
0x0FA2	0x43DC    MVN	R4, R3
0x0FA4	0x682B    LDR	R3, [R5, #0]
0x0FA6	0x4023    ANDS	R3, R4
0x0FA8	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32l1xx.c, 172 :: 		
0x0FAA	0x1D3D    ADDS	R5, R7, #4
0x0FAC	0xFA1FF48A  UXTH	R4, R10
0x0FB0	0xB28B    UXTH	R3, R1
0x0FB2	0xFA03F404  LSL	R4, R3, R4
0x0FB6	0xB2A4    UXTH	R4, R4
0x0FB8	0x682B    LDR	R3, [R5, #0]
0x0FBA	0x4323    ORRS	R3, R4
0x0FBC	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32l1xx.c, 173 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32l1xx.c, 176 :: 		
0x0FBE	0xF207050C  ADDW	R5, R7, #12
0x0FC2	0xFA1FF38A  UXTH	R3, R10
0x0FC6	0x005C    LSLS	R4, R3, #1
0x0FC8	0xB2A4    UXTH	R4, R4
0x0FCA	0xF04F0303  MOV	R3, #3
0x0FCE	0x40A3    LSLS	R3, R4
0x0FD0	0x43DC    MVN	R4, R3
0x0FD2	0x682B    LDR	R3, [R5, #0]
0x0FD4	0x4023    ANDS	R3, R4
0x0FD6	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32l1xx.c, 177 :: 		
0x0FD8	0xF207050C  ADDW	R5, R7, #12
0x0FDC	0xEA4F034A  LSL	R3, R10, #1
0x0FE0	0xFA00F403  LSL	R4, R0, R3
0x0FE4	0x682B    LDR	R3, [R5, #0]
0x0FE6	0x4323    ORRS	R3, R4
0x0FE8	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32l1xx.c, 179 :: 		
0x0FEA	0xF0080308  AND	R3, R8, #8
0x0FEE	0xB333    CBZ	R3, L_GPIO_Config49
;__Lib_GPIO_32l1xx.c, 180 :: 		
0x0FF0	0xF4080370  AND	R3, R8, #15728640
0x0FF4	0x0D1B    LSRS	R3, R3, #20
0x0FF6	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32l1xx.c, 181 :: 		
0x0FFA	0xF1BA0F07  CMP	R10, #7
0x0FFE	0xD905    BLS	L_GPIO_Config50
;__Lib_GPIO_32l1xx.c, 182 :: 		
0x1000	0xF2070324  ADDW	R3, R7, #36
0x1004	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32l1xx.c, 183 :: 		
0x1006	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32l1xx.c, 184 :: 		
; pos end address is: 20 (R5)
0x100A	0xE003    B	L_GPIO_Config51
L_GPIO_Config50:
;__Lib_GPIO_32l1xx.c, 185 :: 		
0x100C	0xF2070320  ADDW	R3, R7, #32
0x1010	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32l1xx.c, 186 :: 		
; pos start address is: 20 (R5)
0x1012	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32l1xx.c, 187 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32l1xx.c, 188 :: 		
; pos start address is: 20 (R5)
0x1014	0x00AC    LSLS	R4, R5, #2
0x1016	0xF04F030F  MOV	R3, #15
0x101A	0x40A3    LSLS	R3, R4
0x101C	0x43DC    MVN	R4, R3
0x101E	0x9B02    LDR	R3, [SP, #8]
0x1020	0x681B    LDR	R3, [R3, #0]
0x1022	0xEA030404  AND	R4, R3, R4, LSL #0
0x1026	0x9B02    LDR	R3, [SP, #8]
0x1028	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32l1xx.c, 189 :: 		
0x102A	0xF89D400C  LDRB	R4, [SP, #12]
0x102E	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x1030	0x409C    LSLS	R4, R3
0x1032	0x9B02    LDR	R3, [SP, #8]
0x1034	0x681B    LDR	R3, [R3, #0]
0x1036	0xEA430404  ORR	R4, R3, R4, LSL #0
0x103A	0x9B02    LDR	R3, [SP, #8]
0x103C	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32l1xx.c, 190 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32l1xx.c, 192 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32l1xx.c, 153 :: 		
0x103E	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32l1xx.c, 193 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x1042	0xE774    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32l1xx.c, 194 :: 		
L_end_GPIO_Config:
0x1044	0xF8DDE000  LDR	LR, [SP, #0]
0x1048	0xB004    ADD	SP, SP, #16
0x104A	0x4770    BX	LR
0x104C	0xFC00FFFF  	#-1024
0x1050	0x0000FFFF  	#-65536
0x1054	0x00140008  	#524308
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32l1xx.c, 35 :: 		
; gpio_port start address is: 0 (R0)
0x01DC	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32l1xx.c, 37 :: 		
0x01DE	0x491B    LDR	R1, [PC, #108]
0x01E0	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x01E4	0x4608    MOV	R0, R1
;__Lib_GPIO_32l1xx.c, 38 :: 		
; pos start address is: 8 (R2)
0x01E6	0x2200    MOVS	R2, #0
;__Lib_GPIO_32l1xx.c, 39 :: 		
0x01E8	0xE00F    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32l1xx.c, 40 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x01EA	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x01EC	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32l1xx.c, 41 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x01EE	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x01F0	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32l1xx.c, 42 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x01F2	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x01F4	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32l1xx.c, 43 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x01F6	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x01F8	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32l1xx.c, 44 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x01FA	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x01FC	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32l1xx.c, 45 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x01FE	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0200	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32l1xx.c, 46 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0202	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0204	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32l1xx.c, 47 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x0206	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0208	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32l1xx.c, 48 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x020A	0x4911    LDR	R1, [PC, #68]
0x020C	0x4288    CMP	R0, R1
0x020E	0xD0EC    BEQ	L_GPIO_Clk_Enable2
0x0210	0x4910    LDR	R1, [PC, #64]
0x0212	0x4288    CMP	R0, R1
0x0214	0xD0EB    BEQ	L_GPIO_Clk_Enable3
0x0216	0x4910    LDR	R1, [PC, #64]
0x0218	0x4288    CMP	R0, R1
0x021A	0xD0EA    BEQ	L_GPIO_Clk_Enable4
0x021C	0x490F    LDR	R1, [PC, #60]
0x021E	0x4288    CMP	R0, R1
0x0220	0xD0E9    BEQ	L_GPIO_Clk_Enable5
0x0222	0x490F    LDR	R1, [PC, #60]
0x0224	0x4288    CMP	R0, R1
0x0226	0xD0E8    BEQ	L_GPIO_Clk_Enable6
0x0228	0x490E    LDR	R1, [PC, #56]
0x022A	0x4288    CMP	R0, R1
0x022C	0xD0E7    BEQ	L_GPIO_Clk_Enable7
0x022E	0x490E    LDR	R1, [PC, #56]
0x0230	0x4288    CMP	R0, R1
0x0232	0xD0E6    BEQ	L_GPIO_Clk_Enable8
0x0234	0x490D    LDR	R1, [PC, #52]
0x0236	0x4288    CMP	R0, R1
0x0238	0xD0E5    BEQ	L_GPIO_Clk_Enable9
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x023A	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32l1xx.c, 50 :: 		
; pos start address is: 0 (R0)
0x023C	0x490C    LDR	R1, [PC, #48]
0x023E	0x6809    LDR	R1, [R1, #0]
0x0240	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0244	0x490A    LDR	R1, [PC, #40]
0x0246	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32l1xx.c, 51 :: 		
L_end_GPIO_Clk_Enable:
0x0248	0xB001    ADD	SP, SP, #4
0x024A	0x4770    BX	LR
0x024C	0xFC00FFFF  	#-1024
0x0250	0x00004002  	#1073872896
0x0254	0x04004002  	#1073873920
0x0258	0x08004002  	#1073874944
0x025C	0x0C004002  	#1073875968
0x0260	0x10004002  	#1073876992
0x0264	0x14004002  	#1073878016
0x0268	0x18004002  	#1073879040
0x026C	0x1C004002  	#1073880064
0x0270	0x381C4002  	RCC_AHBENR+0
; end of _GPIO_Clk_Enable
_Init_LCD:
;lcd_my_func.c, 43 :: 		void Init_LCD()
0x3240	0xB081    SUB	SP, SP, #4
0x3242	0xF8CDE000  STR	LR, [SP, #0]
;lcd_my_func.c, 45 :: 		LCD_GLASS_Init();
0x3246	0xF7FFFE31  BL	_LCD_GLASS_Init+0
;lcd_my_func.c, 46 :: 		}
L_end_Init_LCD:
0x324A	0xF8DDE000  LDR	LR, [SP, #0]
0x324E	0xB001    ADD	SP, SP, #4
0x3250	0x4770    BX	LR
; end of _Init_LCD
_LCD_GLASS_Init:
;glass_lcd.c, 5 :: 		void LCD_GLASS_Init()
0x2EAC	0xB081    SUB	SP, SP, #4
0x2EAE	0xF8CDE000  STR	LR, [SP, #0]
;glass_lcd.c, 7 :: 		LCD_GLASS_Configure_GPIO();
0x2EB2	0xF7FEF919  BL	_LCD_GLASS_Configure_GPIO+0
;glass_lcd.c, 8 :: 		RCC_APB1ENRbits.PWREN = true;
0x2EB6	0x2201    MOVS	R2, #1
0x2EB8	0x4850    LDR	R0, [PC, #320]
0x2EBA	0x6002    STR	R2, [R0, #0]
;glass_lcd.c, 9 :: 		RCC_APB1ENRbits.LCDEN = true;
0x2EBC	0x4850    LDR	R0, [PC, #320]
0x2EBE	0x6002    STR	R2, [R0, #0]
;glass_lcd.c, 10 :: 		PWR_CRbits.DBP = true;
0x2EC0	0x4850    LDR	R0, [PC, #320]
0x2EC2	0x6002    STR	R2, [R0, #0]
;glass_lcd.c, 11 :: 		RTC_software_reset_state(true);
0x2EC4	0x4850    LDR	R0, [PC, #320]
0x2EC6	0x6002    STR	R2, [R0, #0]
;glass_lcd.c, 12 :: 		RTC_software_reset_state(false);
0x2EC8	0x2100    MOVS	R1, #0
0x2ECA	0x484F    LDR	R0, [PC, #316]
0x2ECC	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 13 :: 		LSE_on_state(true);
0x2ECE	0x484F    LDR	R0, [PC, #316]
0x2ED0	0x6002    STR	R2, [R0, #0]
;glass_lcd.c, 14 :: 		while(RCC_CSRbits.LSERDY == false);
L_LCD_GLASS_Init0:
0x2ED2	0x484F    LDR	R0, [PC, #316]
0x2ED4	0x6800    LDR	R0, [R0, #0]
0x2ED6	0xB900    CBNZ	R0, L_LCD_GLASS_Init1
0x2ED8	0xE7FB    B	L_LCD_GLASS_Init0
L_LCD_GLASS_Init1:
;glass_lcd.c, 15 :: 		RTC_and_LCD_clock_source_selection(LSE_oscillator);
0x2EDA	0x484E    LDR	R0, [PC, #312]
0x2EDC	0x6801    LDR	R1, [R0, #0]
0x2EDE	0xF46F3040  MVN	R0, #196608
0x2EE2	0x4001    ANDS	R1, R0
0x2EE4	0x484B    LDR	R0, [PC, #300]
0x2EE6	0x6001    STR	R1, [R0, #0]
0x2EE8	0x484A    LDR	R0, [PC, #296]
0x2EEA	0x6800    LDR	R0, [R0, #0]
0x2EEC	0xF4403180  ORR	R1, R0, #65536
0x2EF0	0x4848    LDR	R0, [PC, #288]
0x2EF2	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 16 :: 		LCD_Master_Reset();
0x2EF4	0xF7FEF8DA  BL	_LCD_Master_Reset+0
;glass_lcd.c, 17 :: 		high_drive_enable(false);
0x2EF8	0x2200    MOVS	R2, #0
0x2EFA	0x4847    LDR	R0, [PC, #284]
0x2EFC	0x6002    STR	R2, [R0, #0]
;glass_lcd.c, 18 :: 		start_of_frame_interrupt_enable(false);
0x2EFE	0x4847    LDR	R0, [PC, #284]
0x2F00	0x6002    STR	R2, [R0, #0]
;glass_lcd.c, 19 :: 		update_display_done_interrupt_enable(false);
0x2F02	0x4847    LDR	R0, [PC, #284]
0x2F04	0x6002    STR	R2, [R0, #0]
;glass_lcd.c, 20 :: 		set_bias(_1_3_bias);
0x2F06	0x4847    LDR	R0, [PC, #284]
0x2F08	0x6801    LDR	R1, [R0, #0]
0x2F0A	0xF06F0060  MVN	R0, #96
0x2F0E	0x4001    ANDS	R1, R0
0x2F10	0x4844    LDR	R0, [PC, #272]
0x2F12	0x6001    STR	R1, [R0, #0]
0x2F14	0x4843    LDR	R0, [PC, #268]
0x2F16	0x6800    LDR	R0, [R0, #0]
0x2F18	0xF0400140  ORR	R1, R0, #64
0x2F1C	0x4841    LDR	R0, [PC, #260]
0x2F1E	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 21 :: 		select_duty(_1_4_duty);
0x2F20	0x4840    LDR	R0, [PC, #256]
0x2F22	0x6801    LDR	R1, [R0, #0]
0x2F24	0xF06F001C  MVN	R0, #28
0x2F28	0x4001    ANDS	R1, R0
0x2F2A	0x483E    LDR	R0, [PC, #248]
0x2F2C	0x6001    STR	R1, [R0, #0]
0x2F2E	0x483D    LDR	R0, [PC, #244]
0x2F30	0x6800    LDR	R0, [R0, #0]
0x2F32	0xF040010C  ORR	R1, R0, #12
0x2F36	0x483B    LDR	R0, [PC, #236]
0x2F38	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 22 :: 		mux_segment_enable(true);
0x2F3A	0x2101    MOVS	R1, #1
0x2F3C	0x483A    LDR	R0, [PC, #232]
0x2F3E	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 23 :: 		voltage_source_selection(internal);
0x2F40	0x483A    LDR	R0, [PC, #232]
0x2F42	0x6002    STR	R2, [R0, #0]
;glass_lcd.c, 24 :: 		DIV_clock_divider(ck_ps_div_17);
0x2F44	0x483A    LDR	R0, [PC, #232]
0x2F46	0x6801    LDR	R1, [R0, #0]
0x2F48	0xF46F1070  MVN	R0, #3932160
0x2F4C	0x4001    ANDS	R1, R0
0x2F4E	0x4838    LDR	R0, [PC, #224]
0x2F50	0x6001    STR	R1, [R0, #0]
0x2F52	0x4837    LDR	R0, [PC, #220]
0x2F54	0x6800    LDR	R0, [R0, #0]
0x2F56	0xF4402180  ORR	R1, R0, #262144
0x2F5A	0x4835    LDR	R0, [PC, #212]
0x2F5C	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 25 :: 		PS_16_bit_prescaler(LCDCLK_div_8);
0x2F5E	0x4834    LDR	R0, [PC, #208]
0x2F60	0x6801    LDR	R1, [R0, #0]
0x2F62	0xF06F7070  MVN	R0, #62914560
0x2F66	0x4001    ANDS	R1, R0
0x2F68	0x4831    LDR	R0, [PC, #196]
0x2F6A	0x6001    STR	R1, [R0, #0]
0x2F6C	0x4830    LDR	R0, [PC, #192]
0x2F6E	0x6800    LDR	R0, [R0, #0]
0x2F70	0xF4400140  ORR	R1, R0, #12582912
0x2F74	0x482E    LDR	R0, [PC, #184]
0x2F76	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 26 :: 		blink_mode_selection(blink_disabled);
0x2F78	0x482D    LDR	R0, [PC, #180]
0x2F7A	0x6801    LDR	R1, [R0, #0]
0x2F7C	0xF46F3040  MVN	R0, #196608
0x2F80	0x4001    ANDS	R1, R0
0x2F82	0x482B    LDR	R0, [PC, #172]
0x2F84	0x6001    STR	R1, [R0, #0]
0x2F86	0x482A    LDR	R0, [PC, #168]
0x2F88	0x6801    LDR	R1, [R0, #0]
0x2F8A	0x4829    LDR	R0, [PC, #164]
0x2F8C	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 27 :: 		dead_time_duration(no_dead_time);
0x2F8E	0x4828    LDR	R0, [PC, #160]
0x2F90	0x6801    LDR	R1, [R0, #0]
0x2F92	0xF46F7060  MVN	R0, #896
0x2F96	0x4001    ANDS	R1, R0
0x2F98	0x4825    LDR	R0, [PC, #148]
0x2F9A	0x6001    STR	R1, [R0, #0]
0x2F9C	0x4824    LDR	R0, [PC, #144]
0x2F9E	0x6801    LDR	R1, [R0, #0]
0x2FA0	0x4823    LDR	R0, [PC, #140]
0x2FA2	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 28 :: 		pulse_ON_duration(_0_4_ck_ps);
0x2FA4	0x4822    LDR	R0, [PC, #136]
0x2FA6	0x6801    LDR	R1, [R0, #0]
0x2FA8	0xF06F0070  MVN	R0, #112
0x2FAC	0x4001    ANDS	R1, R0
0x2FAE	0x4820    LDR	R0, [PC, #128]
0x2FB0	0x6001    STR	R1, [R0, #0]
0x2FB2	0x481F    LDR	R0, [PC, #124]
0x2FB4	0x6801    LDR	R1, [R0, #0]
0x2FB6	0x481E    LDR	R0, [PC, #120]
0x2FB8	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 29 :: 		contrast_control(VLCD0_100_VLCD4);
0x2FBA	0x481D    LDR	R0, [PC, #116]
0x2FBC	0x6801    LDR	R1, [R0, #0]
0x2FBE	0xF46F6040  MVN	R0, #3072
0x2FC2	0x4001    ANDS	R1, R0
0x2FC4	0x481A    LDR	R0, [PC, #104]
0x2FC6	0x6001    STR	R1, [R0, #0]
0x2FC8	0x4819    LDR	R0, [PC, #100]
0x2FCA	0x6801    LDR	R1, [R0, #0]
0x2FCC	0x4818    LDR	R0, [PC, #96]
0x2FCE	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 30 :: 		while(LCD_SRbits.FCRSF == false);
L_LCD_GLASS_Init29:
0x2FD0	0x4818    LDR	R0, [PC, #96]
0x2FD2	0x6800    LDR	R0, [R0, #0]
0x2FD4	0xB900    CBNZ	R0, L_LCD_GLASS_Init30
0x2FD6	0xE7FB    B	L_LCD_GLASS_Init29
L_LCD_GLASS_Init30:
;glass_lcd.c, 31 :: 		LCD_controller_enable(true);
0x2FD8	0x2101    MOVS	R1, #1
0x2FDA	0x4817    LDR	R0, [PC, #92]
0x2FDC	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 32 :: 		while(LCD_SRbits.RDY == false);
L_LCD_GLASS_Init31:
0x2FDE	0x4817    LDR	R0, [PC, #92]
0x2FE0	0x6800    LDR	R0, [R0, #0]
0x2FE2	0xB900    CBNZ	R0, L_LCD_GLASS_Init32
0x2FE4	0xE7FB    B	L_LCD_GLASS_Init31
L_LCD_GLASS_Init32:
;glass_lcd.c, 33 :: 		while(LCD_SRbits.ENS == false);
L_LCD_GLASS_Init33:
0x2FE6	0x4816    LDR	R0, [PC, #88]
0x2FE8	0x6800    LDR	R0, [R0, #0]
0x2FEA	0xB900    CBNZ	R0, L_LCD_GLASS_Init34
0x2FEC	0xE7FB    B	L_LCD_GLASS_Init33
L_LCD_GLASS_Init34:
;glass_lcd.c, 34 :: 		LCD_GLASS_Clear();
0x2FEE	0xF7FFFA19  BL	_LCD_GLASS_Clear+0
;glass_lcd.c, 36 :: 		}
L_end_LCD_GLASS_Init:
0x2FF2	0xF8DDE000  LDR	LR, [SP, #0]
0x2FF6	0xB001    ADD	SP, SP, #4
0x2FF8	0x4770    BX	LR
0x2FFA	0xBF00    NOP
0x2FFC	0x04F04247  	RCC_APB1ENRbits+0
0x3000	0x04A44247  	RCC_APB1ENRbits+0
0x3004	0x0020420E  	PWR_CRbits+0
0x3008	0x06DC4247  	RCC_CSRbits+0
0x300C	0x06A04247  	RCC_CSRbits+0
0x3010	0x06A44247  	RCC_CSRbits+0
0x3014	0x38344002  	RCC_CSR+0
0x3018	0x80804204  	LCD_FCRbits+0
0x301C	0x80844204  	LCD_FCRbits+0
0x3020	0x808C4204  	LCD_FCRbits+0
0x3024	0x24004000  	LCD_CR+0
0x3028	0x801C4204  	LCD_CRbits+0
0x302C	0x80044204  	LCD_CRbits+0
0x3030	0x24044000  	LCD_FCR+0
0x3034	0x81144204  	LCD_SRbits+0
0x3038	0x80004204  	LCD_CRbits+0
0x303C	0x81104204  	LCD_SRbits+0
0x3040	0x81004204  	LCD_SRbits+0
; end of _LCD_GLASS_Init
_LCD_GLASS_Configure_GPIO:
;glass_lcd.c, 62 :: 		void LCD_GLASS_Configure_GPIO()
;glass_lcd.c, 64 :: 		enable_GPIOA(true);
0x10E8	0x2101    MOVS	R1, #1
0x10EA	0x4882    LDR	R0, [PC, #520]
0x10EC	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 65 :: 		setup_GPIOA(1, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x10EE	0x4882    LDR	R0, [PC, #520]
0x10F0	0x6801    LDR	R1, [R0, #0]
0x10F2	0xF06F000C  MVN	R0, #12
0x10F6	0x4001    ANDS	R1, R0
0x10F8	0x487F    LDR	R0, [PC, #508]
0x10FA	0x6001    STR	R1, [R0, #0]
0x10FC	0x487E    LDR	R0, [PC, #504]
0x10FE	0x6800    LDR	R0, [R0, #0]
0x1100	0xF0400108  ORR	R1, R0, #8
0x1104	0x487C    LDR	R0, [PC, #496]
0x1106	0x6001    STR	R1, [R0, #0]
0x1108	0x487C    LDR	R0, [PC, #496]
0x110A	0x6801    LDR	R1, [R0, #0]
0x110C	0xF06F0002  MVN	R0, #2
0x1110	0x4001    ANDS	R1, R0
0x1112	0x487A    LDR	R0, [PC, #488]
0x1114	0x6001    STR	R1, [R0, #0]
0x1116	0x4879    LDR	R0, [PC, #484]
0x1118	0x6800    LDR	R0, [R0, #0]
0x111A	0xF0400102  ORR	R1, R0, #2
0x111E	0x4877    LDR	R0, [PC, #476]
0x1120	0x6001    STR	R1, [R0, #0]
0x1122	0x4877    LDR	R0, [PC, #476]
0x1124	0x6801    LDR	R1, [R0, #0]
0x1126	0xF06F000C  MVN	R0, #12
0x112A	0x4001    ANDS	R1, R0
0x112C	0x4874    LDR	R0, [PC, #464]
0x112E	0x6001    STR	R1, [R0, #0]
0x1130	0x4873    LDR	R0, [PC, #460]
0x1132	0x6800    LDR	R0, [R0, #0]
0x1134	0xF040010C  ORR	R1, R0, #12
0x1138	0x4871    LDR	R0, [PC, #452]
0x113A	0x6001    STR	R1, [R0, #0]
0x113C	0x4871    LDR	R0, [PC, #452]
0x113E	0x6801    LDR	R1, [R0, #0]
0x1140	0xF06F000C  MVN	R0, #12
0x1144	0x4001    ANDS	R1, R0
0x1146	0x486F    LDR	R0, [PC, #444]
0x1148	0x6001    STR	R1, [R0, #0]
0x114A	0x486E    LDR	R0, [PC, #440]
0x114C	0x6801    LDR	R1, [R0, #0]
0x114E	0x486D    LDR	R0, [PC, #436]
0x1150	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 66 :: 		setup_GPIOA(2, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1152	0x4869    LDR	R0, [PC, #420]
0x1154	0x6801    LDR	R1, [R0, #0]
0x1156	0xF06F0030  MVN	R0, #48
0x115A	0x4001    ANDS	R1, R0
0x115C	0x4866    LDR	R0, [PC, #408]
0x115E	0x6001    STR	R1, [R0, #0]
0x1160	0x4865    LDR	R0, [PC, #404]
0x1162	0x6800    LDR	R0, [R0, #0]
0x1164	0xF0400120  ORR	R1, R0, #32
0x1168	0x4863    LDR	R0, [PC, #396]
0x116A	0x6001    STR	R1, [R0, #0]
0x116C	0x4863    LDR	R0, [PC, #396]
0x116E	0x6801    LDR	R1, [R0, #0]
0x1170	0xF06F0004  MVN	R0, #4
0x1174	0x4001    ANDS	R1, R0
0x1176	0x4861    LDR	R0, [PC, #388]
0x1178	0x6001    STR	R1, [R0, #0]
0x117A	0x4860    LDR	R0, [PC, #384]
0x117C	0x6800    LDR	R0, [R0, #0]
0x117E	0xF0400104  ORR	R1, R0, #4
0x1182	0x485E    LDR	R0, [PC, #376]
0x1184	0x6001    STR	R1, [R0, #0]
0x1186	0x485E    LDR	R0, [PC, #376]
0x1188	0x6801    LDR	R1, [R0, #0]
0x118A	0xF06F0030  MVN	R0, #48
0x118E	0x4001    ANDS	R1, R0
0x1190	0x485B    LDR	R0, [PC, #364]
0x1192	0x6001    STR	R1, [R0, #0]
0x1194	0x485A    LDR	R0, [PC, #360]
0x1196	0x6800    LDR	R0, [R0, #0]
0x1198	0xF0400130  ORR	R1, R0, #48
0x119C	0x4858    LDR	R0, [PC, #352]
0x119E	0x6001    STR	R1, [R0, #0]
0x11A0	0x4858    LDR	R0, [PC, #352]
0x11A2	0x6801    LDR	R1, [R0, #0]
0x11A4	0xF06F0030  MVN	R0, #48
0x11A8	0x4001    ANDS	R1, R0
0x11AA	0x4856    LDR	R0, [PC, #344]
0x11AC	0x6001    STR	R1, [R0, #0]
0x11AE	0x4855    LDR	R0, [PC, #340]
0x11B0	0x6801    LDR	R1, [R0, #0]
0x11B2	0x4854    LDR	R0, [PC, #336]
0x11B4	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 67 :: 		setup_GPIOA(3, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x11B6	0x4850    LDR	R0, [PC, #320]
0x11B8	0x6801    LDR	R1, [R0, #0]
0x11BA	0xF06F00C0  MVN	R0, #192
0x11BE	0x4001    ANDS	R1, R0
0x11C0	0x484D    LDR	R0, [PC, #308]
0x11C2	0x6001    STR	R1, [R0, #0]
0x11C4	0x484C    LDR	R0, [PC, #304]
0x11C6	0x6800    LDR	R0, [R0, #0]
0x11C8	0xF0400180  ORR	R1, R0, #128
0x11CC	0x484A    LDR	R0, [PC, #296]
0x11CE	0x6001    STR	R1, [R0, #0]
0x11D0	0x484A    LDR	R0, [PC, #296]
0x11D2	0x6801    LDR	R1, [R0, #0]
0x11D4	0xF06F0008  MVN	R0, #8
0x11D8	0x4001    ANDS	R1, R0
0x11DA	0x4848    LDR	R0, [PC, #288]
0x11DC	0x6001    STR	R1, [R0, #0]
0x11DE	0x4847    LDR	R0, [PC, #284]
0x11E0	0x6800    LDR	R0, [R0, #0]
0x11E2	0xF0400108  ORR	R1, R0, #8
0x11E6	0x4845    LDR	R0, [PC, #276]
0x11E8	0x6001    STR	R1, [R0, #0]
0x11EA	0x4845    LDR	R0, [PC, #276]
0x11EC	0x6801    LDR	R1, [R0, #0]
0x11EE	0xF06F00C0  MVN	R0, #192
0x11F2	0x4001    ANDS	R1, R0
0x11F4	0x4842    LDR	R0, [PC, #264]
0x11F6	0x6001    STR	R1, [R0, #0]
0x11F8	0x4841    LDR	R0, [PC, #260]
0x11FA	0x6800    LDR	R0, [R0, #0]
0x11FC	0xF04001C0  ORR	R1, R0, #192
0x1200	0x483F    LDR	R0, [PC, #252]
0x1202	0x6001    STR	R1, [R0, #0]
0x1204	0x483F    LDR	R0, [PC, #252]
0x1206	0x6801    LDR	R1, [R0, #0]
0x1208	0xF06F00C0  MVN	R0, #192
0x120C	0x4001    ANDS	R1, R0
0x120E	0x483D    LDR	R0, [PC, #244]
0x1210	0x6001    STR	R1, [R0, #0]
0x1212	0x483C    LDR	R0, [PC, #240]
0x1214	0x6801    LDR	R1, [R0, #0]
0x1216	0x483B    LDR	R0, [PC, #236]
0x1218	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 68 :: 		setup_GPIOA(8, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x121A	0x4837    LDR	R0, [PC, #220]
0x121C	0x6801    LDR	R1, [R0, #0]
0x121E	0xF46F3040  MVN	R0, #196608
0x1222	0x4001    ANDS	R1, R0
0x1224	0x4834    LDR	R0, [PC, #208]
0x1226	0x6001    STR	R1, [R0, #0]
0x1228	0x4833    LDR	R0, [PC, #204]
0x122A	0x6800    LDR	R0, [R0, #0]
0x122C	0xF4403100  ORR	R1, R0, #131072
0x1230	0x4831    LDR	R0, [PC, #196]
0x1232	0x6001    STR	R1, [R0, #0]
0x1234	0x4831    LDR	R0, [PC, #196]
0x1236	0x6801    LDR	R1, [R0, #0]
0x1238	0xF46F7080  MVN	R0, #256
0x123C	0x4001    ANDS	R1, R0
0x123E	0x482F    LDR	R0, [PC, #188]
0x1240	0x6001    STR	R1, [R0, #0]
0x1242	0x482E    LDR	R0, [PC, #184]
0x1244	0x6800    LDR	R0, [R0, #0]
0x1246	0xF4407180  ORR	R1, R0, #256
0x124A	0x482C    LDR	R0, [PC, #176]
0x124C	0x6001    STR	R1, [R0, #0]
0x124E	0x482C    LDR	R0, [PC, #176]
0x1250	0x6801    LDR	R1, [R0, #0]
0x1252	0xF46F3040  MVN	R0, #196608
0x1256	0x4001    ANDS	R1, R0
0x1258	0x4829    LDR	R0, [PC, #164]
0x125A	0x6001    STR	R1, [R0, #0]
0x125C	0x4828    LDR	R0, [PC, #160]
0x125E	0x6800    LDR	R0, [R0, #0]
0x1260	0xF4403140  ORR	R1, R0, #196608
0x1264	0x4826    LDR	R0, [PC, #152]
0x1266	0x6001    STR	R1, [R0, #0]
0x1268	0x4826    LDR	R0, [PC, #152]
0x126A	0x6801    LDR	R1, [R0, #0]
0x126C	0xF46F3040  MVN	R0, #196608
0x1270	0x4001    ANDS	R1, R0
0x1272	0x4824    LDR	R0, [PC, #144]
0x1274	0x6001    STR	R1, [R0, #0]
0x1276	0x4823    LDR	R0, [PC, #140]
0x1278	0x6801    LDR	R1, [R0, #0]
0x127A	0x4822    LDR	R0, [PC, #136]
0x127C	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 69 :: 		setup_GPIOA(9, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x127E	0x481E    LDR	R0, [PC, #120]
0x1280	0x6801    LDR	R1, [R0, #0]
0x1282	0xF46F2040  MVN	R0, #786432
0x1286	0x4001    ANDS	R1, R0
0x1288	0x481B    LDR	R0, [PC, #108]
0x128A	0x6001    STR	R1, [R0, #0]
0x128C	0x481A    LDR	R0, [PC, #104]
0x128E	0x6800    LDR	R0, [R0, #0]
0x1290	0xF4402100  ORR	R1, R0, #524288
0x1294	0x4818    LDR	R0, [PC, #96]
0x1296	0x6001    STR	R1, [R0, #0]
0x1298	0x4818    LDR	R0, [PC, #96]
0x129A	0x6801    LDR	R1, [R0, #0]
0x129C	0xF46F7000  MVN	R0, #512
0x12A0	0x4001    ANDS	R1, R0
0x12A2	0x4816    LDR	R0, [PC, #88]
0x12A4	0x6001    STR	R1, [R0, #0]
0x12A6	0x4815    LDR	R0, [PC, #84]
0x12A8	0x6800    LDR	R0, [R0, #0]
0x12AA	0xF4407100  ORR	R1, R0, #512
0x12AE	0x4813    LDR	R0, [PC, #76]
0x12B0	0x6001    STR	R1, [R0, #0]
0x12B2	0x4813    LDR	R0, [PC, #76]
0x12B4	0x6801    LDR	R1, [R0, #0]
0x12B6	0xF46F2040  MVN	R0, #786432
0x12BA	0x4001    ANDS	R1, R0
0x12BC	0x4810    LDR	R0, [PC, #64]
0x12BE	0x6001    STR	R1, [R0, #0]
0x12C0	0x480F    LDR	R0, [PC, #60]
0x12C2	0x6800    LDR	R0, [R0, #0]
0x12C4	0xF4402140  ORR	R1, R0, #786432
0x12C8	0x480D    LDR	R0, [PC, #52]
0x12CA	0x6001    STR	R1, [R0, #0]
0x12CC	0x480D    LDR	R0, [PC, #52]
0x12CE	0x6801    LDR	R1, [R0, #0]
0x12D0	0xF46F2040  MVN	R0, #786432
0x12D4	0x4001    ANDS	R1, R0
0x12D6	0x480B    LDR	R0, [PC, #44]
0x12D8	0x6001    STR	R1, [R0, #0]
0x12DA	0x480A    LDR	R0, [PC, #40]
0x12DC	0x6801    LDR	R1, [R0, #0]
0x12DE	0x4809    LDR	R0, [PC, #36]
0x12E0	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 70 :: 		setup_GPIOA(10, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x12E2	0x4805    LDR	R0, [PC, #20]
0x12E4	0x6801    LDR	R1, [R0, #0]
0x12E6	0xF46F1040  MVN	R0, #3145728
0x12EA	0x4001    ANDS	R1, R0
0x12EC	0x4802    LDR	R0, [PC, #8]
0x12EE	0x6001    STR	R1, [R0, #0]
0x12F0	0x4801    LDR	R0, [PC, #4]
0x12F2	0xE009    B	#18
0x12F4	0x03804247  	RCC_AHBENRbits+0
0x12F8	0x00004002  	GPIOA_MODER+0
0x12FC	0x00044002  	GPIOA_OTYPER+0
0x1300	0x00084002  	GPIOA_OSPEEDER+0
0x1304	0x000C4002  	GPIOA_PUPDR+0
0x1308	0x6800    LDR	R0, [R0, #0]
0x130A	0xF4401100  ORR	R1, R0, #2097152
0x130E	0x4884    LDR	R0, [PC, #528]
0x1310	0x6001    STR	R1, [R0, #0]
0x1312	0x4884    LDR	R0, [PC, #528]
0x1314	0x6801    LDR	R1, [R0, #0]
0x1316	0xF46F6080  MVN	R0, #1024
0x131A	0x4001    ANDS	R1, R0
0x131C	0x4881    LDR	R0, [PC, #516]
0x131E	0x6001    STR	R1, [R0, #0]
0x1320	0x4880    LDR	R0, [PC, #512]
0x1322	0x6800    LDR	R0, [R0, #0]
0x1324	0xF4406180  ORR	R1, R0, #1024
0x1328	0x487E    LDR	R0, [PC, #504]
0x132A	0x6001    STR	R1, [R0, #0]
0x132C	0x487E    LDR	R0, [PC, #504]
0x132E	0x6801    LDR	R1, [R0, #0]
0x1330	0xF46F1040  MVN	R0, #3145728
0x1334	0x4001    ANDS	R1, R0
0x1336	0x487C    LDR	R0, [PC, #496]
0x1338	0x6001    STR	R1, [R0, #0]
0x133A	0x487B    LDR	R0, [PC, #492]
0x133C	0x6800    LDR	R0, [R0, #0]
0x133E	0xF4401140  ORR	R1, R0, #3145728
0x1342	0x4879    LDR	R0, [PC, #484]
0x1344	0x6001    STR	R1, [R0, #0]
0x1346	0x4879    LDR	R0, [PC, #484]
0x1348	0x6801    LDR	R1, [R0, #0]
0x134A	0xF46F1040  MVN	R0, #3145728
0x134E	0x4001    ANDS	R1, R0
0x1350	0x4876    LDR	R0, [PC, #472]
0x1352	0x6001    STR	R1, [R0, #0]
0x1354	0x4875    LDR	R0, [PC, #468]
0x1356	0x6801    LDR	R1, [R0, #0]
0x1358	0x4874    LDR	R0, [PC, #464]
0x135A	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 71 :: 		setup_GPIOA(15, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x135C	0x4870    LDR	R0, [PC, #448]
0x135E	0x6801    LDR	R1, [R0, #0]
0x1360	0xF64F70FF  MOVW	R0, #65535
0x1364	0x4001    ANDS	R1, R0
0x1366	0x486E    LDR	R0, [PC, #440]
0x1368	0x6001    STR	R1, [R0, #0]
0x136A	0x486D    LDR	R0, [PC, #436]
0x136C	0x6800    LDR	R0, [R0, #0]
0x136E	0xF0404100  ORR	R1, R0, #-2147483648
0x1372	0x486B    LDR	R0, [PC, #428]
0x1374	0x6001    STR	R1, [R0, #0]
0x1376	0x486B    LDR	R0, [PC, #428]
0x1378	0x6801    LDR	R1, [R0, #0]
0x137A	0xF46F4000  MVN	R0, #32768
0x137E	0x4001    ANDS	R1, R0
0x1380	0x4868    LDR	R0, [PC, #416]
0x1382	0x6001    STR	R1, [R0, #0]
0x1384	0x4867    LDR	R0, [PC, #412]
0x1386	0x6800    LDR	R0, [R0, #0]
0x1388	0xF4404100  ORR	R1, R0, #32768
0x138C	0x4865    LDR	R0, [PC, #404]
0x138E	0x6001    STR	R1, [R0, #0]
0x1390	0x4865    LDR	R0, [PC, #404]
0x1392	0x6801    LDR	R1, [R0, #0]
0x1394	0xF64F70FF  MOVW	R0, #65535
0x1398	0x4001    ANDS	R1, R0
0x139A	0x4863    LDR	R0, [PC, #396]
0x139C	0x6001    STR	R1, [R0, #0]
0x139E	0x4862    LDR	R0, [PC, #392]
0x13A0	0x6800    LDR	R0, [R0, #0]
0x13A2	0xF0404140  ORR	R1, R0, #-1073741824
0x13A6	0x4860    LDR	R0, [PC, #384]
0x13A8	0x6001    STR	R1, [R0, #0]
0x13AA	0x4860    LDR	R0, [PC, #384]
0x13AC	0x6801    LDR	R1, [R0, #0]
0x13AE	0xF64F70FF  MOVW	R0, #65535
0x13B2	0x4001    ANDS	R1, R0
0x13B4	0x485D    LDR	R0, [PC, #372]
0x13B6	0x6001    STR	R1, [R0, #0]
0x13B8	0x485C    LDR	R0, [PC, #368]
0x13BA	0x6801    LDR	R1, [R0, #0]
0x13BC	0x485B    LDR	R0, [PC, #364]
0x13BE	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 73 :: 		setup_GPIOA_AF(1, AF11_LCD);
0x13C0	0x485B    LDR	R0, [PC, #364]
0x13C2	0x6801    LDR	R1, [R0, #0]
0x13C4	0xF06F00F0  MVN	R0, #240
0x13C8	0x4001    ANDS	R1, R0
0x13CA	0x4859    LDR	R0, [PC, #356]
0x13CC	0x6001    STR	R1, [R0, #0]
0x13CE	0x4858    LDR	R0, [PC, #352]
0x13D0	0x6800    LDR	R0, [R0, #0]
0x13D2	0xF04001B0  ORR	R1, R0, #176
0x13D6	0x4856    LDR	R0, [PC, #344]
0x13D8	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO149:
;glass_lcd.c, 74 :: 		setup_GPIOA_AF(2, AF11_LCD);
0x13DA	0x4855    LDR	R0, [PC, #340]
0x13DC	0x6801    LDR	R1, [R0, #0]
0x13DE	0xF46F6070  MVN	R0, #3840
0x13E2	0x4001    ANDS	R1, R0
0x13E4	0x4852    LDR	R0, [PC, #328]
0x13E6	0x6001    STR	R1, [R0, #0]
0x13E8	0x4851    LDR	R0, [PC, #324]
0x13EA	0x6800    LDR	R0, [R0, #0]
0x13EC	0xF4406130  ORR	R1, R0, #2816
0x13F0	0x484F    LDR	R0, [PC, #316]
0x13F2	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO162:
;glass_lcd.c, 75 :: 		setup_GPIOA_AF(3, AF11_LCD);
0x13F4	0x484E    LDR	R0, [PC, #312]
0x13F6	0x6801    LDR	R1, [R0, #0]
0x13F8	0xF46F4070  MVN	R0, #61440
0x13FC	0x4001    ANDS	R1, R0
0x13FE	0x484C    LDR	R0, [PC, #304]
0x1400	0x6001    STR	R1, [R0, #0]
0x1402	0x484B    LDR	R0, [PC, #300]
0x1404	0x6800    LDR	R0, [R0, #0]
0x1406	0xF4404130  ORR	R1, R0, #45056
0x140A	0x4849    LDR	R0, [PC, #292]
0x140C	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO175:
;glass_lcd.c, 76 :: 		setup_GPIOA_AF(8, AF11_LCD);
L_LCD_GLASS_Configure_GPIO182:
0x140E	0x4849    LDR	R0, [PC, #292]
0x1410	0x6801    LDR	R1, [R0, #0]
0x1412	0xF06F000F  MVN	R0, #15
0x1416	0x4001    ANDS	R1, R0
0x1418	0x4846    LDR	R0, [PC, #280]
0x141A	0x6001    STR	R1, [R0, #0]
0x141C	0x4845    LDR	R0, [PC, #276]
0x141E	0x6800    LDR	R0, [R0, #0]
0x1420	0xF040010B  ORR	R1, R0, #11
0x1424	0x4843    LDR	R0, [PC, #268]
0x1426	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 77 :: 		setup_GPIOA_AF(9, AF11_LCD);
L_LCD_GLASS_Configure_GPIO193:
0x1428	0x4842    LDR	R0, [PC, #264]
0x142A	0x6801    LDR	R1, [R0, #0]
0x142C	0xF06F00F0  MVN	R0, #240
0x1430	0x4001    ANDS	R1, R0
0x1432	0x4840    LDR	R0, [PC, #256]
0x1434	0x6001    STR	R1, [R0, #0]
0x1436	0x483F    LDR	R0, [PC, #252]
0x1438	0x6800    LDR	R0, [R0, #0]
0x143A	0xF04001B0  ORR	R1, R0, #176
0x143E	0x483D    LDR	R0, [PC, #244]
0x1440	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 78 :: 		setup_GPIOA_AF(10, AF11_LCD);
L_LCD_GLASS_Configure_GPIO204:
0x1442	0x483C    LDR	R0, [PC, #240]
0x1444	0x6801    LDR	R1, [R0, #0]
0x1446	0xF46F6070  MVN	R0, #3840
0x144A	0x4001    ANDS	R1, R0
0x144C	0x4839    LDR	R0, [PC, #228]
0x144E	0x6001    STR	R1, [R0, #0]
0x1450	0x4838    LDR	R0, [PC, #224]
0x1452	0x6800    LDR	R0, [R0, #0]
0x1454	0xF4406130  ORR	R1, R0, #2816
0x1458	0x4836    LDR	R0, [PC, #216]
0x145A	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 79 :: 		setup_GPIOA_AF(15, AF11_LCD);
L_LCD_GLASS_Configure_GPIO215:
0x145C	0x4835    LDR	R0, [PC, #212]
0x145E	0x6801    LDR	R1, [R0, #0]
0x1460	0xF64F70FF  MOVW	R0, #65535
0x1464	0x4001    ANDS	R1, R0
0x1466	0x4833    LDR	R0, [PC, #204]
0x1468	0x6001    STR	R1, [R0, #0]
0x146A	0x4832    LDR	R0, [PC, #200]
0x146C	0x6800    LDR	R0, [R0, #0]
0x146E	0xF0404130  ORR	R1, R0, #-1342177280
0x1472	0x4830    LDR	R0, [PC, #192]
0x1474	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 81 :: 		enable_GPIOB(true);
0x1476	0x2101    MOVS	R1, #1
0x1478	0x482F    LDR	R0, [PC, #188]
0x147A	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 82 :: 		setup_GPIOB(3, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x147C	0x482F    LDR	R0, [PC, #188]
0x147E	0x6801    LDR	R1, [R0, #0]
0x1480	0xF06F00C0  MVN	R0, #192
0x1484	0x4001    ANDS	R1, R0
0x1486	0x482D    LDR	R0, [PC, #180]
0x1488	0x6001    STR	R1, [R0, #0]
0x148A	0x482C    LDR	R0, [PC, #176]
0x148C	0x6800    LDR	R0, [R0, #0]
0x148E	0xF0400180  ORR	R1, R0, #128
0x1492	0x482A    LDR	R0, [PC, #168]
0x1494	0x6001    STR	R1, [R0, #0]
0x1496	0x482A    LDR	R0, [PC, #168]
0x1498	0x6801    LDR	R1, [R0, #0]
0x149A	0xF64F70F7  MOVW	R0, #65527
0x149E	0x4001    ANDS	R1, R0
0x14A0	0x4827    LDR	R0, [PC, #156]
0x14A2	0x6001    STR	R1, [R0, #0]
0x14A4	0x4826    LDR	R0, [PC, #152]
0x14A6	0x6800    LDR	R0, [R0, #0]
0x14A8	0xF0400108  ORR	R1, R0, #8
0x14AC	0x4824    LDR	R0, [PC, #144]
0x14AE	0x6001    STR	R1, [R0, #0]
0x14B0	0x4824    LDR	R0, [PC, #144]
0x14B2	0x6801    LDR	R1, [R0, #0]
0x14B4	0xF06F00C0  MVN	R0, #192
0x14B8	0x4001    ANDS	R1, R0
0x14BA	0x4822    LDR	R0, [PC, #136]
0x14BC	0x6001    STR	R1, [R0, #0]
0x14BE	0x4821    LDR	R0, [PC, #132]
0x14C0	0x6800    LDR	R0, [R0, #0]
0x14C2	0xF04001C0  ORR	R1, R0, #192
0x14C6	0x481F    LDR	R0, [PC, #124]
0x14C8	0x6001    STR	R1, [R0, #0]
0x14CA	0x481F    LDR	R0, [PC, #124]
0x14CC	0x6801    LDR	R1, [R0, #0]
0x14CE	0xF06F00C0  MVN	R0, #192
0x14D2	0x4001    ANDS	R1, R0
0x14D4	0x481C    LDR	R0, [PC, #112]
0x14D6	0x6001    STR	R1, [R0, #0]
0x14D8	0x481B    LDR	R0, [PC, #108]
0x14DA	0x6801    LDR	R1, [R0, #0]
0x14DC	0x481A    LDR	R0, [PC, #104]
0x14DE	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 83 :: 		setup_GPIOB(4, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x14E0	0x4816    LDR	R0, [PC, #88]
0x14E2	0x6801    LDR	R1, [R0, #0]
0x14E4	0xF46F7040  MVN	R0, #768
0x14E8	0x4001    ANDS	R1, R0
0x14EA	0x4814    LDR	R0, [PC, #80]
0x14EC	0x6001    STR	R1, [R0, #0]
0x14EE	0x4813    LDR	R0, [PC, #76]
0x14F0	0x6800    LDR	R0, [R0, #0]
0x14F2	0xF4407100  ORR	R1, R0, #512
0x14F6	0x4811    LDR	R0, [PC, #68]
0x14F8	0x6001    STR	R1, [R0, #0]
0x14FA	0x4811    LDR	R0, [PC, #68]
0x14FC	0x6801    LDR	R1, [R0, #0]
0x14FE	0xF64F70EF  MOVW	R0, #65519
0x1502	0x4001    ANDS	R1, R0
0x1504	0x480E    LDR	R0, [PC, #56]
0x1506	0x6001    STR	R1, [R0, #0]
0x1508	0x480D    LDR	R0, [PC, #52]
0x150A	0x6800    LDR	R0, [R0, #0]
0x150C	0xF0400110  ORR	R1, R0, #16
0x1510	0x480B    LDR	R0, [PC, #44]
0x1512	0x6001    STR	R1, [R0, #0]
0x1514	0x480B    LDR	R0, [PC, #44]
0x1516	0x6801    LDR	R1, [R0, #0]
0x1518	0xF46F7040  MVN	R0, #768
0x151C	0xF000B816  B	#44
0x1520	0x00004002  	GPIOA_MODER+0
0x1524	0x00044002  	GPIOA_OTYPER+0
0x1528	0x00084002  	GPIOA_OSPEEDER+0
0x152C	0x000C4002  	GPIOA_PUPDR+0
0x1530	0x00204002  	GPIOA_AFRL+0
0x1534	0x00244002  	GPIOA_AFRH+0
0x1538	0x03844247  	RCC_AHBENRbits+0
0x153C	0x04004002  	GPIOB_MODER+0
0x1540	0x04044002  	GPIOB_OTYPER+0
0x1544	0x04084002  	GPIOB_OSPEEDER+0
0x1548	0x040C4002  	GPIOB_PUPDR+0
0x154C	0x4001    ANDS	R1, R0
0x154E	0x4882    LDR	R0, [PC, #520]
0x1550	0x6001    STR	R1, [R0, #0]
0x1552	0x4881    LDR	R0, [PC, #516]
0x1554	0x6800    LDR	R0, [R0, #0]
0x1556	0xF4407140  ORR	R1, R0, #768
0x155A	0x487F    LDR	R0, [PC, #508]
0x155C	0x6001    STR	R1, [R0, #0]
0x155E	0x487F    LDR	R0, [PC, #508]
0x1560	0x6801    LDR	R1, [R0, #0]
0x1562	0xF46F7040  MVN	R0, #768
0x1566	0x4001    ANDS	R1, R0
0x1568	0x487C    LDR	R0, [PC, #496]
0x156A	0x6001    STR	R1, [R0, #0]
0x156C	0x487B    LDR	R0, [PC, #492]
0x156E	0x6801    LDR	R1, [R0, #0]
0x1570	0x487A    LDR	R0, [PC, #488]
0x1572	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 84 :: 		setup_GPIOB(5, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1574	0x487A    LDR	R0, [PC, #488]
0x1576	0x6801    LDR	R1, [R0, #0]
0x1578	0xF46F6040  MVN	R0, #3072
0x157C	0x4001    ANDS	R1, R0
0x157E	0x4878    LDR	R0, [PC, #480]
0x1580	0x6001    STR	R1, [R0, #0]
0x1582	0x4877    LDR	R0, [PC, #476]
0x1584	0x6800    LDR	R0, [R0, #0]
0x1586	0xF4406100  ORR	R1, R0, #2048
0x158A	0x4875    LDR	R0, [PC, #468]
0x158C	0x6001    STR	R1, [R0, #0]
0x158E	0x4875    LDR	R0, [PC, #468]
0x1590	0x6801    LDR	R1, [R0, #0]
0x1592	0xF64F70DF  MOVW	R0, #65503
0x1596	0x4001    ANDS	R1, R0
0x1598	0x4872    LDR	R0, [PC, #456]
0x159A	0x6001    STR	R1, [R0, #0]
0x159C	0x4871    LDR	R0, [PC, #452]
0x159E	0x6800    LDR	R0, [R0, #0]
0x15A0	0xF0400120  ORR	R1, R0, #32
0x15A4	0x486F    LDR	R0, [PC, #444]
0x15A6	0x6001    STR	R1, [R0, #0]
0x15A8	0x486B    LDR	R0, [PC, #428]
0x15AA	0x6801    LDR	R1, [R0, #0]
0x15AC	0xF46F6040  MVN	R0, #3072
0x15B0	0x4001    ANDS	R1, R0
0x15B2	0x4869    LDR	R0, [PC, #420]
0x15B4	0x6001    STR	R1, [R0, #0]
0x15B6	0x4868    LDR	R0, [PC, #416]
0x15B8	0x6800    LDR	R0, [R0, #0]
0x15BA	0xF4406140  ORR	R1, R0, #3072
0x15BE	0x4866    LDR	R0, [PC, #408]
0x15C0	0x6001    STR	R1, [R0, #0]
0x15C2	0x4866    LDR	R0, [PC, #408]
0x15C4	0x6801    LDR	R1, [R0, #0]
0x15C6	0xF46F6040  MVN	R0, #3072
0x15CA	0x4001    ANDS	R1, R0
0x15CC	0x4863    LDR	R0, [PC, #396]
0x15CE	0x6001    STR	R1, [R0, #0]
0x15D0	0x4862    LDR	R0, [PC, #392]
0x15D2	0x6801    LDR	R1, [R0, #0]
0x15D4	0x4861    LDR	R0, [PC, #388]
0x15D6	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 85 :: 		setup_GPIOB(8, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x15D8	0x4861    LDR	R0, [PC, #388]
0x15DA	0x6801    LDR	R1, [R0, #0]
0x15DC	0xF46F3040  MVN	R0, #196608
0x15E0	0x4001    ANDS	R1, R0
0x15E2	0x485F    LDR	R0, [PC, #380]
0x15E4	0x6001    STR	R1, [R0, #0]
0x15E6	0x485E    LDR	R0, [PC, #376]
0x15E8	0x6800    LDR	R0, [R0, #0]
0x15EA	0xF4403100  ORR	R1, R0, #131072
0x15EE	0x485C    LDR	R0, [PC, #368]
0x15F0	0x6001    STR	R1, [R0, #0]
0x15F2	0x485C    LDR	R0, [PC, #368]
0x15F4	0x6801    LDR	R1, [R0, #0]
0x15F6	0xF64F60FF  MOVW	R0, #65279
0x15FA	0x4001    ANDS	R1, R0
0x15FC	0x4859    LDR	R0, [PC, #356]
0x15FE	0x6001    STR	R1, [R0, #0]
0x1600	0x4858    LDR	R0, [PC, #352]
0x1602	0x6800    LDR	R0, [R0, #0]
0x1604	0xF4407180  ORR	R1, R0, #256
0x1608	0x4856    LDR	R0, [PC, #344]
0x160A	0x6001    STR	R1, [R0, #0]
0x160C	0x4852    LDR	R0, [PC, #328]
0x160E	0x6801    LDR	R1, [R0, #0]
0x1610	0xF46F3040  MVN	R0, #196608
0x1614	0x4001    ANDS	R1, R0
0x1616	0x4850    LDR	R0, [PC, #320]
0x1618	0x6001    STR	R1, [R0, #0]
0x161A	0x484F    LDR	R0, [PC, #316]
0x161C	0x6800    LDR	R0, [R0, #0]
0x161E	0xF4403140  ORR	R1, R0, #196608
0x1622	0x484D    LDR	R0, [PC, #308]
0x1624	0x6001    STR	R1, [R0, #0]
0x1626	0x484D    LDR	R0, [PC, #308]
0x1628	0x6801    LDR	R1, [R0, #0]
0x162A	0xF46F3040  MVN	R0, #196608
0x162E	0x4001    ANDS	R1, R0
0x1630	0x484A    LDR	R0, [PC, #296]
0x1632	0x6001    STR	R1, [R0, #0]
0x1634	0x4849    LDR	R0, [PC, #292]
0x1636	0x6801    LDR	R1, [R0, #0]
0x1638	0x4848    LDR	R0, [PC, #288]
0x163A	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 86 :: 		setup_GPIOB(9, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x163C	0x4848    LDR	R0, [PC, #288]
0x163E	0x6801    LDR	R1, [R0, #0]
0x1640	0xF46F2040  MVN	R0, #786432
0x1644	0x4001    ANDS	R1, R0
0x1646	0x4846    LDR	R0, [PC, #280]
0x1648	0x6001    STR	R1, [R0, #0]
0x164A	0x4845    LDR	R0, [PC, #276]
0x164C	0x6800    LDR	R0, [R0, #0]
0x164E	0xF4402100  ORR	R1, R0, #524288
0x1652	0x4843    LDR	R0, [PC, #268]
0x1654	0x6001    STR	R1, [R0, #0]
0x1656	0x4843    LDR	R0, [PC, #268]
0x1658	0x6801    LDR	R1, [R0, #0]
0x165A	0xF64F50FF  MOVW	R0, #65023
0x165E	0x4001    ANDS	R1, R0
0x1660	0x4840    LDR	R0, [PC, #256]
0x1662	0x6001    STR	R1, [R0, #0]
0x1664	0x483F    LDR	R0, [PC, #252]
0x1666	0x6800    LDR	R0, [R0, #0]
0x1668	0xF4407100  ORR	R1, R0, #512
0x166C	0x483D    LDR	R0, [PC, #244]
0x166E	0x6001    STR	R1, [R0, #0]
0x1670	0x4839    LDR	R0, [PC, #228]
0x1672	0x6801    LDR	R1, [R0, #0]
0x1674	0xF46F2040  MVN	R0, #786432
0x1678	0x4001    ANDS	R1, R0
0x167A	0x4837    LDR	R0, [PC, #220]
0x167C	0x6001    STR	R1, [R0, #0]
0x167E	0x4836    LDR	R0, [PC, #216]
0x1680	0x6800    LDR	R0, [R0, #0]
0x1682	0xF4402140  ORR	R1, R0, #786432
0x1686	0x4834    LDR	R0, [PC, #208]
0x1688	0x6001    STR	R1, [R0, #0]
0x168A	0x4834    LDR	R0, [PC, #208]
0x168C	0x6801    LDR	R1, [R0, #0]
0x168E	0xF46F2040  MVN	R0, #786432
0x1692	0x4001    ANDS	R1, R0
0x1694	0x4831    LDR	R0, [PC, #196]
0x1696	0x6001    STR	R1, [R0, #0]
0x1698	0x4830    LDR	R0, [PC, #192]
0x169A	0x6801    LDR	R1, [R0, #0]
0x169C	0x482F    LDR	R0, [PC, #188]
0x169E	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 87 :: 		setup_GPIOB(10, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x16A0	0x482F    LDR	R0, [PC, #188]
0x16A2	0x6801    LDR	R1, [R0, #0]
0x16A4	0xF46F1040  MVN	R0, #3145728
0x16A8	0x4001    ANDS	R1, R0
0x16AA	0x482D    LDR	R0, [PC, #180]
0x16AC	0x6001    STR	R1, [R0, #0]
0x16AE	0x482C    LDR	R0, [PC, #176]
0x16B0	0x6800    LDR	R0, [R0, #0]
0x16B2	0xF4401100  ORR	R1, R0, #2097152
0x16B6	0x482A    LDR	R0, [PC, #168]
0x16B8	0x6001    STR	R1, [R0, #0]
0x16BA	0x482A    LDR	R0, [PC, #168]
0x16BC	0x6801    LDR	R1, [R0, #0]
0x16BE	0xF64F30FF  MOVW	R0, #64511
0x16C2	0x4001    ANDS	R1, R0
0x16C4	0x4827    LDR	R0, [PC, #156]
0x16C6	0x6001    STR	R1, [R0, #0]
0x16C8	0x4826    LDR	R0, [PC, #152]
0x16CA	0x6800    LDR	R0, [R0, #0]
0x16CC	0xF4406180  ORR	R1, R0, #1024
0x16D0	0x4824    LDR	R0, [PC, #144]
0x16D2	0x6001    STR	R1, [R0, #0]
0x16D4	0x4820    LDR	R0, [PC, #128]
0x16D6	0x6801    LDR	R1, [R0, #0]
0x16D8	0xF46F1040  MVN	R0, #3145728
0x16DC	0x4001    ANDS	R1, R0
0x16DE	0x481E    LDR	R0, [PC, #120]
0x16E0	0x6001    STR	R1, [R0, #0]
0x16E2	0x481D    LDR	R0, [PC, #116]
0x16E4	0x6800    LDR	R0, [R0, #0]
0x16E6	0xF4401140  ORR	R1, R0, #3145728
0x16EA	0x481B    LDR	R0, [PC, #108]
0x16EC	0x6001    STR	R1, [R0, #0]
0x16EE	0x481B    LDR	R0, [PC, #108]
0x16F0	0x6801    LDR	R1, [R0, #0]
0x16F2	0xF46F1040  MVN	R0, #3145728
0x16F6	0x4001    ANDS	R1, R0
0x16F8	0x4818    LDR	R0, [PC, #96]
0x16FA	0x6001    STR	R1, [R0, #0]
0x16FC	0x4817    LDR	R0, [PC, #92]
0x16FE	0x6801    LDR	R1, [R0, #0]
0x1700	0x4816    LDR	R0, [PC, #88]
0x1702	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 88 :: 		setup_GPIOB(11, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1704	0x4816    LDR	R0, [PC, #88]
0x1706	0x6801    LDR	R1, [R0, #0]
0x1708	0xF46F0040  MVN	R0, #12582912
0x170C	0x4001    ANDS	R1, R0
0x170E	0x4814    LDR	R0, [PC, #80]
0x1710	0x6001    STR	R1, [R0, #0]
0x1712	0x4813    LDR	R0, [PC, #76]
0x1714	0x6800    LDR	R0, [R0, #0]
0x1716	0xF4400100  ORR	R1, R0, #8388608
0x171A	0x4811    LDR	R0, [PC, #68]
0x171C	0x6001    STR	R1, [R0, #0]
0x171E	0x4811    LDR	R0, [PC, #68]
0x1720	0x6801    LDR	R1, [R0, #0]
0x1722	0xF24F70FF  MOVW	R0, #63487
0x1726	0x4001    ANDS	R1, R0
0x1728	0x480E    LDR	R0, [PC, #56]
0x172A	0x6001    STR	R1, [R0, #0]
0x172C	0x480D    LDR	R0, [PC, #52]
0x172E	0x6800    LDR	R0, [R0, #0]
0x1730	0xF4406100  ORR	R1, R0, #2048
0x1734	0x480B    LDR	R0, [PC, #44]
0x1736	0x6001    STR	R1, [R0, #0]
0x1738	0x4807    LDR	R0, [PC, #28]
0x173A	0x6801    LDR	R1, [R0, #0]
0x173C	0xF46F0040  MVN	R0, #12582912
0x1740	0x4001    ANDS	R1, R0
0x1742	0x4805    LDR	R0, [PC, #20]
0x1744	0x6001    STR	R1, [R0, #0]
0x1746	0x4804    LDR	R0, [PC, #16]
0x1748	0x6800    LDR	R0, [R0, #0]
0x174A	0xF4400140  ORR	R1, R0, #12582912
0x174E	0x4802    LDR	R0, [PC, #8]
0x1750	0x6001    STR	R1, [R0, #0]
0x1752	0x4802    LDR	R0, [PC, #8]
0x1754	0xF000B808  B	#16
0x1758	0x04084002  	GPIOB_OSPEEDER+0
0x175C	0x040C4002  	GPIOB_PUPDR+0
0x1760	0x04004002  	GPIOB_MODER+0
0x1764	0x04044002  	GPIOB_OTYPER+0
0x1768	0x6801    LDR	R1, [R0, #0]
0x176A	0xF46F0040  MVN	R0, #12582912
0x176E	0x4001    ANDS	R1, R0
0x1770	0x4881    LDR	R0, [PC, #516]
0x1772	0x6001    STR	R1, [R0, #0]
0x1774	0x4880    LDR	R0, [PC, #512]
0x1776	0x6801    LDR	R1, [R0, #0]
0x1778	0x487F    LDR	R0, [PC, #508]
0x177A	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 89 :: 		setup_GPIOB(12, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x177C	0x487F    LDR	R0, [PC, #508]
0x177E	0x6801    LDR	R1, [R0, #0]
0x1780	0xF06F7040  MVN	R0, #50331648
0x1784	0x4001    ANDS	R1, R0
0x1786	0x487D    LDR	R0, [PC, #500]
0x1788	0x6001    STR	R1, [R0, #0]
0x178A	0x487C    LDR	R0, [PC, #496]
0x178C	0x6800    LDR	R0, [R0, #0]
0x178E	0xF0407100  ORR	R1, R0, #33554432
0x1792	0x487A    LDR	R0, [PC, #488]
0x1794	0x6001    STR	R1, [R0, #0]
0x1796	0x487A    LDR	R0, [PC, #488]
0x1798	0x6801    LDR	R1, [R0, #0]
0x179A	0xF64E70FF  MOVW	R0, #61439
0x179E	0x4001    ANDS	R1, R0
0x17A0	0x4877    LDR	R0, [PC, #476]
0x17A2	0x6001    STR	R1, [R0, #0]
0x17A4	0x4876    LDR	R0, [PC, #472]
0x17A6	0x6800    LDR	R0, [R0, #0]
0x17A8	0xF4405180  ORR	R1, R0, #4096
0x17AC	0x4874    LDR	R0, [PC, #464]
0x17AE	0x6001    STR	R1, [R0, #0]
0x17B0	0x4874    LDR	R0, [PC, #464]
0x17B2	0x6801    LDR	R1, [R0, #0]
0x17B4	0xF06F7040  MVN	R0, #50331648
0x17B8	0x4001    ANDS	R1, R0
0x17BA	0x4872    LDR	R0, [PC, #456]
0x17BC	0x6001    STR	R1, [R0, #0]
0x17BE	0x4871    LDR	R0, [PC, #452]
0x17C0	0x6800    LDR	R0, [R0, #0]
0x17C2	0xF0407140  ORR	R1, R0, #50331648
0x17C6	0x486F    LDR	R0, [PC, #444]
0x17C8	0x6001    STR	R1, [R0, #0]
0x17CA	0x486B    LDR	R0, [PC, #428]
0x17CC	0x6801    LDR	R1, [R0, #0]
0x17CE	0xF06F7040  MVN	R0, #50331648
0x17D2	0x4001    ANDS	R1, R0
0x17D4	0x4868    LDR	R0, [PC, #416]
0x17D6	0x6001    STR	R1, [R0, #0]
0x17D8	0x4867    LDR	R0, [PC, #412]
0x17DA	0x6801    LDR	R1, [R0, #0]
0x17DC	0x4866    LDR	R0, [PC, #408]
0x17DE	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 90 :: 		setup_GPIOB(13, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x17E0	0x4866    LDR	R0, [PC, #408]
0x17E2	0x6801    LDR	R1, [R0, #0]
0x17E4	0xF06F6040  MVN	R0, #201326592
0x17E8	0x4001    ANDS	R1, R0
0x17EA	0x4864    LDR	R0, [PC, #400]
0x17EC	0x6001    STR	R1, [R0, #0]
0x17EE	0x4863    LDR	R0, [PC, #396]
0x17F0	0x6800    LDR	R0, [R0, #0]
0x17F2	0xF0406100  ORR	R1, R0, #134217728
0x17F6	0x4861    LDR	R0, [PC, #388]
0x17F8	0x6001    STR	R1, [R0, #0]
0x17FA	0x4861    LDR	R0, [PC, #388]
0x17FC	0x6801    LDR	R1, [R0, #0]
0x17FE	0xF64D70FF  MOVW	R0, #57343
0x1802	0x4001    ANDS	R1, R0
0x1804	0x485E    LDR	R0, [PC, #376]
0x1806	0x6001    STR	R1, [R0, #0]
0x1808	0x485D    LDR	R0, [PC, #372]
0x180A	0x6800    LDR	R0, [R0, #0]
0x180C	0xF4405100  ORR	R1, R0, #8192
0x1810	0x485B    LDR	R0, [PC, #364]
0x1812	0x6001    STR	R1, [R0, #0]
0x1814	0x485B    LDR	R0, [PC, #364]
0x1816	0x6801    LDR	R1, [R0, #0]
0x1818	0xF06F6040  MVN	R0, #201326592
0x181C	0x4001    ANDS	R1, R0
0x181E	0x4859    LDR	R0, [PC, #356]
0x1820	0x6001    STR	R1, [R0, #0]
0x1822	0x4858    LDR	R0, [PC, #352]
0x1824	0x6800    LDR	R0, [R0, #0]
0x1826	0xF0406140  ORR	R1, R0, #201326592
0x182A	0x4856    LDR	R0, [PC, #344]
0x182C	0x6001    STR	R1, [R0, #0]
0x182E	0x4852    LDR	R0, [PC, #328]
0x1830	0x6801    LDR	R1, [R0, #0]
0x1832	0xF06F6040  MVN	R0, #201326592
0x1836	0x4001    ANDS	R1, R0
0x1838	0x484F    LDR	R0, [PC, #316]
0x183A	0x6001    STR	R1, [R0, #0]
0x183C	0x484E    LDR	R0, [PC, #312]
0x183E	0x6801    LDR	R1, [R0, #0]
0x1840	0x484D    LDR	R0, [PC, #308]
0x1842	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 91 :: 		setup_GPIOB(14, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1844	0x484D    LDR	R0, [PC, #308]
0x1846	0x6801    LDR	R1, [R0, #0]
0x1848	0xF06F5040  MVN	R0, #805306368
0x184C	0x4001    ANDS	R1, R0
0x184E	0x484B    LDR	R0, [PC, #300]
0x1850	0x6001    STR	R1, [R0, #0]
0x1852	0x484A    LDR	R0, [PC, #296]
0x1854	0x6800    LDR	R0, [R0, #0]
0x1856	0xF0405100  ORR	R1, R0, #536870912
0x185A	0x4848    LDR	R0, [PC, #288]
0x185C	0x6001    STR	R1, [R0, #0]
0x185E	0x4848    LDR	R0, [PC, #288]
0x1860	0x6801    LDR	R1, [R0, #0]
0x1862	0xF64B70FF  MOVW	R0, #49151
0x1866	0x4001    ANDS	R1, R0
0x1868	0x4845    LDR	R0, [PC, #276]
0x186A	0x6001    STR	R1, [R0, #0]
0x186C	0x4844    LDR	R0, [PC, #272]
0x186E	0x6800    LDR	R0, [R0, #0]
0x1870	0xF4404180  ORR	R1, R0, #16384
0x1874	0x4842    LDR	R0, [PC, #264]
0x1876	0x6001    STR	R1, [R0, #0]
0x1878	0x4842    LDR	R0, [PC, #264]
0x187A	0x6801    LDR	R1, [R0, #0]
0x187C	0xF06F5040  MVN	R0, #805306368
0x1880	0x4001    ANDS	R1, R0
0x1882	0x4840    LDR	R0, [PC, #256]
0x1884	0x6001    STR	R1, [R0, #0]
0x1886	0x483F    LDR	R0, [PC, #252]
0x1888	0x6800    LDR	R0, [R0, #0]
0x188A	0xF0405140  ORR	R1, R0, #805306368
0x188E	0x483D    LDR	R0, [PC, #244]
0x1890	0x6001    STR	R1, [R0, #0]
0x1892	0x4839    LDR	R0, [PC, #228]
0x1894	0x6801    LDR	R1, [R0, #0]
0x1896	0xF06F5040  MVN	R0, #805306368
0x189A	0x4001    ANDS	R1, R0
0x189C	0x4836    LDR	R0, [PC, #216]
0x189E	0x6001    STR	R1, [R0, #0]
0x18A0	0x4835    LDR	R0, [PC, #212]
0x18A2	0x6801    LDR	R1, [R0, #0]
0x18A4	0x4834    LDR	R0, [PC, #208]
0x18A6	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 92 :: 		setup_GPIOB(15, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x18A8	0x4834    LDR	R0, [PC, #208]
0x18AA	0x6801    LDR	R1, [R0, #0]
0x18AC	0xF64F70FF  MOVW	R0, #65535
0x18B0	0x4001    ANDS	R1, R0
0x18B2	0x4832    LDR	R0, [PC, #200]
0x18B4	0x6001    STR	R1, [R0, #0]
0x18B6	0x4831    LDR	R0, [PC, #196]
0x18B8	0x6800    LDR	R0, [R0, #0]
0x18BA	0xF0404100  ORR	R1, R0, #-2147483648
0x18BE	0x482F    LDR	R0, [PC, #188]
0x18C0	0x6001    STR	R1, [R0, #0]
0x18C2	0x482F    LDR	R0, [PC, #188]
0x18C4	0x6801    LDR	R1, [R0, #0]
0x18C6	0xF64770FF  MOVW	R0, #32767
0x18CA	0x4001    ANDS	R1, R0
0x18CC	0x482C    LDR	R0, [PC, #176]
0x18CE	0x6001    STR	R1, [R0, #0]
0x18D0	0x482B    LDR	R0, [PC, #172]
0x18D2	0x6800    LDR	R0, [R0, #0]
0x18D4	0xF4404100  ORR	R1, R0, #32768
0x18D8	0x4829    LDR	R0, [PC, #164]
0x18DA	0x6001    STR	R1, [R0, #0]
0x18DC	0x4829    LDR	R0, [PC, #164]
0x18DE	0x6801    LDR	R1, [R0, #0]
0x18E0	0xF64F70FF  MOVW	R0, #65535
0x18E4	0x4001    ANDS	R1, R0
0x18E6	0x4827    LDR	R0, [PC, #156]
0x18E8	0x6001    STR	R1, [R0, #0]
0x18EA	0x4826    LDR	R0, [PC, #152]
0x18EC	0x6800    LDR	R0, [R0, #0]
0x18EE	0xF0404140  ORR	R1, R0, #-1073741824
0x18F2	0x4824    LDR	R0, [PC, #144]
0x18F4	0x6001    STR	R1, [R0, #0]
0x18F6	0x4820    LDR	R0, [PC, #128]
0x18F8	0x6801    LDR	R1, [R0, #0]
0x18FA	0xF64F70FF  MOVW	R0, #65535
0x18FE	0x4001    ANDS	R1, R0
0x1900	0x481D    LDR	R0, [PC, #116]
0x1902	0x6001    STR	R1, [R0, #0]
0x1904	0x481C    LDR	R0, [PC, #112]
0x1906	0x6801    LDR	R1, [R0, #0]
0x1908	0x481B    LDR	R0, [PC, #108]
0x190A	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 94 :: 		setup_GPIOB_AF(3, AF11_LCD);
0x190C	0x481E    LDR	R0, [PC, #120]
0x190E	0x6801    LDR	R1, [R0, #0]
0x1910	0xF46F4070  MVN	R0, #61440
0x1914	0x4001    ANDS	R1, R0
0x1916	0x481C    LDR	R0, [PC, #112]
0x1918	0x6001    STR	R1, [R0, #0]
0x191A	0x481B    LDR	R0, [PC, #108]
0x191C	0x6800    LDR	R0, [R0, #0]
0x191E	0xF4404130  ORR	R1, R0, #45056
0x1922	0x4819    LDR	R0, [PC, #100]
0x1924	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO397:
;glass_lcd.c, 95 :: 		setup_GPIOB_AF(4, AF11_LCD);
0x1926	0x4818    LDR	R0, [PC, #96]
0x1928	0x6801    LDR	R1, [R0, #0]
0x192A	0xF46F2070  MVN	R0, #983040
0x192E	0x4001    ANDS	R1, R0
0x1930	0x4815    LDR	R0, [PC, #84]
0x1932	0x6001    STR	R1, [R0, #0]
0x1934	0x4814    LDR	R0, [PC, #80]
0x1936	0x6800    LDR	R0, [R0, #0]
0x1938	0xF4402130  ORR	R1, R0, #720896
0x193C	0x4812    LDR	R0, [PC, #72]
0x193E	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO410:
;glass_lcd.c, 96 :: 		setup_GPIOB_AF(5, AF11_LCD);
0x1940	0x4811    LDR	R0, [PC, #68]
0x1942	0x6801    LDR	R1, [R0, #0]
0x1944	0xF46F0070  MVN	R0, #15728640
0x1948	0x4001    ANDS	R1, R0
0x194A	0x480F    LDR	R0, [PC, #60]
0x194C	0x6001    STR	R1, [R0, #0]
0x194E	0x480E    LDR	R0, [PC, #56]
0x1950	0x6800    LDR	R0, [R0, #0]
0x1952	0xF4400130  ORR	R1, R0, #11534336
0x1956	0x480C    LDR	R0, [PC, #48]
0x1958	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO423:
;glass_lcd.c, 97 :: 		setup_GPIOB_AF(8, AF11_LCD);
L_LCD_GLASS_Configure_GPIO430:
0x195A	0x480C    LDR	R0, [PC, #48]
0x195C	0x6801    LDR	R1, [R0, #0]
0x195E	0xF06F000F  MVN	R0, #15
0x1962	0x4001    ANDS	R1, R0
0x1964	0x4809    LDR	R0, [PC, #36]
0x1966	0x6001    STR	R1, [R0, #0]
0x1968	0x4808    LDR	R0, [PC, #32]
0x196A	0x6800    LDR	R0, [R0, #0]
0x196C	0xF040010B  ORR	R1, R0, #11
0x1970	0x4806    LDR	R0, [PC, #24]
0x1972	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 98 :: 		setup_GPIOB_AF(9, AF11_LCD);
L_LCD_GLASS_Configure_GPIO441:
0x1974	0x4805    LDR	R0, [PC, #20]
0x1976	0xE00B    B	#22
0x1978	0x040C4002  	GPIOB_PUPDR+0
0x197C	0x04004002  	GPIOB_MODER+0
0x1980	0x04044002  	GPIOB_OTYPER+0
0x1984	0x04084002  	GPIOB_OSPEEDER+0
0x1988	0x04204002  	GPIOB_AFRL+0
0x198C	0x04244002  	GPIOB_AFRH+0
0x1990	0x6801    LDR	R1, [R0, #0]
0x1992	0xF06F00F0  MVN	R0, #240
0x1996	0x4001    ANDS	R1, R0
0x1998	0x4883    LDR	R0, [PC, #524]
0x199A	0x6001    STR	R1, [R0, #0]
0x199C	0x4882    LDR	R0, [PC, #520]
0x199E	0x6800    LDR	R0, [R0, #0]
0x19A0	0xF04001B0  ORR	R1, R0, #176
0x19A4	0x4880    LDR	R0, [PC, #512]
0x19A6	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 99 :: 		setup_GPIOB_AF(10, AF11_LCD);
L_LCD_GLASS_Configure_GPIO452:
0x19A8	0x487F    LDR	R0, [PC, #508]
0x19AA	0x6801    LDR	R1, [R0, #0]
0x19AC	0xF46F6070  MVN	R0, #3840
0x19B0	0x4001    ANDS	R1, R0
0x19B2	0x487D    LDR	R0, [PC, #500]
0x19B4	0x6001    STR	R1, [R0, #0]
0x19B6	0x487C    LDR	R0, [PC, #496]
0x19B8	0x6800    LDR	R0, [R0, #0]
0x19BA	0xF4406130  ORR	R1, R0, #2816
0x19BE	0x487A    LDR	R0, [PC, #488]
0x19C0	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 100 :: 		setup_GPIOB_AF(11, AF11_LCD);
L_LCD_GLASS_Configure_GPIO463:
0x19C2	0x4879    LDR	R0, [PC, #484]
0x19C4	0x6801    LDR	R1, [R0, #0]
0x19C6	0xF46F4070  MVN	R0, #61440
0x19CA	0x4001    ANDS	R1, R0
0x19CC	0x4876    LDR	R0, [PC, #472]
0x19CE	0x6001    STR	R1, [R0, #0]
0x19D0	0x4875    LDR	R0, [PC, #468]
0x19D2	0x6800    LDR	R0, [R0, #0]
0x19D4	0xF4404130  ORR	R1, R0, #45056
0x19D8	0x4873    LDR	R0, [PC, #460]
0x19DA	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 101 :: 		setup_GPIOB_AF(12, AF11_LCD);
L_LCD_GLASS_Configure_GPIO474:
0x19DC	0x4872    LDR	R0, [PC, #456]
0x19DE	0x6801    LDR	R1, [R0, #0]
0x19E0	0xF46F2070  MVN	R0, #983040
0x19E4	0x4001    ANDS	R1, R0
0x19E6	0x4870    LDR	R0, [PC, #448]
0x19E8	0x6001    STR	R1, [R0, #0]
0x19EA	0x486F    LDR	R0, [PC, #444]
0x19EC	0x6800    LDR	R0, [R0, #0]
0x19EE	0xF4402130  ORR	R1, R0, #720896
0x19F2	0x486D    LDR	R0, [PC, #436]
0x19F4	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 102 :: 		setup_GPIOB_AF(13, AF11_LCD);
L_LCD_GLASS_Configure_GPIO485:
0x19F6	0x486C    LDR	R0, [PC, #432]
0x19F8	0x6801    LDR	R1, [R0, #0]
0x19FA	0xF46F0070  MVN	R0, #15728640
0x19FE	0x4001    ANDS	R1, R0
0x1A00	0x4869    LDR	R0, [PC, #420]
0x1A02	0x6001    STR	R1, [R0, #0]
0x1A04	0x4868    LDR	R0, [PC, #416]
0x1A06	0x6800    LDR	R0, [R0, #0]
0x1A08	0xF4400130  ORR	R1, R0, #11534336
0x1A0C	0x4866    LDR	R0, [PC, #408]
0x1A0E	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 103 :: 		setup_GPIOB_AF(14, AF11_LCD);
L_LCD_GLASS_Configure_GPIO496:
0x1A10	0x4865    LDR	R0, [PC, #404]
0x1A12	0x6801    LDR	R1, [R0, #0]
0x1A14	0xF06F6070  MVN	R0, #251658240
0x1A18	0x4001    ANDS	R1, R0
0x1A1A	0x4863    LDR	R0, [PC, #396]
0x1A1C	0x6001    STR	R1, [R0, #0]
0x1A1E	0x4862    LDR	R0, [PC, #392]
0x1A20	0x6800    LDR	R0, [R0, #0]
0x1A22	0xF0406130  ORR	R1, R0, #184549376
0x1A26	0x4860    LDR	R0, [PC, #384]
0x1A28	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 104 :: 		setup_GPIOB_AF(15, AF11_LCD);
L_LCD_GLASS_Configure_GPIO507:
0x1A2A	0x485F    LDR	R0, [PC, #380]
0x1A2C	0x6801    LDR	R1, [R0, #0]
0x1A2E	0xF64F70FF  MOVW	R0, #65535
0x1A32	0x4001    ANDS	R1, R0
0x1A34	0x485C    LDR	R0, [PC, #368]
0x1A36	0x6001    STR	R1, [R0, #0]
0x1A38	0x485B    LDR	R0, [PC, #364]
0x1A3A	0x6800    LDR	R0, [R0, #0]
0x1A3C	0xF0404130  ORR	R1, R0, #-1342177280
0x1A40	0x4859    LDR	R0, [PC, #356]
0x1A42	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 106 :: 		enable_GPIOC(true);
0x1A44	0x2101    MOVS	R1, #1
0x1A46	0x4859    LDR	R0, [PC, #356]
0x1A48	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 107 :: 		setup_GPIOC(0, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1A4A	0x4859    LDR	R0, [PC, #356]
0x1A4C	0x6801    LDR	R1, [R0, #0]
0x1A4E	0xF06F0003  MVN	R0, #3
0x1A52	0x4001    ANDS	R1, R0
0x1A54	0x4856    LDR	R0, [PC, #344]
0x1A56	0x6001    STR	R1, [R0, #0]
0x1A58	0x4855    LDR	R0, [PC, #340]
0x1A5A	0x6800    LDR	R0, [R0, #0]
0x1A5C	0xF0400102  ORR	R1, R0, #2
0x1A60	0x4853    LDR	R0, [PC, #332]
0x1A62	0x6001    STR	R1, [R0, #0]
0x1A64	0x4853    LDR	R0, [PC, #332]
0x1A66	0x6801    LDR	R1, [R0, #0]
0x1A68	0xF64F70FE  MOVW	R0, #65534
0x1A6C	0x4001    ANDS	R1, R0
0x1A6E	0x4851    LDR	R0, [PC, #324]
0x1A70	0x6001    STR	R1, [R0, #0]
0x1A72	0x4850    LDR	R0, [PC, #320]
0x1A74	0x6800    LDR	R0, [R0, #0]
0x1A76	0xF0400101  ORR	R1, R0, #1
0x1A7A	0x484E    LDR	R0, [PC, #312]
0x1A7C	0x6001    STR	R1, [R0, #0]
0x1A7E	0x484E    LDR	R0, [PC, #312]
0x1A80	0x6801    LDR	R1, [R0, #0]
0x1A82	0xF06F0003  MVN	R0, #3
0x1A86	0x4001    ANDS	R1, R0
0x1A88	0x484B    LDR	R0, [PC, #300]
0x1A8A	0x6001    STR	R1, [R0, #0]
0x1A8C	0x484A    LDR	R0, [PC, #296]
0x1A8E	0x6800    LDR	R0, [R0, #0]
0x1A90	0xF0400103  ORR	R1, R0, #3
0x1A94	0x4848    LDR	R0, [PC, #288]
0x1A96	0x6001    STR	R1, [R0, #0]
0x1A98	0x4848    LDR	R0, [PC, #288]
0x1A9A	0x6801    LDR	R1, [R0, #0]
0x1A9C	0xF06F0003  MVN	R0, #3
0x1AA0	0x4001    ANDS	R1, R0
0x1AA2	0x4846    LDR	R0, [PC, #280]
0x1AA4	0x6001    STR	R1, [R0, #0]
0x1AA6	0x4845    LDR	R0, [PC, #276]
0x1AA8	0x6801    LDR	R1, [R0, #0]
0x1AAA	0x4844    LDR	R0, [PC, #272]
0x1AAC	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 108 :: 		setup_GPIOC(1, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1AAE	0x4840    LDR	R0, [PC, #256]
0x1AB0	0x6801    LDR	R1, [R0, #0]
0x1AB2	0xF06F000C  MVN	R0, #12
0x1AB6	0x4001    ANDS	R1, R0
0x1AB8	0x483D    LDR	R0, [PC, #244]
0x1ABA	0x6001    STR	R1, [R0, #0]
0x1ABC	0x483C    LDR	R0, [PC, #240]
0x1ABE	0x6800    LDR	R0, [R0, #0]
0x1AC0	0xF0400108  ORR	R1, R0, #8
0x1AC4	0x483A    LDR	R0, [PC, #232]
0x1AC6	0x6001    STR	R1, [R0, #0]
0x1AC8	0x483A    LDR	R0, [PC, #232]
0x1ACA	0x6801    LDR	R1, [R0, #0]
0x1ACC	0xF64F70FD  MOVW	R0, #65533
0x1AD0	0x4001    ANDS	R1, R0
0x1AD2	0x4838    LDR	R0, [PC, #224]
0x1AD4	0x6001    STR	R1, [R0, #0]
0x1AD6	0x4837    LDR	R0, [PC, #220]
0x1AD8	0x6800    LDR	R0, [R0, #0]
0x1ADA	0xF0400102  ORR	R1, R0, #2
0x1ADE	0x4835    LDR	R0, [PC, #212]
0x1AE0	0x6001    STR	R1, [R0, #0]
0x1AE2	0x4835    LDR	R0, [PC, #212]
0x1AE4	0x6801    LDR	R1, [R0, #0]
0x1AE6	0xF06F000C  MVN	R0, #12
0x1AEA	0x4001    ANDS	R1, R0
0x1AEC	0x4832    LDR	R0, [PC, #200]
0x1AEE	0x6001    STR	R1, [R0, #0]
0x1AF0	0x4831    LDR	R0, [PC, #196]
0x1AF2	0x6800    LDR	R0, [R0, #0]
0x1AF4	0xF040010C  ORR	R1, R0, #12
0x1AF8	0x482F    LDR	R0, [PC, #188]
0x1AFA	0x6001    STR	R1, [R0, #0]
0x1AFC	0x482F    LDR	R0, [PC, #188]
0x1AFE	0x6801    LDR	R1, [R0, #0]
0x1B00	0xF06F000C  MVN	R0, #12
0x1B04	0x4001    ANDS	R1, R0
0x1B06	0x482D    LDR	R0, [PC, #180]
0x1B08	0x6001    STR	R1, [R0, #0]
0x1B0A	0x482C    LDR	R0, [PC, #176]
0x1B0C	0x6801    LDR	R1, [R0, #0]
0x1B0E	0x482B    LDR	R0, [PC, #172]
0x1B10	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 109 :: 		setup_GPIOC(2, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1B12	0x4827    LDR	R0, [PC, #156]
0x1B14	0x6801    LDR	R1, [R0, #0]
0x1B16	0xF06F0030  MVN	R0, #48
0x1B1A	0x4001    ANDS	R1, R0
0x1B1C	0x4824    LDR	R0, [PC, #144]
0x1B1E	0x6001    STR	R1, [R0, #0]
0x1B20	0x4823    LDR	R0, [PC, #140]
0x1B22	0x6800    LDR	R0, [R0, #0]
0x1B24	0xF0400120  ORR	R1, R0, #32
0x1B28	0x4821    LDR	R0, [PC, #132]
0x1B2A	0x6001    STR	R1, [R0, #0]
0x1B2C	0x4821    LDR	R0, [PC, #132]
0x1B2E	0x6801    LDR	R1, [R0, #0]
0x1B30	0xF64F70FB  MOVW	R0, #65531
0x1B34	0x4001    ANDS	R1, R0
0x1B36	0x481F    LDR	R0, [PC, #124]
0x1B38	0x6001    STR	R1, [R0, #0]
0x1B3A	0x481E    LDR	R0, [PC, #120]
0x1B3C	0x6800    LDR	R0, [R0, #0]
0x1B3E	0xF0400104  ORR	R1, R0, #4
0x1B42	0x481C    LDR	R0, [PC, #112]
0x1B44	0x6001    STR	R1, [R0, #0]
0x1B46	0x481C    LDR	R0, [PC, #112]
0x1B48	0x6801    LDR	R1, [R0, #0]
0x1B4A	0xF06F0030  MVN	R0, #48
0x1B4E	0x4001    ANDS	R1, R0
0x1B50	0x4819    LDR	R0, [PC, #100]
0x1B52	0x6001    STR	R1, [R0, #0]
0x1B54	0x4818    LDR	R0, [PC, #96]
0x1B56	0x6800    LDR	R0, [R0, #0]
0x1B58	0xF0400130  ORR	R1, R0, #48
0x1B5C	0x4816    LDR	R0, [PC, #88]
0x1B5E	0x6001    STR	R1, [R0, #0]
0x1B60	0x4816    LDR	R0, [PC, #88]
0x1B62	0x6801    LDR	R1, [R0, #0]
0x1B64	0xF06F0030  MVN	R0, #48
0x1B68	0x4001    ANDS	R1, R0
0x1B6A	0x4814    LDR	R0, [PC, #80]
0x1B6C	0x6001    STR	R1, [R0, #0]
0x1B6E	0x4813    LDR	R0, [PC, #76]
0x1B70	0x6801    LDR	R1, [R0, #0]
0x1B72	0x4812    LDR	R0, [PC, #72]
0x1B74	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 110 :: 		setup_GPIOC(3, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1B76	0x480E    LDR	R0, [PC, #56]
0x1B78	0x6801    LDR	R1, [R0, #0]
0x1B7A	0xF06F00C0  MVN	R0, #192
0x1B7E	0x4001    ANDS	R1, R0
0x1B80	0x480B    LDR	R0, [PC, #44]
0x1B82	0x6001    STR	R1, [R0, #0]
0x1B84	0x480A    LDR	R0, [PC, #40]
0x1B86	0x6800    LDR	R0, [R0, #0]
0x1B88	0xF0400180  ORR	R1, R0, #128
0x1B8C	0x4808    LDR	R0, [PC, #32]
0x1B8E	0x6001    STR	R1, [R0, #0]
0x1B90	0x4808    LDR	R0, [PC, #32]
0x1B92	0x6801    LDR	R1, [R0, #0]
0x1B94	0xF64F70F7  MOVW	R0, #65527
0x1B98	0x4001    ANDS	R1, R0
0x1B9A	0x4806    LDR	R0, [PC, #24]
0x1B9C	0x6001    STR	R1, [R0, #0]
0x1B9E	0x4805    LDR	R0, [PC, #20]
0x1BA0	0x6800    LDR	R0, [R0, #0]
0x1BA2	0xF0400108  ORR	R1, R0, #8
0x1BA6	0xE00B    B	#22
0x1BA8	0x04244002  	GPIOB_AFRH+0
0x1BAC	0x03884247  	RCC_AHBENRbits+0
0x1BB0	0x08004002  	GPIOC_MODER+0
0x1BB4	0x08044002  	GPIOC_OTYPER+0
0x1BB8	0x08084002  	GPIOC_OSPEEDER+0
0x1BBC	0x080C4002  	GPIOC_PUPDR+0
0x1BC0	0x4882    LDR	R0, [PC, #520]
0x1BC2	0x6001    STR	R1, [R0, #0]
0x1BC4	0x4882    LDR	R0, [PC, #520]
0x1BC6	0x6801    LDR	R1, [R0, #0]
0x1BC8	0xF06F00C0  MVN	R0, #192
0x1BCC	0x4001    ANDS	R1, R0
0x1BCE	0x4880    LDR	R0, [PC, #512]
0x1BD0	0x6001    STR	R1, [R0, #0]
0x1BD2	0x487F    LDR	R0, [PC, #508]
0x1BD4	0x6800    LDR	R0, [R0, #0]
0x1BD6	0xF04001C0  ORR	R1, R0, #192
0x1BDA	0x487D    LDR	R0, [PC, #500]
0x1BDC	0x6001    STR	R1, [R0, #0]
0x1BDE	0x487D    LDR	R0, [PC, #500]
0x1BE0	0x6801    LDR	R1, [R0, #0]
0x1BE2	0xF06F00C0  MVN	R0, #192
0x1BE6	0x4001    ANDS	R1, R0
0x1BE8	0x487A    LDR	R0, [PC, #488]
0x1BEA	0x6001    STR	R1, [R0, #0]
0x1BEC	0x4879    LDR	R0, [PC, #484]
0x1BEE	0x6801    LDR	R1, [R0, #0]
0x1BF0	0x4878    LDR	R0, [PC, #480]
0x1BF2	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 111 :: 		setup_GPIOC(6, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1BF4	0x4878    LDR	R0, [PC, #480]
0x1BF6	0x6801    LDR	R1, [R0, #0]
0x1BF8	0xF46F5040  MVN	R0, #12288
0x1BFC	0x4001    ANDS	R1, R0
0x1BFE	0x4876    LDR	R0, [PC, #472]
0x1C00	0x6001    STR	R1, [R0, #0]
0x1C02	0x4875    LDR	R0, [PC, #468]
0x1C04	0x6800    LDR	R0, [R0, #0]
0x1C06	0xF4405100  ORR	R1, R0, #8192
0x1C0A	0x4873    LDR	R0, [PC, #460]
0x1C0C	0x6001    STR	R1, [R0, #0]
0x1C0E	0x486F    LDR	R0, [PC, #444]
0x1C10	0x6801    LDR	R1, [R0, #0]
0x1C12	0xF64F70BF  MOVW	R0, #65471
0x1C16	0x4001    ANDS	R1, R0
0x1C18	0x486C    LDR	R0, [PC, #432]
0x1C1A	0x6001    STR	R1, [R0, #0]
0x1C1C	0x486B    LDR	R0, [PC, #428]
0x1C1E	0x6800    LDR	R0, [R0, #0]
0x1C20	0xF0400140  ORR	R1, R0, #64
0x1C24	0x4869    LDR	R0, [PC, #420]
0x1C26	0x6001    STR	R1, [R0, #0]
0x1C28	0x4869    LDR	R0, [PC, #420]
0x1C2A	0x6801    LDR	R1, [R0, #0]
0x1C2C	0xF46F5040  MVN	R0, #12288
0x1C30	0x4001    ANDS	R1, R0
0x1C32	0x4867    LDR	R0, [PC, #412]
0x1C34	0x6001    STR	R1, [R0, #0]
0x1C36	0x4866    LDR	R0, [PC, #408]
0x1C38	0x6800    LDR	R0, [R0, #0]
0x1C3A	0xF4405140  ORR	R1, R0, #12288
0x1C3E	0x4864    LDR	R0, [PC, #400]
0x1C40	0x6001    STR	R1, [R0, #0]
0x1C42	0x4864    LDR	R0, [PC, #400]
0x1C44	0x6801    LDR	R1, [R0, #0]
0x1C46	0xF46F5040  MVN	R0, #12288
0x1C4A	0x4001    ANDS	R1, R0
0x1C4C	0x4861    LDR	R0, [PC, #388]
0x1C4E	0x6001    STR	R1, [R0, #0]
0x1C50	0x4860    LDR	R0, [PC, #384]
0x1C52	0x6801    LDR	R1, [R0, #0]
0x1C54	0x485F    LDR	R0, [PC, #380]
0x1C56	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 112 :: 		setup_GPIOC(7, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1C58	0x485F    LDR	R0, [PC, #380]
0x1C5A	0x6801    LDR	R1, [R0, #0]
0x1C5C	0xF46F4040  MVN	R0, #49152
0x1C60	0x4001    ANDS	R1, R0
0x1C62	0x485D    LDR	R0, [PC, #372]
0x1C64	0x6001    STR	R1, [R0, #0]
0x1C66	0x485C    LDR	R0, [PC, #368]
0x1C68	0x6800    LDR	R0, [R0, #0]
0x1C6A	0xF4404100  ORR	R1, R0, #32768
0x1C6E	0x485A    LDR	R0, [PC, #360]
0x1C70	0x6001    STR	R1, [R0, #0]
0x1C72	0x4856    LDR	R0, [PC, #344]
0x1C74	0x6801    LDR	R1, [R0, #0]
0x1C76	0xF64F707F  MOVW	R0, #65407
0x1C7A	0x4001    ANDS	R1, R0
0x1C7C	0x4853    LDR	R0, [PC, #332]
0x1C7E	0x6001    STR	R1, [R0, #0]
0x1C80	0x4852    LDR	R0, [PC, #328]
0x1C82	0x6800    LDR	R0, [R0, #0]
0x1C84	0xF0400180  ORR	R1, R0, #128
0x1C88	0x4850    LDR	R0, [PC, #320]
0x1C8A	0x6001    STR	R1, [R0, #0]
0x1C8C	0x4850    LDR	R0, [PC, #320]
0x1C8E	0x6801    LDR	R1, [R0, #0]
0x1C90	0xF46F4040  MVN	R0, #49152
0x1C94	0x4001    ANDS	R1, R0
0x1C96	0x484E    LDR	R0, [PC, #312]
0x1C98	0x6001    STR	R1, [R0, #0]
0x1C9A	0x484D    LDR	R0, [PC, #308]
0x1C9C	0x6800    LDR	R0, [R0, #0]
0x1C9E	0xF4404140  ORR	R1, R0, #49152
0x1CA2	0x484B    LDR	R0, [PC, #300]
0x1CA4	0x6001    STR	R1, [R0, #0]
0x1CA6	0x484B    LDR	R0, [PC, #300]
0x1CA8	0x6801    LDR	R1, [R0, #0]
0x1CAA	0xF46F4040  MVN	R0, #49152
0x1CAE	0x4001    ANDS	R1, R0
0x1CB0	0x4848    LDR	R0, [PC, #288]
0x1CB2	0x6001    STR	R1, [R0, #0]
0x1CB4	0x4847    LDR	R0, [PC, #284]
0x1CB6	0x6801    LDR	R1, [R0, #0]
0x1CB8	0x4846    LDR	R0, [PC, #280]
0x1CBA	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 113 :: 		setup_GPIOC(8, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1CBC	0x4846    LDR	R0, [PC, #280]
0x1CBE	0x6801    LDR	R1, [R0, #0]
0x1CC0	0xF46F3040  MVN	R0, #196608
0x1CC4	0x4001    ANDS	R1, R0
0x1CC6	0x4844    LDR	R0, [PC, #272]
0x1CC8	0x6001    STR	R1, [R0, #0]
0x1CCA	0x4843    LDR	R0, [PC, #268]
0x1CCC	0x6800    LDR	R0, [R0, #0]
0x1CCE	0xF4403100  ORR	R1, R0, #131072
0x1CD2	0x4841    LDR	R0, [PC, #260]
0x1CD4	0x6001    STR	R1, [R0, #0]
0x1CD6	0x483D    LDR	R0, [PC, #244]
0x1CD8	0x6801    LDR	R1, [R0, #0]
0x1CDA	0xF64F60FF  MOVW	R0, #65279
0x1CDE	0x4001    ANDS	R1, R0
0x1CE0	0x483A    LDR	R0, [PC, #232]
0x1CE2	0x6001    STR	R1, [R0, #0]
0x1CE4	0x4839    LDR	R0, [PC, #228]
0x1CE6	0x6800    LDR	R0, [R0, #0]
0x1CE8	0xF4407180  ORR	R1, R0, #256
0x1CEC	0x4837    LDR	R0, [PC, #220]
0x1CEE	0x6001    STR	R1, [R0, #0]
0x1CF0	0x4837    LDR	R0, [PC, #220]
0x1CF2	0x6801    LDR	R1, [R0, #0]
0x1CF4	0xF46F3040  MVN	R0, #196608
0x1CF8	0x4001    ANDS	R1, R0
0x1CFA	0x4835    LDR	R0, [PC, #212]
0x1CFC	0x6001    STR	R1, [R0, #0]
0x1CFE	0x4834    LDR	R0, [PC, #208]
0x1D00	0x6800    LDR	R0, [R0, #0]
0x1D02	0xF4403140  ORR	R1, R0, #196608
0x1D06	0x4832    LDR	R0, [PC, #200]
0x1D08	0x6001    STR	R1, [R0, #0]
0x1D0A	0x4832    LDR	R0, [PC, #200]
0x1D0C	0x6801    LDR	R1, [R0, #0]
0x1D0E	0xF46F3040  MVN	R0, #196608
0x1D12	0x4001    ANDS	R1, R0
0x1D14	0x482F    LDR	R0, [PC, #188]
0x1D16	0x6001    STR	R1, [R0, #0]
0x1D18	0x482E    LDR	R0, [PC, #184]
0x1D1A	0x6801    LDR	R1, [R0, #0]
0x1D1C	0x482D    LDR	R0, [PC, #180]
0x1D1E	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 114 :: 		setup_GPIOC(9, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1D20	0x482D    LDR	R0, [PC, #180]
0x1D22	0x6801    LDR	R1, [R0, #0]
0x1D24	0xF46F2040  MVN	R0, #786432
0x1D28	0x4001    ANDS	R1, R0
0x1D2A	0x482B    LDR	R0, [PC, #172]
0x1D2C	0x6001    STR	R1, [R0, #0]
0x1D2E	0x482A    LDR	R0, [PC, #168]
0x1D30	0x6800    LDR	R0, [R0, #0]
0x1D32	0xF4402100  ORR	R1, R0, #524288
0x1D36	0x4828    LDR	R0, [PC, #160]
0x1D38	0x6001    STR	R1, [R0, #0]
0x1D3A	0x4824    LDR	R0, [PC, #144]
0x1D3C	0x6801    LDR	R1, [R0, #0]
0x1D3E	0xF64F50FF  MOVW	R0, #65023
0x1D42	0x4001    ANDS	R1, R0
0x1D44	0x4821    LDR	R0, [PC, #132]
0x1D46	0x6001    STR	R1, [R0, #0]
0x1D48	0x4820    LDR	R0, [PC, #128]
0x1D4A	0x6800    LDR	R0, [R0, #0]
0x1D4C	0xF4407100  ORR	R1, R0, #512
0x1D50	0x481E    LDR	R0, [PC, #120]
0x1D52	0x6001    STR	R1, [R0, #0]
0x1D54	0x481E    LDR	R0, [PC, #120]
0x1D56	0x6801    LDR	R1, [R0, #0]
0x1D58	0xF46F2040  MVN	R0, #786432
0x1D5C	0x4001    ANDS	R1, R0
0x1D5E	0x481C    LDR	R0, [PC, #112]
0x1D60	0x6001    STR	R1, [R0, #0]
0x1D62	0x481B    LDR	R0, [PC, #108]
0x1D64	0x6800    LDR	R0, [R0, #0]
0x1D66	0xF4402140  ORR	R1, R0, #786432
0x1D6A	0x4819    LDR	R0, [PC, #100]
0x1D6C	0x6001    STR	R1, [R0, #0]
0x1D6E	0x4819    LDR	R0, [PC, #100]
0x1D70	0x6801    LDR	R1, [R0, #0]
0x1D72	0xF46F2040  MVN	R0, #786432
0x1D76	0x4001    ANDS	R1, R0
0x1D78	0x4816    LDR	R0, [PC, #88]
0x1D7A	0x6001    STR	R1, [R0, #0]
0x1D7C	0x4815    LDR	R0, [PC, #84]
0x1D7E	0x6801    LDR	R1, [R0, #0]
0x1D80	0x4814    LDR	R0, [PC, #80]
0x1D82	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 115 :: 		setup_GPIOC(10, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1D84	0x4814    LDR	R0, [PC, #80]
0x1D86	0x6801    LDR	R1, [R0, #0]
0x1D88	0xF46F1040  MVN	R0, #3145728
0x1D8C	0x4001    ANDS	R1, R0
0x1D8E	0x4812    LDR	R0, [PC, #72]
0x1D90	0x6001    STR	R1, [R0, #0]
0x1D92	0x4811    LDR	R0, [PC, #68]
0x1D94	0x6800    LDR	R0, [R0, #0]
0x1D96	0xF4401100  ORR	R1, R0, #2097152
0x1D9A	0x480F    LDR	R0, [PC, #60]
0x1D9C	0x6001    STR	R1, [R0, #0]
0x1D9E	0x480B    LDR	R0, [PC, #44]
0x1DA0	0x6801    LDR	R1, [R0, #0]
0x1DA2	0xF64F30FF  MOVW	R0, #64511
0x1DA6	0x4001    ANDS	R1, R0
0x1DA8	0x4808    LDR	R0, [PC, #32]
0x1DAA	0x6001    STR	R1, [R0, #0]
0x1DAC	0x4807    LDR	R0, [PC, #28]
0x1DAE	0x6800    LDR	R0, [R0, #0]
0x1DB0	0xF4406180  ORR	R1, R0, #1024
0x1DB4	0x4805    LDR	R0, [PC, #20]
0x1DB6	0x6001    STR	R1, [R0, #0]
0x1DB8	0x4805    LDR	R0, [PC, #20]
0x1DBA	0x6801    LDR	R1, [R0, #0]
0x1DBC	0xF46F1040  MVN	R0, #3145728
0x1DC0	0x4001    ANDS	R1, R0
0x1DC2	0x4803    LDR	R0, [PC, #12]
0x1DC4	0x6001    STR	R1, [R0, #0]
0x1DC6	0x4802    LDR	R0, [PC, #8]
0x1DC8	0xF000B808  B	#16
0x1DCC	0x08044002  	GPIOC_OTYPER+0
0x1DD0	0x08084002  	GPIOC_OSPEEDER+0
0x1DD4	0x080C4002  	GPIOC_PUPDR+0
0x1DD8	0x08004002  	GPIOC_MODER+0
0x1DDC	0x6800    LDR	R0, [R0, #0]
0x1DDE	0xF4401140  ORR	R1, R0, #3145728
0x1DE2	0x4861    LDR	R0, [PC, #388]
0x1DE4	0x6001    STR	R1, [R0, #0]
0x1DE6	0x4861    LDR	R0, [PC, #388]
0x1DE8	0x6801    LDR	R1, [R0, #0]
0x1DEA	0xF46F1040  MVN	R0, #3145728
0x1DEE	0x4001    ANDS	R1, R0
0x1DF0	0x485E    LDR	R0, [PC, #376]
0x1DF2	0x6001    STR	R1, [R0, #0]
0x1DF4	0x485D    LDR	R0, [PC, #372]
0x1DF6	0x6801    LDR	R1, [R0, #0]
0x1DF8	0x485C    LDR	R0, [PC, #368]
0x1DFA	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 116 :: 		setup_GPIOC(11, AFIO, output_open_drain, high_speed, no_pull_resistor);
0x1DFC	0x485C    LDR	R0, [PC, #368]
0x1DFE	0x6801    LDR	R1, [R0, #0]
0x1E00	0xF46F0040  MVN	R0, #12582912
0x1E04	0x4001    ANDS	R1, R0
0x1E06	0x485A    LDR	R0, [PC, #360]
0x1E08	0x6001    STR	R1, [R0, #0]
0x1E0A	0x4859    LDR	R0, [PC, #356]
0x1E0C	0x6800    LDR	R0, [R0, #0]
0x1E0E	0xF4400100  ORR	R1, R0, #8388608
0x1E12	0x4857    LDR	R0, [PC, #348]
0x1E14	0x6001    STR	R1, [R0, #0]
0x1E16	0x4857    LDR	R0, [PC, #348]
0x1E18	0x6801    LDR	R1, [R0, #0]
0x1E1A	0xF24F70FF  MOVW	R0, #63487
0x1E1E	0x4001    ANDS	R1, R0
0x1E20	0x4854    LDR	R0, [PC, #336]
0x1E22	0x6001    STR	R1, [R0, #0]
0x1E24	0x4853    LDR	R0, [PC, #332]
0x1E26	0x6800    LDR	R0, [R0, #0]
0x1E28	0xF4406100  ORR	R1, R0, #2048
0x1E2C	0x4851    LDR	R0, [PC, #324]
0x1E2E	0x6001    STR	R1, [R0, #0]
0x1E30	0x484D    LDR	R0, [PC, #308]
0x1E32	0x6801    LDR	R1, [R0, #0]
0x1E34	0xF46F0040  MVN	R0, #12582912
0x1E38	0x4001    ANDS	R1, R0
0x1E3A	0x484B    LDR	R0, [PC, #300]
0x1E3C	0x6001    STR	R1, [R0, #0]
0x1E3E	0x484A    LDR	R0, [PC, #296]
0x1E40	0x6800    LDR	R0, [R0, #0]
0x1E42	0xF4400140  ORR	R1, R0, #12582912
0x1E46	0x4848    LDR	R0, [PC, #288]
0x1E48	0x6001    STR	R1, [R0, #0]
0x1E4A	0x4848    LDR	R0, [PC, #288]
0x1E4C	0x6801    LDR	R1, [R0, #0]
0x1E4E	0xF46F0040  MVN	R0, #12582912
0x1E52	0x4001    ANDS	R1, R0
0x1E54	0x4845    LDR	R0, [PC, #276]
0x1E56	0x6001    STR	R1, [R0, #0]
0x1E58	0x4844    LDR	R0, [PC, #272]
0x1E5A	0x6801    LDR	R1, [R0, #0]
0x1E5C	0x4843    LDR	R0, [PC, #268]
0x1E5E	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 118 :: 		setup_GPIOC_AF(0, AF11_LCD);
0x1E60	0x4845    LDR	R0, [PC, #276]
0x1E62	0x6801    LDR	R1, [R0, #0]
0x1E64	0xF06F000F  MVN	R0, #15
0x1E68	0x4001    ANDS	R1, R0
0x1E6A	0x4843    LDR	R0, [PC, #268]
0x1E6C	0x6001    STR	R1, [R0, #0]
0x1E6E	0x4842    LDR	R0, [PC, #264]
0x1E70	0x6800    LDR	R0, [R0, #0]
0x1E72	0xF040010B  ORR	R1, R0, #11
0x1E76	0x4840    LDR	R0, [PC, #256]
0x1E78	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO674:
;glass_lcd.c, 119 :: 		setup_GPIOC_AF(1, AF11_LCD);
0x1E7A	0x483F    LDR	R0, [PC, #252]
0x1E7C	0x6801    LDR	R1, [R0, #0]
0x1E7E	0xF06F00F0  MVN	R0, #240
0x1E82	0x4001    ANDS	R1, R0
0x1E84	0x483C    LDR	R0, [PC, #240]
0x1E86	0x6001    STR	R1, [R0, #0]
0x1E88	0x483B    LDR	R0, [PC, #236]
0x1E8A	0x6800    LDR	R0, [R0, #0]
0x1E8C	0xF04001B0  ORR	R1, R0, #176
0x1E90	0x4839    LDR	R0, [PC, #228]
0x1E92	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO687:
;glass_lcd.c, 120 :: 		setup_GPIOC_AF(2, AF11_LCD);
0x1E94	0x4838    LDR	R0, [PC, #224]
0x1E96	0x6801    LDR	R1, [R0, #0]
0x1E98	0xF46F6070  MVN	R0, #3840
0x1E9C	0x4001    ANDS	R1, R0
0x1E9E	0x4836    LDR	R0, [PC, #216]
0x1EA0	0x6001    STR	R1, [R0, #0]
0x1EA2	0x4835    LDR	R0, [PC, #212]
0x1EA4	0x6800    LDR	R0, [R0, #0]
0x1EA6	0xF4406130  ORR	R1, R0, #2816
0x1EAA	0x4833    LDR	R0, [PC, #204]
0x1EAC	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO700:
;glass_lcd.c, 121 :: 		setup_GPIOC_AF(3, AF11_LCD);
0x1EAE	0x4832    LDR	R0, [PC, #200]
0x1EB0	0x6801    LDR	R1, [R0, #0]
0x1EB2	0xF46F4070  MVN	R0, #61440
0x1EB6	0x4001    ANDS	R1, R0
0x1EB8	0x482F    LDR	R0, [PC, #188]
0x1EBA	0x6001    STR	R1, [R0, #0]
0x1EBC	0x482E    LDR	R0, [PC, #184]
0x1EBE	0x6800    LDR	R0, [R0, #0]
0x1EC0	0xF4404130  ORR	R1, R0, #45056
0x1EC4	0x482C    LDR	R0, [PC, #176]
0x1EC6	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO713:
;glass_lcd.c, 122 :: 		setup_GPIOC_AF(6, AF11_LCD);
0x1EC8	0x482B    LDR	R0, [PC, #172]
0x1ECA	0x6801    LDR	R1, [R0, #0]
0x1ECC	0xF06F6070  MVN	R0, #251658240
0x1ED0	0x4001    ANDS	R1, R0
0x1ED2	0x4829    LDR	R0, [PC, #164]
0x1ED4	0x6001    STR	R1, [R0, #0]
0x1ED6	0x4828    LDR	R0, [PC, #160]
0x1ED8	0x6800    LDR	R0, [R0, #0]
0x1EDA	0xF0406130  ORR	R1, R0, #184549376
0x1EDE	0x4826    LDR	R0, [PC, #152]
0x1EE0	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO726:
;glass_lcd.c, 123 :: 		setup_GPIOC_AF(7, AF11_LCD);
0x1EE2	0x4825    LDR	R0, [PC, #148]
0x1EE4	0x6801    LDR	R1, [R0, #0]
0x1EE6	0xF64F70FF  MOVW	R0, #65535
0x1EEA	0x4001    ANDS	R1, R0
0x1EEC	0x4822    LDR	R0, [PC, #136]
0x1EEE	0x6001    STR	R1, [R0, #0]
0x1EF0	0x4821    LDR	R0, [PC, #132]
0x1EF2	0x6800    LDR	R0, [R0, #0]
0x1EF4	0xF0404130  ORR	R1, R0, #-1342177280
0x1EF8	0x481F    LDR	R0, [PC, #124]
0x1EFA	0x6001    STR	R1, [R0, #0]
L_LCD_GLASS_Configure_GPIO739:
;glass_lcd.c, 124 :: 		setup_GPIOC_AF(8, AF11_LCD);
L_LCD_GLASS_Configure_GPIO746:
0x1EFC	0x481F    LDR	R0, [PC, #124]
0x1EFE	0x6801    LDR	R1, [R0, #0]
0x1F00	0xF06F000F  MVN	R0, #15
0x1F04	0x4001    ANDS	R1, R0
0x1F06	0x481D    LDR	R0, [PC, #116]
0x1F08	0x6001    STR	R1, [R0, #0]
0x1F0A	0x481C    LDR	R0, [PC, #112]
0x1F0C	0x6800    LDR	R0, [R0, #0]
0x1F0E	0xF040010B  ORR	R1, R0, #11
0x1F12	0x481A    LDR	R0, [PC, #104]
0x1F14	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 125 :: 		setup_GPIOC_AF(9, AF11_LCD);
L_LCD_GLASS_Configure_GPIO757:
0x1F16	0x4819    LDR	R0, [PC, #100]
0x1F18	0x6801    LDR	R1, [R0, #0]
0x1F1A	0xF06F00F0  MVN	R0, #240
0x1F1E	0x4001    ANDS	R1, R0
0x1F20	0x4816    LDR	R0, [PC, #88]
0x1F22	0x6001    STR	R1, [R0, #0]
0x1F24	0x4815    LDR	R0, [PC, #84]
0x1F26	0x6800    LDR	R0, [R0, #0]
0x1F28	0xF04001B0  ORR	R1, R0, #176
0x1F2C	0x4813    LDR	R0, [PC, #76]
0x1F2E	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 126 :: 		setup_GPIOC_AF(10, AF11_LCD);
L_LCD_GLASS_Configure_GPIO768:
0x1F30	0x4812    LDR	R0, [PC, #72]
0x1F32	0x6801    LDR	R1, [R0, #0]
0x1F34	0xF46F6070  MVN	R0, #3840
0x1F38	0x4001    ANDS	R1, R0
0x1F3A	0x4810    LDR	R0, [PC, #64]
0x1F3C	0x6001    STR	R1, [R0, #0]
0x1F3E	0x480F    LDR	R0, [PC, #60]
0x1F40	0x6800    LDR	R0, [R0, #0]
0x1F42	0xF4406130  ORR	R1, R0, #2816
0x1F46	0x480D    LDR	R0, [PC, #52]
0x1F48	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 127 :: 		setup_GPIOC_AF(11, AF11_LCD);
L_LCD_GLASS_Configure_GPIO779:
0x1F4A	0x480C    LDR	R0, [PC, #48]
0x1F4C	0x6801    LDR	R1, [R0, #0]
0x1F4E	0xF46F4070  MVN	R0, #61440
0x1F52	0x4001    ANDS	R1, R0
0x1F54	0x4809    LDR	R0, [PC, #36]
0x1F56	0x6001    STR	R1, [R0, #0]
0x1F58	0x4808    LDR	R0, [PC, #32]
0x1F5A	0x6800    LDR	R0, [R0, #0]
0x1F5C	0xF4404130  ORR	R1, R0, #45056
0x1F60	0x4806    LDR	R0, [PC, #24]
0x1F62	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 128 :: 		}
L_end_LCD_GLASS_Configure_GPIO:
0x1F64	0x4770    BX	LR
0x1F66	0xBF00    NOP
0x1F68	0x08084002  	GPIOC_OSPEEDER+0
0x1F6C	0x080C4002  	GPIOC_PUPDR+0
0x1F70	0x08004002  	GPIOC_MODER+0
0x1F74	0x08044002  	GPIOC_OTYPER+0
0x1F78	0x08204002  	GPIOC_AFRL+0
0x1F7C	0x08244002  	GPIOC_AFRH+0
; end of _LCD_GLASS_Configure_GPIO
_LCD_Master_Reset:
;glass_lcd.c, 39 :: 		void LCD_Master_Reset()
0x10AC	0xB081    SUB	SP, SP, #4
0x10AE	0xF8CDE000  STR	LR, [SP, #0]
;glass_lcd.c, 41 :: 		LCD_CR = 0x00000000;
0x10B2	0x2100    MOVS	R1, #0
0x10B4	0x4808    LDR	R0, [PC, #32]
0x10B6	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 42 :: 		LCD_SR = 0x00000000;
0x10B8	0x2100    MOVS	R1, #0
0x10BA	0x4808    LDR	R0, [PC, #32]
0x10BC	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 43 :: 		LCD_FCR = 0x00000000;
0x10BE	0x2100    MOVS	R1, #0
0x10C0	0x4807    LDR	R0, [PC, #28]
0x10C2	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 44 :: 		LCD_CLR = 0x00000000;
0x10C4	0x2100    MOVS	R1, #0
0x10C6	0x4807    LDR	R0, [PC, #28]
0x10C8	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 45 :: 		LCD_RAM_clear();
0x10CA	0xF7FFFFC5  BL	_LCD_RAM_clear+0
;glass_lcd.c, 46 :: 		}
L_end_LCD_Master_Reset:
0x10CE	0xF8DDE000  LDR	LR, [SP, #0]
0x10D2	0xB001    ADD	SP, SP, #4
0x10D4	0x4770    BX	LR
0x10D6	0xBF00    NOP
0x10D8	0x24004000  	LCD_CR+0
0x10DC	0x24084000  	LCD_SR+0
0x10E0	0x24044000  	LCD_FCR+0
0x10E4	0x240C4000  	LCD_CLR+0
; end of _LCD_Master_Reset
_LCD_RAM_clear:
;glass_lcd.c, 49 :: 		void LCD_RAM_clear()
;glass_lcd.c, 51 :: 		LCD_RAM_COM0 = 0x00000000;
0x1058	0x2100    MOVS	R1, #0
0x105A	0x480C    LDR	R0, [PC, #48]
0x105C	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 52 :: 		LCD_RAM_COM1 = 0x00000000;
0x105E	0x2100    MOVS	R1, #0
0x1060	0x480B    LDR	R0, [PC, #44]
0x1062	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 53 :: 		LCD_RAM_COM2 = 0x00000000;
0x1064	0x2100    MOVS	R1, #0
0x1066	0x480B    LDR	R0, [PC, #44]
0x1068	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 54 :: 		LCD_RAM_COM3 = 0x00000000;
0x106A	0x2100    MOVS	R1, #0
0x106C	0x480A    LDR	R0, [PC, #40]
0x106E	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 55 :: 		LCD_RAM_COM4 = 0x00000000;
0x1070	0x2100    MOVS	R1, #0
0x1072	0x480A    LDR	R0, [PC, #40]
0x1074	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 56 :: 		LCD_RAM_COM5 = 0x00000000;
0x1076	0x2100    MOVS	R1, #0
0x1078	0x4809    LDR	R0, [PC, #36]
0x107A	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 57 :: 		LCD_RAM_COM6 = 0x00000000;
0x107C	0x2100    MOVS	R1, #0
0x107E	0x4809    LDR	R0, [PC, #36]
0x1080	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 58 :: 		LCD_RAM_COM7 = 0x00000000;
0x1082	0x2100    MOVS	R1, #0
0x1084	0x4808    LDR	R0, [PC, #32]
0x1086	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 59 :: 		}
L_end_LCD_RAM_clear:
0x1088	0x4770    BX	LR
0x108A	0xBF00    NOP
0x108C	0x24144000  	LCD_RAM_COM0+0
0x1090	0x241C4000  	LCD_RAM_COM1+0
0x1094	0x24244000  	LCD_RAM_COM2+0
0x1098	0x242C4000  	LCD_RAM_COM3+0
0x109C	0x24344000  	LCD_RAM_COM4+0
0x10A0	0x243C4000  	LCD_RAM_COM5+0
0x10A4	0x24444000  	LCD_RAM_COM6+0
0x10A8	0x244C4000  	LCD_RAM_COM7+0
; end of _LCD_RAM_clear
_LCD_GLASS_Clear:
;glass_lcd.c, 317 :: 		void LCD_GLASS_Clear()
0x2424	0xB081    SUB	SP, SP, #4
0x2426	0xF8CDE000  STR	LR, [SP, #0]
;glass_lcd.c, 320 :: 		while(LCD_SRbits.UDR == true);
L_LCD_GLASS_Clear807:
0x242A	0x4806    LDR	R0, [PC, #24]
0x242C	0x6800    LDR	R0, [R0, #0]
0x242E	0xB100    CBZ	R0, L_LCD_GLASS_Clear808
0x2430	0xE7FB    B	L_LCD_GLASS_Clear807
L_LCD_GLASS_Clear808:
;glass_lcd.c, 321 :: 		LCD_RAM_Clear();
0x2432	0xF7FEFE11  BL	_LCD_RAM_clear+0
;glass_lcd.c, 323 :: 		update_display_request();
0x2436	0x2101    MOVS	R1, #1
0x2438	0x4802    LDR	R0, [PC, #8]
0x243A	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 324 :: 		}
L_end_LCD_GLASS_Clear:
0x243C	0xF8DDE000  LDR	LR, [SP, #0]
0x2440	0xB001    ADD	SP, SP, #4
0x2442	0x4770    BX	LR
0x2444	0x81084204  	LCD_SRbits+0
; end of _LCD_GLASS_Clear
_Init_pin:
;init_func.c, 15 :: 		void Init_pin()
0x329C	0xB081    SUB	SP, SP, #4
0x329E	0xF8CDE000  STR	LR, [SP, #0]
;init_func.c, 20 :: 		GPIO_Config(&GPIOA_BASE, _GPIO_PINMASK_11 | _GPIO_PINMASK_12,_GPIO_CFG_DIGITAL_OUTPUT);
0x32A2	0x4A18    LDR	R2, [PC, #96]
0x32A4	0xF6410100  MOVW	R1, #6144
0x32A8	0x4817    LDR	R0, [PC, #92]
0x32AA	0xF7FDFDBD  BL	_GPIO_Config+0
;init_func.c, 21 :: 		GPIO_Config(&GPIOB_BASE, _GPIO_PINMASK_6,_GPIO_CFG_DIGITAL_OUTPUT);
0x32AE	0x4A15    LDR	R2, [PC, #84]
0x32B0	0xF2400140  MOVW	R1, #64
0x32B4	0x4815    LDR	R0, [PC, #84]
0x32B6	0xF7FDFDB7  BL	_GPIO_Config+0
;init_func.c, 22 :: 		GPIO_Config(&GPIOC_BASE, _GPIO_PINMASK_12,_GPIO_CFG_DIGITAL_OUTPUT);
0x32BA	0x4A12    LDR	R2, [PC, #72]
0x32BC	0xF2410100  MOVW	R1, #4096
0x32C0	0x4813    LDR	R0, [PC, #76]
0x32C2	0xF7FDFDB1  BL	_GPIO_Config+0
;init_func.c, 23 :: 		GPIO_Config(&GPIOB_BASE, _GPIO_PINMASK_6,_GPIO_CFG_DIGITAL_OUTPUT);
0x32C6	0x4A0F    LDR	R2, [PC, #60]
0x32C8	0xF2400140  MOVW	R1, #64
0x32CC	0x480F    LDR	R0, [PC, #60]
0x32CE	0xF7FDFDAB  BL	_GPIO_Config+0
;init_func.c, 25 :: 		GPIO_Config(&GPIOB_BASE, _GPIO_PINMASK_7,_GPIO_CFG_DIGITAL_OUTPUT);
0x32D2	0x4A0C    LDR	R2, [PC, #48]
0x32D4	0xF2400180  MOVW	R1, #128
0x32D8	0x480C    LDR	R0, [PC, #48]
0x32DA	0xF7FDFDA5  BL	_GPIO_Config+0
;init_func.c, 27 :: 		GPIO_Config(&GPIOD_BASE, _GPIO_PINMASK_2,_GPIO_CFG_DIGITAL_INPUT);
0x32DE	0xF04F0242  MOV	R2, #66
0x32E2	0xF2400104  MOVW	R1, #4
0x32E6	0x480B    LDR	R0, [PC, #44]
0x32E8	0xF7FDFD9E  BL	_GPIO_Config+0
;init_func.c, 28 :: 		GPIO_Config(&GPIOA_BASE, _GPIO_PINMASK_0,_GPIO_CFG_DIGITAL_INPUT);
0x32EC	0xF04F0242  MOV	R2, #66
0x32F0	0xF2400101  MOVW	R1, #1
0x32F4	0x4804    LDR	R0, [PC, #16]
0x32F6	0xF7FDFD97  BL	_GPIO_Config+0
;init_func.c, 29 :: 		}
L_end_Init_pin:
0x32FA	0xF8DDE000  LDR	LR, [SP, #0]
0x32FE	0xB001    ADD	SP, SP, #4
0x3300	0x4770    BX	LR
0x3302	0xBF00    NOP
0x3304	0x00140008  	#524308
0x3308	0x00004002  	GPIOA_BASE+0
0x330C	0x04004002  	GPIOB_BASE+0
0x3310	0x08004002  	GPIOC_BASE+0
0x3314	0x0C004002  	GPIOD_BASE+0
; end of _Init_pin
_StartMainTimer_10ms:
;timer_func.c, 42 :: 		void StartMainTimer_10ms()
0x3318	0xB081    SUB	SP, SP, #4
0x331A	0xF8CDE000  STR	LR, [SP, #0]
;timer_func.c, 44 :: 		RCC_APB1ENRbits.TIM2EN=1;
0x331E	0x2101    MOVS	R1, #1
0x3320	0xB249    SXTB	R1, R1
0x3322	0x480D    LDR	R0, [PC, #52]
0x3324	0x6001    STR	R1, [R0, #0]
;timer_func.c, 45 :: 		TIM2_CR1bits.CEN = 0;
0x3326	0x2100    MOVS	R1, #0
0x3328	0xB249    SXTB	R1, R1
0x332A	0x480C    LDR	R0, [PC, #48]
0x332C	0x6001    STR	R1, [R0, #0]
;timer_func.c, 46 :: 		TIM2_PSC = 4;
0x332E	0x2104    MOVS	R1, #4
0x3330	0x480B    LDR	R0, [PC, #44]
0x3332	0x6001    STR	R1, [R0, #0]
;timer_func.c, 47 :: 		TIM2_ARR = 63999;
0x3334	0xF64F11FF  MOVW	R1, #63999
0x3338	0x480A    LDR	R0, [PC, #40]
0x333A	0x6001    STR	R1, [R0, #0]
;timer_func.c, 48 :: 		NVIC_IntEnable(IVT_INT_TIM2);
0x333C	0xF240002C  MOVW	R0, #44
0x3340	0xF7FFF9BE  BL	_NVIC_IntEnable+0
;timer_func.c, 49 :: 		TIM2_DIERbits.UIE = 1;
0x3344	0x2101    MOVS	R1, #1
0x3346	0xB249    SXTB	R1, R1
0x3348	0x4807    LDR	R0, [PC, #28]
0x334A	0x6001    STR	R1, [R0, #0]
;timer_func.c, 50 :: 		TIM2_CR1bits.CEN = 1;
0x334C	0x4803    LDR	R0, [PC, #12]
0x334E	0x6001    STR	R1, [R0, #0]
;timer_func.c, 51 :: 		}
L_end_StartMainTimer_10ms:
0x3350	0xF8DDE000  LDR	LR, [SP, #0]
0x3354	0xB001    ADD	SP, SP, #4
0x3356	0x4770    BX	LR
0x3358	0x04804247  	RCC_APB1ENRbits+0
0x335C	0x00004200  	TIM2_CR1bits+0
0x3360	0x00284000  	TIM2_PSC+0
0x3364	0x002C4000  	TIM2_ARR+0
0x3368	0x01804200  	TIM2_DIERbits+0
; end of _StartMainTimer_10ms
_NVIC_IntEnable:
;__Lib_System_15X.c, 158 :: 		
; ivt start address is: 0 (R0)
0x26C0	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_15X.c, 170 :: 		
0x26C2	0x2804    CMP	R0, #4
0x26C4	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_15X.c, 175 :: 		
0x26C6	0x4919    LDR	R1, [PC, #100]
0x26C8	0x6809    LDR	R1, [R1, #0]
0x26CA	0xF4413280  ORR	R2, R1, #65536
0x26CE	0x4917    LDR	R1, [PC, #92]
0x26D0	0x600A    STR	R2, [R1, #0]
;__Lib_System_15X.c, 176 :: 		
0x26D2	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_15X.c, 177 :: 		
; ivt start address is: 0 (R0)
0x26D4	0x2805    CMP	R0, #5
0x26D6	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_15X.c, 182 :: 		
0x26D8	0x4914    LDR	R1, [PC, #80]
0x26DA	0x6809    LDR	R1, [R1, #0]
0x26DC	0xF4413200  ORR	R2, R1, #131072
0x26E0	0x4912    LDR	R1, [PC, #72]
0x26E2	0x600A    STR	R2, [R1, #0]
;__Lib_System_15X.c, 183 :: 		
0x26E4	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_15X.c, 184 :: 		
; ivt start address is: 0 (R0)
0x26E6	0x2806    CMP	R0, #6
0x26E8	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_15X.c, 189 :: 		
0x26EA	0x4910    LDR	R1, [PC, #64]
0x26EC	0x6809    LDR	R1, [R1, #0]
0x26EE	0xF4412280  ORR	R2, R1, #262144
0x26F2	0x490E    LDR	R1, [PC, #56]
0x26F4	0x600A    STR	R2, [R1, #0]
;__Lib_System_15X.c, 190 :: 		
0x26F6	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_15X.c, 191 :: 		
; ivt start address is: 0 (R0)
0x26F8	0x280F    CMP	R0, #15
0x26FA	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_15X.c, 196 :: 		
0x26FC	0x490C    LDR	R1, [PC, #48]
0x26FE	0x6809    LDR	R1, [R1, #0]
0x2700	0xF0410202  ORR	R2, R1, #2
0x2704	0x490A    LDR	R1, [PC, #40]
0x2706	0x600A    STR	R2, [R1, #0]
;__Lib_System_15X.c, 197 :: 		
0x2708	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_15X.c, 198 :: 		
; ivt start address is: 0 (R0)
0x270A	0x2810    CMP	R0, #16
0x270C	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_15X.c, 203 :: 		
0x270E	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x2712	0x0961    LSRS	R1, R4, #5
0x2714	0x008A    LSLS	R2, R1, #2
0x2716	0x4907    LDR	R1, [PC, #28]
0x2718	0x188B    ADDS	R3, R1, R2
;__Lib_System_15X.c, 204 :: 		
0x271A	0xF004021F  AND	R2, R4, #31
0x271E	0xF04F0101  MOV	R1, #1
0x2722	0x4091    LSLS	R1, R2
0x2724	0x6019    STR	R1, [R3, #0]
;__Lib_System_15X.c, 205 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_15X.c, 206 :: 		
L_end_NVIC_IntEnable:
0x2726	0xB001    ADD	SP, SP, #4
0x2728	0x4770    BX	LR
0x272A	0xBF00    NOP
0x272C	0xED24E000  	SCB_SHCRS+0
0x2730	0xE010E000  	STK_CTRL+0
0x2734	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_WDT_Init:
;timer_func.c, 97 :: 		void WDT_Init()
;timer_func.c, 99 :: 		RCC_CSRbits.LSION = 1;
0x3254	0x2101    MOVS	R1, #1
0x3256	0xB249    SXTB	R1, R1
0x3258	0x480C    LDR	R0, [PC, #48]
0x325A	0x6001    STR	R1, [R0, #0]
;timer_func.c, 100 :: 		while(!RCC_CSRbits.LSIRDY);
L_WDT_Init4:
0x325C	0x480C    LDR	R0, [PC, #48]
0x325E	0x6800    LDR	R0, [R0, #0]
0x3260	0xB900    CBNZ	R0, L_WDT_Init5
0x3262	0xE7FB    B	L_WDT_Init4
L_WDT_Init5:
;timer_func.c, 101 :: 		IWDG_KR = 0x5555;      //write with protect
0x3264	0xF2455155  MOVW	R1, #21845
0x3268	0x480A    LDR	R0, [PC, #40]
0x326A	0x6001    STR	R1, [R0, #0]
;timer_func.c, 102 :: 		IWDG_PRbits.PR = 0x00;  //prescaler
0x326C	0x2200    MOVS	R2, #0
0x326E	0x490A    LDR	R1, [PC, #40]
0x3270	0x7808    LDRB	R0, [R1, #0]
0x3272	0xF3620002  BFI	R0, R2, #0, #3
0x3276	0x7008    STRB	R0, [R1, #0]
;timer_func.c, 103 :: 		IWDG_KR = 0xCCCC;      //start watchdog
0x3278	0xF64C41CC  MOVW	R1, #52428
0x327C	0x4805    LDR	R0, [PC, #20]
0x327E	0x6001    STR	R1, [R0, #0]
;timer_func.c, 104 :: 		IWDG_KR = 0xAAAA;      //reset watchdog
0x3280	0xF64A21AA  MOVW	R1, #43690
0x3284	0x4803    LDR	R0, [PC, #12]
0x3286	0x6001    STR	R1, [R0, #0]
;timer_func.c, 115 :: 		}
L_end_WDT_Init:
0x3288	0x4770    BX	LR
0x328A	0xBF00    NOP
0x328C	0x06804247  	RCC_CSRbits+0
0x3290	0x06844247  	RCC_CSRbits+0
0x3294	0x30004000  	IWDG_KR+0
0x3298	0x30044000  	IWDG_PRbits+0
; end of _WDT_Init
_globalProcess:
;func.c, 53 :: 		void globalProcess()
0x3204	0xB081    SUB	SP, SP, #4
0x3206	0xF8CDE000  STR	LR, [SP, #0]
;func.c, 55 :: 		if (flag_t.ovf_flag == SET)
0x320A	0x480C    LDR	R0, [PC, #48]
0x320C	0x7800    LDRB	R0, [R0, #0]
0x320E	0x2801    CMP	R0, #1
0x3210	0xD110    BNE	L_globalProcess8
;func.c, 57 :: 		flag_t.ovf_flag = RESET;
0x3212	0x2100    MOVS	R1, #0
0x3214	0x4809    LDR	R0, [PC, #36]
0x3216	0x7001    STRB	R1, [R0, #0]
;func.c, 58 :: 		clear_WDT();
0x3218	0xF7FFFF14  BL	_clear_WDT+0
;func.c, 60 :: 		StatusLed();
0x321C	0xF7FFFCCA  BL	_StatusLed+0
;func.c, 61 :: 		ControlDigitalFlags();
0x3220	0xF7FFFD1E  BL	_ControlDigitalFlags+0
;func.c, 62 :: 		ControlAnalogFlags();
0x3224	0xF7FFFD50  BL	_ControlAnalogFlags+0
;func.c, 63 :: 		ReadAnalogInput();
0x3228	0xF7FFFE16  BL	_ReadAnalogInput+0
;func.c, 64 :: 		ControlOut();
0x322C	0xF7FFFA84  BL	_ControlOut+0
;func.c, 65 :: 		displayData();
0x3230	0xF7FFF9F8  BL	_displayData+0
;func.c, 66 :: 		}
L_globalProcess8:
;func.c, 67 :: 		}
L_end_globalProcess:
0x3234	0xF8DDE000  LDR	LR, [SP, #0]
0x3238	0xB001    ADD	SP, SP, #4
0x323A	0x4770    BX	LR
0x323C	0x005A2000  	_flag_t+0
; end of _globalProcess
_clear_WDT:
;timer_func.c, 117 :: 		void clear_WDT()
;timer_func.c, 119 :: 		IWDG_KR = 0xAAAA;      //reset watchdog
0x3044	0xF64A21AA  MOVW	R1, #43690
0x3048	0x4801    LDR	R0, [PC, #4]
0x304A	0x6001    STR	R1, [R0, #0]
;timer_func.c, 120 :: 		}
L_end_clear_WDT:
0x304C	0x4770    BX	LR
0x304E	0xBF00    NOP
0x3050	0x30004000  	IWDG_KR+0
; end of _clear_WDT
_StatusLed:
;func.c, 237 :: 		void StatusLed()
;func.c, 240 :: 		if(flag_t.first_start==SET)
0x2BB4	0x4821    LDR	R0, [PC, #132]
0x2BB6	0x7800    LDRB	R0, [R0, #0]
0x2BB8	0x2801    CMP	R0, #1
0x2BBA	0xD12F    BNE	L_StatusLed39
;func.c, 242 :: 		if(flag_t.start_button_status==SET&&flag_t.current_status==SET&&flag_t.short_current_status==SET&&flag_t.current_global_status==SET)
0x2BBC	0x4820    LDR	R0, [PC, #128]
0x2BBE	0x7800    LDRB	R0, [R0, #0]
0x2BC0	0x2801    CMP	R0, #1
0x2BC2	0xD11B    BNE	L__StatusLed58
0x2BC4	0x481F    LDR	R0, [PC, #124]
0x2BC6	0x7800    LDRB	R0, [R0, #0]
0x2BC8	0x2801    CMP	R0, #1
0x2BCA	0xD117    BNE	L__StatusLed57
0x2BCC	0x481E    LDR	R0, [PC, #120]
0x2BCE	0x7800    LDRB	R0, [R0, #0]
0x2BD0	0x2801    CMP	R0, #1
0x2BD2	0xD113    BNE	L__StatusLed56
0x2BD4	0x481D    LDR	R0, [PC, #116]
0x2BD6	0x7800    LDRB	R0, [R0, #0]
0x2BD8	0x2801    CMP	R0, #1
0x2BDA	0xD10F    BNE	L__StatusLed55
L__StatusLed54:
;func.c, 244 :: 		if ((++count_st_led1) >= 100)
0x2BDC	0x491C    LDR	R1, [PC, #112]
0x2BDE	0x7808    LDRB	R0, [R1, #0]
0x2BE0	0x1C40    ADDS	R0, R0, #1
0x2BE2	0xB2C0    UXTB	R0, R0
0x2BE4	0x7008    STRB	R0, [R1, #0]
0x2BE6	0x2864    CMP	R0, #100
0x2BE8	0xD307    BCC	L_StatusLed43
;func.c, 246 :: 		count_st_led1 = 0;
0x2BEA	0x2100    MOVS	R1, #0
0x2BEC	0x4818    LDR	R0, [PC, #96]
0x2BEE	0x7001    STRB	R1, [R0, #0]
;func.c, 247 :: 		LED_GREEN^= 1;
0x2BF0	0x4918    LDR	R1, [PC, #96]
0x2BF2	0x6808    LDR	R0, [R1, #0]
0x2BF4	0xF0800001  EOR	R0, R0, #1
0x2BF8	0x6008    STR	R0, [R1, #0]
;func.c, 248 :: 		}
L_StatusLed43:
;func.c, 250 :: 		}
0x2BFA	0xE00E    B	L_StatusLed44
;func.c, 242 :: 		if(flag_t.start_button_status==SET&&flag_t.current_status==SET&&flag_t.short_current_status==SET&&flag_t.current_global_status==SET)
L__StatusLed58:
L__StatusLed57:
L__StatusLed56:
L__StatusLed55:
;func.c, 253 :: 		if ((++count_st_led2) >= 50)
0x2BFC	0x4916    LDR	R1, [PC, #88]
0x2BFE	0x7808    LDRB	R0, [R1, #0]
0x2C00	0x1C40    ADDS	R0, R0, #1
0x2C02	0xB2C0    UXTB	R0, R0
0x2C04	0x7008    STRB	R0, [R1, #0]
0x2C06	0x2832    CMP	R0, #50
0x2C08	0xD307    BCC	L_StatusLed45
;func.c, 255 :: 		count_st_led2 = 0;
0x2C0A	0x2100    MOVS	R1, #0
0x2C0C	0x4812    LDR	R0, [PC, #72]
0x2C0E	0x7001    STRB	R1, [R0, #0]
;func.c, 256 :: 		LED_GREEN^= 1;
0x2C10	0x4910    LDR	R1, [PC, #64]
0x2C12	0x6808    LDR	R0, [R1, #0]
0x2C14	0xF0800001  EOR	R0, R0, #1
0x2C18	0x6008    STR	R0, [R1, #0]
;func.c, 257 :: 		}
L_StatusLed45:
;func.c, 259 :: 		}
L_StatusLed44:
;func.c, 262 :: 		}
0x2C1A	0xE00E    B	L_StatusLed46
L_StatusLed39:
;func.c, 265 :: 		if ((++count_st_led) >= 10)
0x2C1C	0x490F    LDR	R1, [PC, #60]
0x2C1E	0x7808    LDRB	R0, [R1, #0]
0x2C20	0x1C40    ADDS	R0, R0, #1
0x2C22	0xB2C0    UXTB	R0, R0
0x2C24	0x7008    STRB	R0, [R1, #0]
0x2C26	0x280A    CMP	R0, #10
0x2C28	0xD307    BCC	L_StatusLed47
;func.c, 267 :: 		count_st_led = 0;
0x2C2A	0x2100    MOVS	R1, #0
0x2C2C	0x480B    LDR	R0, [PC, #44]
0x2C2E	0x7001    STRB	R1, [R0, #0]
;func.c, 268 :: 		LED_GREEN^= 1;
0x2C30	0x4908    LDR	R1, [PC, #32]
0x2C32	0x6808    LDR	R0, [R1, #0]
0x2C34	0xF0800001  EOR	R0, R0, #1
0x2C38	0x6008    STR	R0, [R1, #0]
;func.c, 269 :: 		}
L_StatusLed47:
;func.c, 271 :: 		}
L_StatusLed46:
;func.c, 273 :: 		}
L_end_StatusLed:
0x2C3A	0x4770    BX	LR
0x2C3C	0x00652000  	_flag_t+11
0x2C40	0x005B2000  	_flag_t+1
0x2C44	0x00632000  	_flag_t+9
0x2C48	0x00642000  	_flag_t+10
0x2C4C	0x00662000  	_flag_t+12
0x2C50	0x00102000  	StatusLed_count_st_led1_L0+0
0x2C54	0x829C4240  	LED_GREEN+0
0x2C58	0x00112000  	StatusLed_count_st_led2_L0+0
0x2C5C	0x000F2000  	StatusLed_count_st_led_L0+0
; end of _StatusLed
_ControlDigitalFlags:
;func.c, 39 :: 		void ControlDigitalFlags()
0x2C60	0xB081    SUB	SP, SP, #4
0x2C62	0xF8CDE000  STR	LR, [SP, #0]
;func.c, 46 :: 		&start_button_status_count1, &start_button_status_count2);
0x2C66	0x4C10    LDR	R4, [PC, #64]
0x2C68	0x4B10    LDR	R3, [PC, #64]
;func.c, 45 :: 		MS_IN_CYCLE, &flag_t.start_button_status,
0x2C6A	0x4A11    LDR	R2, [PC, #68]
;func.c, 44 :: 		ControlDigit(START_BUTTON, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,
0x2C6C	0x4911    LDR	R1, [PC, #68]
0x2C6E	0x6808    LDR	R0, [R1, #0]
;func.c, 46 :: 		&start_button_status_count1, &start_button_status_count2);
0x2C70	0xB410    PUSH	(R4)
0x2C72	0xB408    PUSH	(R3)
;func.c, 45 :: 		MS_IN_CYCLE, &flag_t.start_button_status,
0x2C74	0xB404    PUSH	(R2)
0x2C76	0x230A    MOVS	R3, #10
;func.c, 44 :: 		ControlDigit(START_BUTTON, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,
0x2C78	0x2202    MOVS	R2, #2
0x2C7A	0x2102    MOVS	R1, #2
;func.c, 46 :: 		&start_button_status_count1, &start_button_status_count2);
;func.c, 45 :: 		MS_IN_CYCLE, &flag_t.start_button_status,
;func.c, 46 :: 		&start_button_status_count1, &start_button_status_count2);
0x2C7C	0xF7FFFBE4  BL	_ControlDigit+0
0x2C80	0xB003    ADD	SP, SP, #12
;func.c, 49 :: 		&change_button_status_count, &change_button_status_count1);
0x2C82	0x4C0D    LDR	R4, [PC, #52]
0x2C84	0x4B0D    LDR	R3, [PC, #52]
;func.c, 48 :: 		MS_IN_CYCLE, &flag_t.change_button_status,
0x2C86	0x4A0E    LDR	R2, [PC, #56]
;func.c, 47 :: 		ControlDigit(CHANGE_BUTTON, 1,1,
0x2C88	0x490E    LDR	R1, [PC, #56]
0x2C8A	0x6808    LDR	R0, [R1, #0]
;func.c, 49 :: 		&change_button_status_count, &change_button_status_count1);
0x2C8C	0xB410    PUSH	(R4)
0x2C8E	0xB408    PUSH	(R3)
;func.c, 48 :: 		MS_IN_CYCLE, &flag_t.change_button_status,
0x2C90	0xB404    PUSH	(R2)
0x2C92	0x230A    MOVS	R3, #10
;func.c, 47 :: 		ControlDigit(CHANGE_BUTTON, 1,1,
0x2C94	0x2201    MOVS	R2, #1
0x2C96	0x2101    MOVS	R1, #1
;func.c, 49 :: 		&change_button_status_count, &change_button_status_count1);
;func.c, 48 :: 		MS_IN_CYCLE, &flag_t.change_button_status,
;func.c, 49 :: 		&change_button_status_count, &change_button_status_count1);
0x2C98	0xF7FFFBD6  BL	_ControlDigit+0
0x2C9C	0xB003    ADD	SP, SP, #12
;func.c, 51 :: 		}
L_end_ControlDigitalFlags:
0x2C9E	0xF8DDE000  LDR	LR, [SP, #0]
0x2CA2	0xB001    ADD	SP, SP, #4
0x2CA4	0x4770    BX	LR
0x2CA6	0xBF00    NOP
0x2CA8	0x00142000  	ControlDigitalFlags_start_button_status_count2_L0+0
0x2CAC	0x00122000  	ControlDigitalFlags_start_button_status_count1_L0+0
0x2CB0	0x005B2000  	_flag_t+1
0x2CB4	0x82084241  	START_BUTTON+0
0x2CB8	0x00182000  	ControlDigitalFlags_change_button_status_count1_L0+0
0x2CBC	0x00162000  	ControlDigitalFlags_change_button_status_count_L0+0
0x2CC0	0x006D2000  	_flag_t+19
0x2CC4	0x02004240  	CHANGE_BUTTON+0
; end of _ControlDigitalFlags
_ControlDigit:
;func.c, 277 :: 		unsigned int *count_ci, unsigned int* count_ci1)
; ms_in_one_cycle start address is: 12 (R3)
; delay_reset start address is: 8 (R2)
; delay_set start address is: 4 (R1)
; in_value start address is: 0 (R0)
; ms_in_one_cycle end address is: 12 (R3)
; delay_reset end address is: 8 (R2)
; delay_set end address is: 4 (R1)
; in_value end address is: 0 (R0)
; in_value start address is: 0 (R0)
; delay_set start address is: 4 (R1)
; delay_reset start address is: 8 (R2)
; ms_in_one_cycle start address is: 12 (R3)
; status start address is: 24 (R6)
0x2448	0x9E00    LDR	R6, [SP, #0]
; count_ci start address is: 28 (R7)
0x244A	0x9F01    LDR	R7, [SP, #4]
; count_ci1 start address is: 32 (R8)
0x244C	0xF8DD8008  LDR	R8, [SP, #8]
;func.c, 279 :: 		if (in_value == SET)
0x2450	0x2801    CMP	R0, #1
0x2452	0xD115    BNE	L_ControlDigit48
;func.c, 282 :: 		if ((++*count_ci) == ((unsigned int)delay_set*(1000 / ms_in_one_cycle)))
0x2454	0x883C    LDRH	R4, [R7, #0]
0x2456	0x1C64    ADDS	R4, R4, #1
0x2458	0x803C    STRH	R4, [R7, #0]
0x245A	0x883D    LDRH	R5, [R7, #0]
0x245C	0xF24034E8  MOVW	R4, #1000
0x2460	0xFBB4F4F3  UDIV	R4, R4, R3
0x2464	0xB2A4    UXTH	R4, R4
0x2466	0x434C    MULS	R4, R1, R4
0x2468	0xB2A4    UXTH	R4, R4
; delay_set end address is: 4 (R1)
0x246A	0x42A5    CMP	R5, R4
0x246C	0xD108    BNE	L_ControlDigit49
;func.c, 284 :: 		*count_ci = 0;
0x246E	0x2400    MOVS	R4, #0
0x2470	0x803C    STRH	R4, [R7, #0]
;func.c, 285 :: 		*count_ci1 = 0;
0x2472	0x2400    MOVS	R4, #0
0x2474	0xF8A84000  STRH	R4, [R8, #0]
;func.c, 286 :: 		if (in_value == SET)
0x2478	0x2801    CMP	R0, #1
0x247A	0xD101    BNE	L_ControlDigit50
;func.c, 288 :: 		*status = 1;
0x247C	0x2401    MOVS	R4, #1
0x247E	0x7034    STRB	R4, [R6, #0]
;func.c, 289 :: 		}
L_ControlDigit50:
;func.c, 290 :: 		}
L_ControlDigit49:
;func.c, 292 :: 		}
L_ControlDigit48:
;func.c, 294 :: 		if (in_value == RESET)
0x2480	0xB9B8    CBNZ	R0, L_ControlDigit51
;func.c, 297 :: 		if ((++*count_ci1) == ((unsigned int)delay_reset*(1000 / ms_in_one_cycle)))
0x2482	0xF8B84000  LDRH	R4, [R8, #0]
0x2486	0x1C64    ADDS	R4, R4, #1
0x2488	0xF8A84000  STRH	R4, [R8, #0]
0x248C	0xF8B85000  LDRH	R5, [R8, #0]
0x2490	0xF24034E8  MOVW	R4, #1000
0x2494	0xFBB4F4F3  UDIV	R4, R4, R3
0x2498	0xB2A4    UXTH	R4, R4
; ms_in_one_cycle end address is: 12 (R3)
0x249A	0x4354    MULS	R4, R2, R4
0x249C	0xB2A4    UXTH	R4, R4
; delay_reset end address is: 8 (R2)
0x249E	0x42A5    CMP	R5, R4
0x24A0	0xD107    BNE	L_ControlDigit52
;func.c, 299 :: 		*count_ci = 0;
0x24A2	0x2400    MOVS	R4, #0
0x24A4	0x803C    STRH	R4, [R7, #0]
; count_ci end address is: 28 (R7)
;func.c, 300 :: 		*count_ci1 = 0;
0x24A6	0x2400    MOVS	R4, #0
0x24A8	0xF8A84000  STRH	R4, [R8, #0]
; count_ci1 end address is: 32 (R8)
;func.c, 301 :: 		if (in_value == RESET)
0x24AC	0xB908    CBNZ	R0, L_ControlDigit53
; in_value end address is: 0 (R0)
;func.c, 303 :: 		*status = 0;
0x24AE	0x2400    MOVS	R4, #0
0x24B0	0x7034    STRB	R4, [R6, #0]
; status end address is: 24 (R6)
;func.c, 304 :: 		}
L_ControlDigit53:
;func.c, 305 :: 		}
L_ControlDigit52:
;func.c, 307 :: 		}
L_ControlDigit51:
;func.c, 308 :: 		}
L_end_ControlDigit:
0x24B2	0x4770    BX	LR
; end of _ControlDigit
_ControlAnalogFlags:
;adc_func.c, 50 :: 		void ControlAnalogFlags()
0x2CC8	0xB081    SUB	SP, SP, #4
0x2CCA	0xF8CDE000  STR	LR, [SP, #0]
;adc_func.c, 59 :: 		if((flag_t.short_current_status==RESET||flag_t.current_status==RESET)&&flag_t.first_start==SET)
0x2CCE	0x4842    LDR	R0, [PC, #264]
0x2CD0	0x7800    LDRB	R0, [R0, #0]
0x2CD2	0xB118    CBZ	R0, L__ControlAnalogFlags34
0x2CD4	0x4841    LDR	R0, [PC, #260]
0x2CD6	0x7800    LDRB	R0, [R0, #0]
0x2CD8	0xB100    CBZ	R0, L__ControlAnalogFlags33
0x2CDA	0xE006    B	L_ControlAnalogFlags10
L__ControlAnalogFlags34:
L__ControlAnalogFlags33:
0x2CDC	0x4840    LDR	R0, [PC, #256]
0x2CDE	0x7800    LDRB	R0, [R0, #0]
0x2CE0	0x2801    CMP	R0, #1
0x2CE2	0xD102    BNE	L__ControlAnalogFlags35
L__ControlAnalogFlags31:
;adc_func.c, 61 :: 		flag_t.current_global_status = RESET;
0x2CE4	0x2100    MOVS	R1, #0
0x2CE6	0x483F    LDR	R0, [PC, #252]
0x2CE8	0x7001    STRB	R1, [R0, #0]
;adc_func.c, 62 :: 		}
L_ControlAnalogFlags10:
;adc_func.c, 59 :: 		if((flag_t.short_current_status==RESET||flag_t.current_status==RESET)&&flag_t.first_start==SET)
L__ControlAnalogFlags35:
;adc_func.c, 67 :: 		&input_voltage_status_first_step_count1);
0x2CEA	0x4D3F    LDR	R5, [PC, #252]
;adc_func.c, 66 :: 		&flag_t.input_voltage_status_first_step,&input_voltage_status_first_step_count,
0x2CEC	0x4C3F    LDR	R4, [PC, #252]
0x2CEE	0x4B40    LDR	R3, [PC, #256]
;adc_func.c, 65 :: 		one_level_comparator(VALUE_FIRST_STEP,InVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
0x2CF0	0x220A    MOVS	R2, #10
0x2CF2	0x2102    MOVS	R1, #2
0x2CF4	0x483F    LDR	R0, [PC, #252]
0x2CF6	0x6800    LDR	R0, [R0, #0]
;adc_func.c, 67 :: 		&input_voltage_status_first_step_count1);
0x2CF8	0xB420    PUSH	(R5)
;adc_func.c, 66 :: 		&flag_t.input_voltage_status_first_step,&input_voltage_status_first_step_count,
0x2CFA	0xB410    PUSH	(R4)
0x2CFC	0xB408    PUSH	(R3)
;adc_func.c, 65 :: 		one_level_comparator(VALUE_FIRST_STEP,InVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
0x2CFE	0xB404    PUSH	(R2)
0x2D00	0xB402    PUSH	(R1)
0x2D02	0x2302    MOVS	R3, #2
0x2D04	0x4A3C    LDR	R2, [PC, #240]
0x2D06	0x4601    MOV	R1, R0
0x2D08	0x483C    LDR	R0, [PC, #240]
;adc_func.c, 67 :: 		&input_voltage_status_first_step_count1);
;adc_func.c, 66 :: 		&flag_t.input_voltage_status_first_step,&input_voltage_status_first_step_count,
;adc_func.c, 65 :: 		one_level_comparator(VALUE_FIRST_STEP,InVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
;adc_func.c, 67 :: 		&input_voltage_status_first_step_count1);
0x2D0A	0xF7FFF939  BL	_one_level_comparator+0
0x2D0E	0xB005    ADD	SP, SP, #20
;adc_func.c, 71 :: 		&input_voltage_status_second_step_count1);
0x2D10	0x4D3B    LDR	R5, [PC, #236]
;adc_func.c, 70 :: 		&flag_t.input_voltage_status_second_step,&input_voltage_status_second_step_count,
0x2D12	0x4C3C    LDR	R4, [PC, #240]
0x2D14	0x4B3C    LDR	R3, [PC, #240]
;adc_func.c, 69 :: 		one_level_comparator(VALUE_SECOND_STEP,InVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
0x2D16	0x220A    MOVS	R2, #10
0x2D18	0x2102    MOVS	R1, #2
0x2D1A	0x4836    LDR	R0, [PC, #216]
0x2D1C	0x6800    LDR	R0, [R0, #0]
;adc_func.c, 71 :: 		&input_voltage_status_second_step_count1);
0x2D1E	0xB420    PUSH	(R5)
;adc_func.c, 70 :: 		&flag_t.input_voltage_status_second_step,&input_voltage_status_second_step_count,
0x2D20	0xB410    PUSH	(R4)
0x2D22	0xB408    PUSH	(R3)
;adc_func.c, 69 :: 		one_level_comparator(VALUE_SECOND_STEP,InVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
0x2D24	0xB404    PUSH	(R2)
0x2D26	0xB402    PUSH	(R1)
0x2D28	0x2302    MOVS	R3, #2
0x2D2A	0x4A33    LDR	R2, [PC, #204]
0x2D2C	0x4601    MOV	R1, R0
0x2D2E	0x4837    LDR	R0, [PC, #220]
;adc_func.c, 71 :: 		&input_voltage_status_second_step_count1);
;adc_func.c, 70 :: 		&flag_t.input_voltage_status_second_step,&input_voltage_status_second_step_count,
;adc_func.c, 69 :: 		one_level_comparator(VALUE_SECOND_STEP,InVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
;adc_func.c, 71 :: 		&input_voltage_status_second_step_count1);
0x2D30	0xF7FFF926  BL	_one_level_comparator+0
0x2D34	0xB005    ADD	SP, SP, #20
;adc_func.c, 75 :: 		&current_status_count1);
0x2D36	0x4D36    LDR	R5, [PC, #216]
;adc_func.c, 74 :: 		ANALOG_DELAY_OFF,MS_IN_CYCLE,&flag_t.current_status_temp,&current_status_count,
0x2D38	0x4C36    LDR	R4, [PC, #216]
0x2D3A	0x4B37    LDR	R3, [PC, #220]
0x2D3C	0x220A    MOVS	R2, #10
0x2D3E	0x2102    MOVS	R1, #2
;adc_func.c, 73 :: 		one_level_comparator(VALUE_CURRENT,CurrentValue,CURRENT_GISTERESIS,ANALOG_DELAY_ON,
0x2D40	0x4836    LDR	R0, [PC, #216]
0x2D42	0x6800    LDR	R0, [R0, #0]
;adc_func.c, 75 :: 		&current_status_count1);
0x2D44	0xB420    PUSH	(R5)
;adc_func.c, 74 :: 		ANALOG_DELAY_OFF,MS_IN_CYCLE,&flag_t.current_status_temp,&current_status_count,
0x2D46	0xB410    PUSH	(R4)
0x2D48	0xB408    PUSH	(R3)
0x2D4A	0xB404    PUSH	(R2)
0x2D4C	0xB402    PUSH	(R1)
;adc_func.c, 73 :: 		one_level_comparator(VALUE_CURRENT,CurrentValue,CURRENT_GISTERESIS,ANALOG_DELAY_ON,
0x2D4E	0x2302    MOVS	R3, #2
0x2D50	0x4A29    LDR	R2, [PC, #164]
0x2D52	0x4601    MOV	R1, R0
0x2D54	0x4832    LDR	R0, [PC, #200]
;adc_func.c, 75 :: 		&current_status_count1);
;adc_func.c, 74 :: 		ANALOG_DELAY_OFF,MS_IN_CYCLE,&flag_t.current_status_temp,&current_status_count,
;adc_func.c, 75 :: 		&current_status_count1);
0x2D56	0xF7FFF913  BL	_one_level_comparator+0
0x2D5A	0xB005    ADD	SP, SP, #20
;adc_func.c, 79 :: 		&short_current_status_count1);
0x2D5C	0x4D31    LDR	R5, [PC, #196]
;adc_func.c, 78 :: 		&flag_t.short_current_status_temp,&short_current_status_count,
0x2D5E	0x4C32    LDR	R4, [PC, #200]
0x2D60	0x4B32    LDR	R3, [PC, #200]
;adc_func.c, 77 :: 		one_level_comparator(VALUE_CURRENT_SHORT,CurrentValue,CURRENT_GISTERESIS,CURRENT_SHORT_DELAY_ON,CURRENT_SHORT_DELAY_OFF,MS_IN_CYCLE,
0x2D62	0x220A    MOVS	R2, #10
0x2D64	0x2103    MOVS	R1, #3
0x2D66	0x482D    LDR	R0, [PC, #180]
0x2D68	0x6800    LDR	R0, [R0, #0]
;adc_func.c, 79 :: 		&short_current_status_count1);
0x2D6A	0xB420    PUSH	(R5)
;adc_func.c, 78 :: 		&flag_t.short_current_status_temp,&short_current_status_count,
0x2D6C	0xB410    PUSH	(R4)
0x2D6E	0xB408    PUSH	(R3)
;adc_func.c, 77 :: 		one_level_comparator(VALUE_CURRENT_SHORT,CurrentValue,CURRENT_GISTERESIS,CURRENT_SHORT_DELAY_ON,CURRENT_SHORT_DELAY_OFF,MS_IN_CYCLE,
0x2D70	0xB404    PUSH	(R2)
0x2D72	0xB402    PUSH	(R1)
0x2D74	0x2303    MOVS	R3, #3
0x2D76	0x4A20    LDR	R2, [PC, #128]
0x2D78	0x4601    MOV	R1, R0
0x2D7A	0x482D    LDR	R0, [PC, #180]
;adc_func.c, 79 :: 		&short_current_status_count1);
;adc_func.c, 78 :: 		&flag_t.short_current_status_temp,&short_current_status_count,
;adc_func.c, 77 :: 		one_level_comparator(VALUE_CURRENT_SHORT,CurrentValue,CURRENT_GISTERESIS,CURRENT_SHORT_DELAY_ON,CURRENT_SHORT_DELAY_OFF,MS_IN_CYCLE,
;adc_func.c, 79 :: 		&short_current_status_count1);
0x2D7C	0xF7FFF900  BL	_one_level_comparator+0
0x2D80	0xB005    ADD	SP, SP, #20
;adc_func.c, 83 :: 		&input_voltage_status_bypass_count1);
0x2D82	0x4D2C    LDR	R5, [PC, #176]
;adc_func.c, 82 :: 		&flag_t.input_voltage_status_bypass,&input_voltage_status_bypass_count,
0x2D84	0x4C2C    LDR	R4, [PC, #176]
0x2D86	0x4B2D    LDR	R3, [PC, #180]
;adc_func.c, 81 :: 		one_level_comparator(VALUE_BYPASS,InVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
0x2D88	0x220A    MOVS	R2, #10
0x2D8A	0x2102    MOVS	R1, #2
0x2D8C	0x4819    LDR	R0, [PC, #100]
0x2D8E	0x6800    LDR	R0, [R0, #0]
;adc_func.c, 83 :: 		&input_voltage_status_bypass_count1);
0x2D90	0xB420    PUSH	(R5)
;adc_func.c, 82 :: 		&flag_t.input_voltage_status_bypass,&input_voltage_status_bypass_count,
0x2D92	0xB410    PUSH	(R4)
0x2D94	0xB408    PUSH	(R3)
;adc_func.c, 81 :: 		one_level_comparator(VALUE_BYPASS,InVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
0x2D96	0xB404    PUSH	(R2)
0x2D98	0xB402    PUSH	(R1)
0x2D9A	0x2302    MOVS	R3, #2
0x2D9C	0x4A16    LDR	R2, [PC, #88]
0x2D9E	0x4601    MOV	R1, R0
0x2DA0	0x4827    LDR	R0, [PC, #156]
;adc_func.c, 83 :: 		&input_voltage_status_bypass_count1);
;adc_func.c, 82 :: 		&flag_t.input_voltage_status_bypass,&input_voltage_status_bypass_count,
;adc_func.c, 81 :: 		one_level_comparator(VALUE_BYPASS,InVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
;adc_func.c, 83 :: 		&input_voltage_status_bypass_count1);
0x2DA2	0xF7FFF8ED  BL	_one_level_comparator+0
0x2DA6	0xB005    ADD	SP, SP, #20
;adc_func.c, 91 :: 		&output_voltage_status_count1);
0x2DA8	0x4D26    LDR	R5, [PC, #152]
;adc_func.c, 90 :: 		&flag_t.output_voltage_status_temp,&output_voltage_status_count,
0x2DAA	0x4C27    LDR	R4, [PC, #156]
0x2DAC	0x4B27    LDR	R3, [PC, #156]
;adc_func.c, 89 :: 		one_level_comparator(VALUE_VOLT_HI,OutVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
0x2DAE	0x220A    MOVS	R2, #10
0x2DB0	0x2102    MOVS	R1, #2
0x2DB2	0x4827    LDR	R0, [PC, #156]
0x2DB4	0x6800    LDR	R0, [R0, #0]
;adc_func.c, 91 :: 		&output_voltage_status_count1);
0x2DB6	0xB420    PUSH	(R5)
;adc_func.c, 90 :: 		&flag_t.output_voltage_status_temp,&output_voltage_status_count,
0x2DB8	0xB410    PUSH	(R4)
0x2DBA	0xB408    PUSH	(R3)
;adc_func.c, 89 :: 		one_level_comparator(VALUE_VOLT_HI,OutVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
0x2DBC	0xB404    PUSH	(R2)
0x2DBE	0xB402    PUSH	(R1)
0x2DC0	0x2302    MOVS	R3, #2
0x2DC2	0x4A0D    LDR	R2, [PC, #52]
0x2DC4	0x4601    MOV	R1, R0
0x2DC6	0x4823    LDR	R0, [PC, #140]
;adc_func.c, 91 :: 		&output_voltage_status_count1);
;adc_func.c, 90 :: 		&flag_t.output_voltage_status_temp,&output_voltage_status_count,
;adc_func.c, 89 :: 		one_level_comparator(VALUE_VOLT_HI,OutVoltageValue,VOLTAGE_GISTERESIS,ANALOG_DELAY_ON,ANALOG_DELAY_OFF,MS_IN_CYCLE,
;adc_func.c, 91 :: 		&output_voltage_status_count1);
0x2DC8	0xF7FFF8DA  BL	_one_level_comparator+0
0x2DCC	0xB005    ADD	SP, SP, #20
;adc_func.c, 92 :: 		}
L_end_ControlAnalogFlags:
0x2DCE	0xF8DDE000  LDR	LR, [SP, #0]
0x2DD2	0xB001    ADD	SP, SP, #4
0x2DD4	0x4770    BX	LR
0x2DD6	0xBF00    NOP
0x2DD8	0x00642000  	_flag_t+10
0x2DDC	0x00632000  	_flag_t+9
0x2DE0	0x00652000  	_flag_t+11
0x2DE4	0x00662000  	_flag_t+12
0x2DE8	0x001C2000  	ControlAnalogFlags_input_voltage_status_first_step_count1_L0+0
0x2DEC	0x001A2000  	ControlAnalogFlags_input_voltage_status_first_step_count_L0+0
0x2DF0	0x005C2000  	_flag_t+2
0x2DF4	0x00002000  	_InVoltageValue+0
0x2DF8	0x000040A0  	#1084227584
0x2DFC	0x0000432A  	#1126825984
0x2E00	0x00202000  	ControlAnalogFlags_input_voltage_status_second_step_count1_L0+0
0x2E04	0x001E2000  	ControlAnalogFlags_input_voltage_status_second_step_count_L0+0
0x2E08	0x005D2000  	_flag_t+3
0x2E0C	0x00004352  	#1129447424
0x2E10	0x00242000  	ControlAnalogFlags_current_status_count1_L0+0
0x2E14	0x00222000  	ControlAnalogFlags_current_status_count_L0+0
0x2E18	0x006B2000  	_flag_t+17
0x2E1C	0x00042000  	_CurrentValue+0
0x2E20	0x000042C8  	#1120403456
0x2E24	0x00302000  	ControlAnalogFlags_short_current_status_count1_L0+0
0x2E28	0x002E2000  	ControlAnalogFlags_short_current_status_count_L0+0
0x2E2C	0x006C2000  	_flag_t+18
0x2E30	0x000042F0  	#1123024896
0x2E34	0x00282000  	ControlAnalogFlags_input_voltage_status_bypass_count1_L0+0
0x2E38	0x00262000  	ControlAnalogFlags_input_voltage_status_bypass_count_L0+0
0x2E3C	0x005F2000  	_flag_t+5
0x2E40	0x00004366  	#1130758144
0x2E44	0x002C2000  	ControlAnalogFlags_output_voltage_status_count1_L0+0
0x2E48	0x002A2000  	ControlAnalogFlags_output_voltage_status_count_L0+0
0x2E4C	0x006A2000  	_flag_t+16
0x2E50	0x00082000  	_OutVoltageValue+0
0x2E54	0x00004387  	#1132920832
; end of _ControlAnalogFlags
_one_level_comparator:
;adc_func.c, 96 :: 		unsigned int* count_olc,unsigned int* count_olc1)
; delay_on_sec start address is: 12 (R3)
; gisteresis start address is: 8 (R2)
; value start address is: 4 (R1)
; reference start address is: 0 (R0)
0x1F80	0xB081    SUB	SP, SP, #4
0x1F82	0xF8CDE000  STR	LR, [SP, #0]
0x1F86	0x4681    MOV	R9, R0
0x1F88	0x468A    MOV	R10, R1
0x1F8A	0x4693    MOV	R11, R2
0x1F8C	0xFA1FFC83  UXTH	R12, R3
; delay_on_sec end address is: 12 (R3)
; gisteresis end address is: 8 (R2)
; value end address is: 4 (R1)
; reference end address is: 0 (R0)
; reference start address is: 36 (R9)
; value start address is: 40 (R10)
; gisteresis start address is: 44 (R11)
; delay_on_sec start address is: 48 (R12)
0x1F90	0xF8BD4004  LDRH	R4, [SP, #4]
0x1F94	0xF8AD4004  STRH	R4, [SP, #4]
0x1F98	0xF89D4008  LDRB	R4, [SP, #8]
0x1F9C	0xF88D4008  STRB	R4, [SP, #8]
0x1FA0	0x9C03    LDR	R4, [SP, #12]
0x1FA2	0x9403    STR	R4, [SP, #12]
0x1FA4	0x9C04    LDR	R4, [SP, #16]
0x1FA6	0x9404    STR	R4, [SP, #16]
0x1FA8	0x9C05    LDR	R4, [SP, #20]
0x1FAA	0x9405    STR	R4, [SP, #20]
;adc_func.c, 98 :: 		if(value>=(reference+gisteresis))
0x1FAC	0x4648    MOV	R0, R9
0x1FAE	0x465A    MOV	R2, R11
0x1FB0	0xF7FEFA3A  BL	__Add_FP+0
0x1FB4	0x4652    MOV	R2, R10
0x1FB6	0xF7FEFAB7  BL	__Compare_FP+0
0x1FBA	0xF2400000  MOVW	R0, #0
0x1FBE	0xDC00    BGT	L__one_level_comparator53
0x1FC0	0x2001    MOVS	R0, #1
L__one_level_comparator53:
0x1FC2	0xB348    CBZ	R0, L_one_level_comparator11
;adc_func.c, 100 :: 		if(++(*count_olc)>=((unsigned int)delay_off_sec*(1000/ms_in_one_cycle)))
0x1FC4	0x9C04    LDR	R4, [SP, #16]
0x1FC6	0x8824    LDRH	R4, [R4, #0]
0x1FC8	0x1C65    ADDS	R5, R4, #1
0x1FCA	0x9C04    LDR	R4, [SP, #16]
0x1FCC	0x8025    STRH	R5, [R4, #0]
0x1FCE	0x9C04    LDR	R4, [SP, #16]
0x1FD0	0x8826    LDRH	R6, [R4, #0]
0x1FD2	0xF89D5008  LDRB	R5, [SP, #8]
0x1FD6	0xF24034E8  MOVW	R4, #1000
0x1FDA	0xB224    SXTH	R4, R4
0x1FDC	0xFB94F5F5  SDIV	R5, R4, R5
0x1FE0	0xB22D    SXTH	R5, R5
0x1FE2	0xF8BD4004  LDRH	R4, [SP, #4]
0x1FE6	0x436C    MULS	R4, R5, R4
0x1FE8	0xB2A4    UXTH	R4, R4
0x1FEA	0x42A6    CMP	R6, R4
0x1FEC	0xD314    BCC	L_one_level_comparator12
;adc_func.c, 102 :: 		*count_olc = 0;
0x1FEE	0x2500    MOVS	R5, #0
0x1FF0	0x9C04    LDR	R4, [SP, #16]
0x1FF2	0x8025    STRH	R5, [R4, #0]
;adc_func.c, 103 :: 		*count_olc1=0;
0x1FF4	0x2500    MOVS	R5, #0
0x1FF6	0x9C05    LDR	R4, [SP, #20]
0x1FF8	0x8025    STRH	R5, [R4, #0]
;adc_func.c, 105 :: 		if(value>=(reference+gisteresis))
0x1FFA	0x4648    MOV	R0, R9
0x1FFC	0x465A    MOV	R2, R11
0x1FFE	0xF7FEFA13  BL	__Add_FP+0
0x2002	0x4652    MOV	R2, R10
0x2004	0xF7FEFA90  BL	__Compare_FP+0
0x2008	0xF2400000  MOVW	R0, #0
0x200C	0xDC00    BGT	L__one_level_comparator54
0x200E	0x2001    MOVS	R0, #1
L__one_level_comparator54:
0x2010	0xB110    CBZ	R0, L_one_level_comparator13
;adc_func.c, 107 :: 		*status = 0;
0x2012	0x2500    MOVS	R5, #0
0x2014	0x9C03    LDR	R4, [SP, #12]
0x2016	0x7025    STRB	R5, [R4, #0]
;adc_func.c, 108 :: 		}
L_one_level_comparator13:
;adc_func.c, 109 :: 		}
L_one_level_comparator12:
;adc_func.c, 110 :: 		}
L_one_level_comparator11:
;adc_func.c, 114 :: 		if(value<=(reference-gisteresis))
0x2018	0x465A    MOV	R2, R11
0x201A	0x4648    MOV	R0, R9
0x201C	0xF7FEFAB8  BL	__Sub_FP+0
0x2020	0x4652    MOV	R2, R10
0x2022	0xF7FEFA81  BL	__Compare_FP+0
0x2026	0xF2400000  MOVW	R0, #0
0x202A	0xDB00    BLT	L__one_level_comparator55
0x202C	0x2001    MOVS	R0, #1
L__one_level_comparator55:
0x202E	0xB340    CBZ	R0, L_one_level_comparator14
;adc_func.c, 116 :: 		if(++(*count_olc1)>=((unsigned int)delay_on_sec*(1000/ms_in_one_cycle)))
0x2030	0x9C05    LDR	R4, [SP, #20]
0x2032	0x8824    LDRH	R4, [R4, #0]
0x2034	0x1C65    ADDS	R5, R4, #1
0x2036	0x9C05    LDR	R4, [SP, #20]
0x2038	0x8025    STRH	R5, [R4, #0]
0x203A	0x9C05    LDR	R4, [SP, #20]
0x203C	0x8826    LDRH	R6, [R4, #0]
0x203E	0xF89D5008  LDRB	R5, [SP, #8]
0x2042	0xF24034E8  MOVW	R4, #1000
0x2046	0xB224    SXTH	R4, R4
0x2048	0xFB94F4F5  SDIV	R4, R4, R5
0x204C	0xB224    SXTH	R4, R4
0x204E	0xFB0CF404  MUL	R4, R12, R4
0x2052	0xB2A4    UXTH	R4, R4
; delay_on_sec end address is: 48 (R12)
0x2054	0x42A6    CMP	R6, R4
0x2056	0xD314    BCC	L_one_level_comparator15
;adc_func.c, 118 :: 		*count_olc = 0;
0x2058	0x2500    MOVS	R5, #0
0x205A	0x9C04    LDR	R4, [SP, #16]
0x205C	0x8025    STRH	R5, [R4, #0]
;adc_func.c, 119 :: 		*count_olc1=0;
0x205E	0x2500    MOVS	R5, #0
0x2060	0x9C05    LDR	R4, [SP, #20]
0x2062	0x8025    STRH	R5, [R4, #0]
;adc_func.c, 121 :: 		if(value<=(reference-gisteresis))
0x2064	0x465A    MOV	R2, R11
0x2066	0x4648    MOV	R0, R9
0x2068	0xF7FEFA92  BL	__Sub_FP+0
; reference end address is: 36 (R9)
; gisteresis end address is: 44 (R11)
0x206C	0x4652    MOV	R2, R10
0x206E	0xF7FEFA5B  BL	__Compare_FP+0
0x2072	0xF2400000  MOVW	R0, #0
0x2076	0xDB00    BLT	L__one_level_comparator56
0x2078	0x2001    MOVS	R0, #1
L__one_level_comparator56:
; value end address is: 40 (R10)
0x207A	0xB110    CBZ	R0, L_one_level_comparator16
;adc_func.c, 123 :: 		*status = 1;
0x207C	0x2501    MOVS	R5, #1
0x207E	0x9C03    LDR	R4, [SP, #12]
0x2080	0x7025    STRB	R5, [R4, #0]
;adc_func.c, 124 :: 		}
L_one_level_comparator16:
;adc_func.c, 125 :: 		}
L_one_level_comparator15:
;adc_func.c, 126 :: 		}
L_one_level_comparator14:
;adc_func.c, 127 :: 		}
L_end_one_level_comparator:
0x2082	0xF8DDE000  LDR	LR, [SP, #0]
0x2086	0xB001    ADD	SP, SP, #4
0x2088	0x4770    BX	LR
; end of _one_level_comparator
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x0428	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x042A	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x042E	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x0432	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x0436	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x0438	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x043A	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x043C	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x043E	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x0442	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x0444	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x0448	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x044A	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x044C	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x0450	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x0452	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x0454	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x0456	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x045A	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x045E	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x0460	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x0462	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x0464	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x0466	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x046A	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x046C	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x046E	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x0472	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x0474	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x0476	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x047A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x047C	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x047E	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x0480	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x0482	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x0484	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x0486	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x0488	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x048A	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x048C	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x048E	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x0490	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x0492	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x0494	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x0498	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x049A	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x049E	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x04A0	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x04A4	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x04A8	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x04AA	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x04AC	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x04B0	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x04B2	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x04B4	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x04B6	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x04BA	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x04BE	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x04C2	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x04C4	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x04C6	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x04CA	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x04CC	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x04D0	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x04D4	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x04D6	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x04D8	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x04DA	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x04DE	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x04E2	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x04E4	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x04E8	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x04EA	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x04EC	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x04F0	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x04F2	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x04F4	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x04F6	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x04FA	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x04FE	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x0502	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x0506	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x050A	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x050C	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x050E	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x0512	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x0516	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x0518	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x051C	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x051E	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x0522	0xB001    ADD	SP, SP, #4
0x0524	0x4770    BX	LR
; end of __Add_FP
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x0528	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x052A	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x052C	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x052E	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x0530	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x0532	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x0536	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x053A	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x053C	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x053E	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x0540	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x0542	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x0544	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x0546	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x0548	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x054A	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x054C	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x054E	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x0552	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x0556	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x0558	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x055A	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x055E	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x0562	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x0564	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x0566	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x056A	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x056E	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x0570	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x0572	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x0574	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x0576	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x0578	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x057A	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x057C	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x057E	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x0580	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x0582	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x0584	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x0586	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x0588	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x058C	0xB001    ADD	SP, SP, #4
0x058E	0x4770    BX	LR
; end of __Compare_FP
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x0590	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x0592	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x0596	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x059A	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x059E	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x05A2	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x05A4	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x05A6	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x05A8	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x05AA	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x05AE	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x05B0	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x05B4	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x05B6	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x05B8	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x05BC	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x05BE	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x05C0	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x05C2	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x05C6	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x05CA	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x05CC	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x05CE	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x05D0	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x05D2	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x05D6	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x05D8	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x05DA	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x05DE	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x05E0	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x05E2	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x05E6	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x05E8	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x05EA	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x05EC	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x05EE	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x05F0	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x05F2	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x05F4	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x05F6	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x05F8	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x05FA	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x05FC	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x05FE	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x0600	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x0604	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x0606	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x060A	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x060C	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x0610	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x0614	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x0616	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x0618	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x061C	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x061E	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x0620	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x0622	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x0626	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x062A	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x062E	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x0630	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x0632	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x0636	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x0638	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x063C	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x0640	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x0642	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x0644	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x0646	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x064A	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x064E	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x0650	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x0654	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x0656	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x0658	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x065C	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x065E	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x0660	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x0662	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x0666	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x066A	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x066E	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x0672	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x0676	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x0678	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x067A	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x067E	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x0682	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x0684	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x0688	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x068A	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x068E	0xB001    ADD	SP, SP, #4
0x0690	0x4770    BX	LR
; end of __Sub_FP
_ReadAnalogInput:
;adc_func.c, 20 :: 		void ReadAnalogInput()
0x2E58	0xB081    SUB	SP, SP, #4
0x2E5A	0xF8CDE000  STR	LR, [SP, #0]
;adc_func.c, 23 :: 		if((rai_count++)>=50)
0x2E5E	0x4A0F    LDR	R2, [PC, #60]
0x2E60	0x7811    LDRB	R1, [R2, #0]
0x2E62	0x4610    MOV	R0, R2
0x2E64	0x7800    LDRB	R0, [R0, #0]
0x2E66	0x1C40    ADDS	R0, R0, #1
0x2E68	0x7010    STRB	R0, [R2, #0]
0x2E6A	0x2932    CMP	R1, #50
0x2E6C	0xD311    BCC	L_ReadAnalogInput0
;adc_func.c, 25 :: 		rai_count=0;
0x2E6E	0x2100    MOVS	R1, #0
0x2E70	0x480A    LDR	R0, [PC, #40]
0x2E72	0x7001    STRB	R1, [R0, #0]
;adc_func.c, 26 :: 		InVoltageValue  = Read_ADC_chanell(IN_VOLTAGE,10,VOLTAGE_KOEF);
0x2E74	0xF04F4280  MOV	R2, #1073741824
0x2E78	0x210A    MOVS	R1, #10
0x2E7A	0x2004    MOVS	R0, #4
0x2E7C	0xF7FFF994  BL	_Read_ADC_chanell+0
0x2E80	0x4907    LDR	R1, [PC, #28]
0x2E82	0x6008    STR	R0, [R1, #0]
;adc_func.c, 27 :: 		CurrentValue    = Read_ADC_chanell(IN_CURRENT,10,CURRENT_KOEF);
0x2E84	0x4A07    LDR	R2, [PC, #28]
0x2E86	0x210A    MOVS	R1, #10
0x2E88	0x2005    MOVS	R0, #5
0x2E8A	0xF7FFF98D  BL	_Read_ADC_chanell+0
0x2E8E	0x4906    LDR	R1, [PC, #24]
0x2E90	0x6008    STR	R0, [R1, #0]
;adc_func.c, 28 :: 		}
L_ReadAnalogInput0:
;adc_func.c, 30 :: 		}
L_end_ReadAnalogInput:
0x2E92	0xF8DDE000  LDR	LR, [SP, #0]
0x2E96	0xB001    ADD	SP, SP, #4
0x2E98	0x4770    BX	LR
0x2E9A	0xBF00    NOP
0x2E9C	0x00322000  	ReadAnalogInput_rai_count_L0+0
0x2EA0	0x00002000  	_InVoltageValue+0
0x2EA4	0x000040E0  	#1088421888
0x2EA8	0x00042000  	_CurrentValue+0
; end of _ReadAnalogInput
_Read_ADC_chanell:
;adc_func.c, 33 :: 		float Read_ADC_chanell(char chanell,unsigned char samples,float koef)
; koef start address is: 8 (R2)
; samples start address is: 4 (R1)
; chanell start address is: 0 (R0)
0x21A8	0xB083    SUB	SP, SP, #12
0x21AA	0xF8CDE000  STR	LR, [SP, #0]
; koef end address is: 8 (R2)
; samples end address is: 4 (R1)
; chanell end address is: 0 (R0)
; chanell start address is: 0 (R0)
; samples start address is: 4 (R1)
; koef start address is: 8 (R2)
;adc_func.c, 35 :: 		float  temp = 0,temp1 = 0;
; temp1 start address is: 32 (R8)
0x21AE	0xF04F0800  MOV	R8, #0
;adc_func.c, 36 :: 		unsigned char i = 0;
;adc_func.c, 37 :: 		for(i=0;i<samples;i++)
; i start address is: 48 (R12)
0x21B2	0xF2400C00  MOVW	R12, #0
; chanell end address is: 0 (R0)
; samples end address is: 4 (R1)
; koef end address is: 8 (R2)
; temp1 end address is: 32 (R8)
; i end address is: 48 (R12)
0x21B6	0xFA5FFB80  UXTB	R11, R0
0x21BA	0xFA5FFA81  UXTB	R10, R1
0x21BE	0x4691    MOV	R9, R2
L_Read_ADC_chanell1:
; i start address is: 48 (R12)
; chanell start address is: 44 (R11)
; temp1 start address is: 32 (R8)
; koef start address is: 36 (R9)
; samples start address is: 40 (R10)
; chanell start address is: 44 (R11)
; chanell end address is: 44 (R11)
0x21C0	0x45D4    CMP	R12, R10
0x21C2	0xD21C    BCS	L_Read_ADC_chanell2
; chanell end address is: 44 (R11)
;adc_func.c, 39 :: 		temp = (ADC1_Get_Sample(chanell)>>2);
; chanell start address is: 44 (R11)
0x21C4	0xFA5FF08B  UXTB	R0, R11
0x21C8	0xF7FEFA64  BL	_ADC1_Get_Sample+0
0x21CC	0x0883    LSRS	R3, R0, #2
0x21CE	0xB29B    UXTH	R3, R3
0x21D0	0xB298    UXTH	R0, R3
0x21D2	0xF7FEFD97  BL	__UnsignedIntegralToFloat+0
;adc_func.c, 40 :: 		temp1+=temp;
0x21D6	0x4642    MOV	R2, R8
0x21D8	0xF7FEF926  BL	__Add_FP+0
0x21DC	0x4680    MOV	R8, R0
;adc_func.c, 41 :: 		Delay_us(150);
0x21DE	0xF24047AF  MOVW	R7, #1199
0x21E2	0xF2C00700  MOVT	R7, #0
0x21E6	0xBF00    NOP
0x21E8	0xBF00    NOP
L_Read_ADC_chanell4:
0x21EA	0x1E7F    SUBS	R7, R7, #1
0x21EC	0xD1FD    BNE	L_Read_ADC_chanell4
0x21EE	0xBF00    NOP
0x21F0	0xBF00    NOP
0x21F2	0xBF00    NOP
;adc_func.c, 37 :: 		for(i=0;i<samples;i++)
0x21F4	0xF10C0C01  ADD	R12, R12, #1
0x21F8	0xFA5FFC8C  UXTB	R12, R12
;adc_func.c, 42 :: 		}
; chanell end address is: 44 (R11)
; i end address is: 48 (R12)
0x21FC	0xE7E0    B	L_Read_ADC_chanell1
L_Read_ADC_chanell2:
;adc_func.c, 44 :: 		return ((float)((temp1/samples)/koef));
0x21FE	0xFA5FF08A  UXTB	R0, R10
0x2202	0xF7FEFD7F  BL	__UnsignedIntegralToFloat+0
; samples end address is: 40 (R10)
0x2206	0x9002    STR	R0, [SP, #8]
0x2208	0x9101    STR	R1, [SP, #4]
0x220A	0x9902    LDR	R1, [SP, #8]
0x220C	0x460A    MOV	R2, R1
0x220E	0x4640    MOV	R0, R8
0x2210	0xF7FEFD8E  BL	__Div_FP+0
; temp1 end address is: 32 (R8)
0x2214	0x9901    LDR	R1, [SP, #4]
0x2216	0x464A    MOV	R2, R9
0x2218	0xF7FEFD8A  BL	__Div_FP+0
; koef end address is: 36 (R9)
;adc_func.c, 48 :: 		}
L_end_Read_ADC_chanell:
0x221C	0xF8DDE000  LDR	LR, [SP, #0]
0x2220	0xB003    ADD	SP, SP, #12
0x2222	0x4770    BX	LR
; end of _Read_ADC_chanell
_ADC1_Get_Sample:
;__Lib_ADC_32Lxxx_20ch.c, 146 :: 		
; channel start address is: 0 (R0)
0x0694	0xB081    SUB	SP, SP, #4
0x0696	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
;__Lib_ADC_32Lxxx_20ch.c, 147 :: 		
0x069A	0xB281    UXTH	R1, R0
; channel end address is: 0 (R0)
0x069C	0x4803    LDR	R0, [PC, #12]
0x069E	0xF7FFFD59  BL	__Lib_ADC_32Lxxx_20ch_ADCx_Get_Sample+0
;__Lib_ADC_32Lxxx_20ch.c, 154 :: 		
L_end_ADC1_Get_Sample:
0x06A2	0xF8DDE000  LDR	LR, [SP, #0]
0x06A6	0xB001    ADD	SP, SP, #4
0x06A8	0x4770    BX	LR
0x06AA	0xBF00    NOP
0x06AC	0x24004001  	ADC_SR+0
; end of _ADC1_Get_Sample
__Lib_ADC_32Lxxx_20ch_ADCx_Get_Sample:
;__Lib_ADC_32Lxxx_20ch.c, 133 :: 		
; channel start address is: 4 (R1)
; base start address is: 0 (R0)
0x0154	0xB081    SUB	SP, SP, #4
0x0156	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; channel start address is: 4 (R1)
;__Lib_ADC_32Lxxx_20ch.c, 134 :: 		
0x015A	0xF2000440  ADDW	R4, R0, #64
0x015E	0x090A    LSRS	R2, R1, #4
0x0160	0xB292    UXTH	R2, R2
0x0162	0xB293    UXTH	R3, R2
0x0164	0x6822    LDR	R2, [R4, #0]
0x0166	0xF3631204  BFI	R2, R3, #4, #1
0x016A	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32Lxxx_20ch.c, 135 :: 		
0x016C	0xF2000440  ADDW	R4, R0, #64
0x0170	0x08CA    LSRS	R2, R1, #3
0x0172	0xB292    UXTH	R2, R2
0x0174	0xB293    UXTH	R3, R2
0x0176	0x6822    LDR	R2, [R4, #0]
0x0178	0xF36302C3  BFI	R2, R3, #3, #1
0x017C	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32Lxxx_20ch.c, 136 :: 		
0x017E	0xF2000440  ADDW	R4, R0, #64
0x0182	0x088A    LSRS	R2, R1, #2
0x0184	0xB292    UXTH	R2, R2
0x0186	0xB293    UXTH	R3, R2
0x0188	0x6822    LDR	R2, [R4, #0]
0x018A	0xF3630282  BFI	R2, R3, #2, #1
0x018E	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32Lxxx_20ch.c, 137 :: 		
0x0190	0xF2000440  ADDW	R4, R0, #64
0x0194	0x084A    LSRS	R2, R1, #1
0x0196	0xB292    UXTH	R2, R2
0x0198	0xB293    UXTH	R3, R2
0x019A	0x6822    LDR	R2, [R4, #0]
0x019C	0xF3630241  BFI	R2, R3, #1, #1
0x01A0	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32Lxxx_20ch.c, 138 :: 		
0x01A2	0xF2000440  ADDW	R4, R0, #64
0x01A6	0xB28B    UXTH	R3, R1
; channel end address is: 4 (R1)
0x01A8	0x6822    LDR	R2, [R4, #0]
0x01AA	0xF3630200  BFI	R2, R3, #0, #1
0x01AE	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32Lxxx_20ch.c, 139 :: 		
0x01B0	0xF2000408  ADDW	R4, R0, #8
0x01B4	0x2301    MOVS	R3, #1
0x01B6	0x6822    LDR	R2, [R4, #0]
0x01B8	0xF363729E  BFI	R2, R3, #30, #1
0x01BC	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32Lxxx_20ch.c, 140 :: 		
0x01BE	0xF7FFFF9B  BL	_Delay_1us+0
; base end address is: 0 (R0)
;__Lib_ADC_32Lxxx_20ch.c, 141 :: 		
L___Lib_ADC_32Lxxx_20ch_ADCx_Get_Sample18:
; base start address is: 0 (R0)
0x01C2	0x6803    LDR	R3, [R0, #0]
0x01C4	0xF3C30240  UBFX	R2, R3, #1, #1
0x01C8	0xB902    CBNZ	R2, L___Lib_ADC_32Lxxx_20ch_ADCx_Get_Sample19
0x01CA	0xE7FA    B	L___Lib_ADC_32Lxxx_20ch_ADCx_Get_Sample18
L___Lib_ADC_32Lxxx_20ch_ADCx_Get_Sample19:
;__Lib_ADC_32Lxxx_20ch.c, 142 :: 		
0x01CC	0xF2000258  ADDW	R2, R0, #88
; base end address is: 0 (R0)
0x01D0	0x6812    LDR	R2, [R2, #0]
0x01D2	0xB290    UXTH	R0, R2
;__Lib_ADC_32Lxxx_20ch.c, 143 :: 		
L_end_ADCx_Get_Sample:
0x01D4	0xF8DDE000  LDR	LR, [SP, #0]
0x01D8	0xB001    ADD	SP, SP, #4
0x01DA	0x4770    BX	LR
; end of __Lib_ADC_32Lxxx_20ch_ADCx_Get_Sample
_Delay_1us:
;__Lib_Delays.c, 13 :: 		void Delay_1us() {
;__Lib_Delays.c, 14 :: 		Delay_us(1);
0x00F8	0xF2400707  MOVW	R7, #7
0x00FC	0xF2C00700  MOVT	R7, #0
L_Delay_1us0:
0x0100	0x1E7F    SUBS	R7, R7, #1
0x0102	0xD1FD    BNE	L_Delay_1us0
0x0104	0xBF00    NOP
0x0106	0xBF00    NOP
0x0108	0xBF00    NOP
0x010A	0xBF00    NOP
;__Lib_Delays.c, 15 :: 		}
L_end_Delay_1us:
0x010C	0x4770    BX	LR
; end of _Delay_1us
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x0D04	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x0D06	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x0D08	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x0D0A	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x0D0C	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x0D0E	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x0D12	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x0D14	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x0D16	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x0D18	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x0D1A	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x0D1C	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x0D1E	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x0D20	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x0D22	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x0D24	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x0D28	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x0D2C	0xB001    ADD	SP, SP, #4
0x0D2E	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x0D30	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x0D32	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x0D34	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x0D38	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x0D3A	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x0D3E	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x0D42	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x0D44	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x0D46	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x0D48	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x0D4A	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x0D4E	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x0D52	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x0D54	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x0D56	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x0D58	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x0D5C	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x0D60	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x0D64	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x0D66	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x0D6A	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x0D6E	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x0D70	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x0D72	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x0D74	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x0D76	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x0D78	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x0D7A	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x0D7C	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x0D7E	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x0D80	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x0D82	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x0D86	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x0D88	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x0D8A	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x0D8C	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x0D8E	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x0D90	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x0D92	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x0D94	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x0D96	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x0D98	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x0D9C	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x0D9E	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x0DA0	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x0DA4	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x0DA6	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x0DA8	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x0DAA	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x0DAC	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x0DAE	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x0DB0	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x0DB4	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x0DB6	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x0DB8	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x0DBA	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x0DBC	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x0DC0	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x0DC2	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x0DC4	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x0DC6	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x0DC8	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x0DCC	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x0DD0	0xB001    ADD	SP, SP, #4
0x0DD2	0x4770    BX	LR
; end of __Div_FP
_ControlOut:
;func.c, 71 :: 		void ControlOut()
0x2738	0xB081    SUB	SP, SP, #4
0x273A	0xF8CDE000  STR	LR, [SP, #0]
;func.c, 78 :: 		if(flag_t.first_start==RESET)
0x273E	0x4889    LDR	R0, [PC, #548]
0x2740	0x7800    LDRB	R0, [R0, #0]
0x2742	0x2800    CMP	R0, #0
0x2744	0xF0408054  BNE	L_ControlOut9
;func.c, 81 :: 		&c,&c1);
0x2748	0x4B87    LDR	R3, [PC, #540]
0x274A	0x4A88    LDR	R2, [PC, #544]
;func.c, 80 :: 		ControlDigit(flag_t.input_voltage_status_first_step, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.status_first_step,
0x274C	0x4988    LDR	R1, [PC, #544]
0x274E	0x4889    LDR	R0, [PC, #548]
0x2750	0x7800    LDRB	R0, [R0, #0]
;func.c, 81 :: 		&c,&c1);
0x2752	0xB408    PUSH	(R3)
0x2754	0xB404    PUSH	(R2)
;func.c, 80 :: 		ControlDigit(flag_t.input_voltage_status_first_step, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.status_first_step,
0x2756	0xB402    PUSH	(R1)
0x2758	0x230A    MOVS	R3, #10
0x275A	0x2202    MOVS	R2, #2
0x275C	0x2102    MOVS	R1, #2
;func.c, 81 :: 		&c,&c1);
;func.c, 80 :: 		ControlDigit(flag_t.input_voltage_status_first_step, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.status_first_step,
;func.c, 81 :: 		&c,&c1);
0x275E	0xF7FFFE73  BL	_ControlDigit+0
0x2762	0xB003    ADD	SP, SP, #12
;func.c, 84 :: 		&c2,&c3);
0x2764	0x4B84    LDR	R3, [PC, #528]
0x2766	0x4A85    LDR	R2, [PC, #532]
;func.c, 83 :: 		ControlDigit(flag_t.input_voltage_status_second_step, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.status_second_step,
0x2768	0x4985    LDR	R1, [PC, #532]
0x276A	0x4886    LDR	R0, [PC, #536]
0x276C	0x7800    LDRB	R0, [R0, #0]
;func.c, 84 :: 		&c2,&c3);
0x276E	0xB408    PUSH	(R3)
0x2770	0xB404    PUSH	(R2)
;func.c, 83 :: 		ControlDigit(flag_t.input_voltage_status_second_step, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.status_second_step,
0x2772	0xB402    PUSH	(R1)
0x2774	0x230A    MOVS	R3, #10
0x2776	0x2202    MOVS	R2, #2
0x2778	0x2102    MOVS	R1, #2
;func.c, 84 :: 		&c2,&c3);
;func.c, 83 :: 		ControlDigit(flag_t.input_voltage_status_second_step, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.status_second_step,
;func.c, 84 :: 		&c2,&c3);
0x277A	0xF7FFFE65  BL	_ControlDigit+0
0x277E	0xB003    ADD	SP, SP, #12
;func.c, 87 :: 		&c4,&c5);
0x2780	0x4B81    LDR	R3, [PC, #516]
0x2782	0x4A82    LDR	R2, [PC, #520]
;func.c, 86 :: 		ControlDigit(flag_t.input_voltage_status_bypass, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.status_bypass,
0x2784	0x4982    LDR	R1, [PC, #520]
0x2786	0x4883    LDR	R0, [PC, #524]
0x2788	0x7800    LDRB	R0, [R0, #0]
;func.c, 87 :: 		&c4,&c5);
0x278A	0xB408    PUSH	(R3)
0x278C	0xB404    PUSH	(R2)
;func.c, 86 :: 		ControlDigit(flag_t.input_voltage_status_bypass, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.status_bypass,
0x278E	0xB402    PUSH	(R1)
0x2790	0x230A    MOVS	R3, #10
0x2792	0x2202    MOVS	R2, #2
0x2794	0x2102    MOVS	R1, #2
;func.c, 87 :: 		&c4,&c5);
;func.c, 86 :: 		ControlDigit(flag_t.input_voltage_status_bypass, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.status_bypass,
;func.c, 87 :: 		&c4,&c5);
0x2796	0xF7FFFE57  BL	_ControlDigit+0
0x279A	0xB003    ADD	SP, SP, #12
;func.c, 90 :: 		&c6,&c7);
0x279C	0x4B7E    LDR	R3, [PC, #504]
0x279E	0x4A7F    LDR	R2, [PC, #508]
;func.c, 89 :: 		ControlDigit(flag_t.output_voltage_status_temp, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.output_voltage_status,
0x27A0	0x497F    LDR	R1, [PC, #508]
0x27A2	0x4880    LDR	R0, [PC, #512]
0x27A4	0x7800    LDRB	R0, [R0, #0]
;func.c, 90 :: 		&c6,&c7);
0x27A6	0xB408    PUSH	(R3)
0x27A8	0xB404    PUSH	(R2)
;func.c, 89 :: 		ControlDigit(flag_t.output_voltage_status_temp, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.output_voltage_status,
0x27AA	0xB402    PUSH	(R1)
0x27AC	0x230A    MOVS	R3, #10
0x27AE	0x2202    MOVS	R2, #2
0x27B0	0x2102    MOVS	R1, #2
;func.c, 90 :: 		&c6,&c7);
;func.c, 89 :: 		ControlDigit(flag_t.output_voltage_status_temp, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.output_voltage_status,
;func.c, 90 :: 		&c6,&c7);
0x27B2	0xF7FFFE49  BL	_ControlDigit+0
0x27B6	0xB003    ADD	SP, SP, #12
;func.c, 93 :: 		&c8,&c9);
0x27B8	0x4B7B    LDR	R3, [PC, #492]
0x27BA	0x4A7C    LDR	R2, [PC, #496]
;func.c, 92 :: 		ControlDigit(flag_t.short_current_status_temp, CURRENT_SHORT_DELAY_ON,CURRENT_SHORT_DELAY_OFF,MS_IN_CYCLE,&flag_t.short_current_status,
0x27BC	0x497C    LDR	R1, [PC, #496]
0x27BE	0x487D    LDR	R0, [PC, #500]
0x27C0	0x7800    LDRB	R0, [R0, #0]
;func.c, 93 :: 		&c8,&c9);
0x27C2	0xB408    PUSH	(R3)
0x27C4	0xB404    PUSH	(R2)
;func.c, 92 :: 		ControlDigit(flag_t.short_current_status_temp, CURRENT_SHORT_DELAY_ON,CURRENT_SHORT_DELAY_OFF,MS_IN_CYCLE,&flag_t.short_current_status,
0x27C6	0xB402    PUSH	(R1)
0x27C8	0x230A    MOVS	R3, #10
0x27CA	0x2203    MOVS	R2, #3
0x27CC	0x2103    MOVS	R1, #3
;func.c, 93 :: 		&c8,&c9);
;func.c, 92 :: 		ControlDigit(flag_t.short_current_status_temp, CURRENT_SHORT_DELAY_ON,CURRENT_SHORT_DELAY_OFF,MS_IN_CYCLE,&flag_t.short_current_status,
;func.c, 93 :: 		&c8,&c9);
0x27CE	0xF7FFFE3B  BL	_ControlDigit+0
0x27D2	0xB003    ADD	SP, SP, #12
;func.c, 96 :: 		&c10,&c11);
0x27D4	0x4B78    LDR	R3, [PC, #480]
0x27D6	0x4A79    LDR	R2, [PC, #484]
;func.c, 95 :: 		ControlDigit(flag_t.current_status_temp, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.current_status,
0x27D8	0x4979    LDR	R1, [PC, #484]
0x27DA	0x487A    LDR	R0, [PC, #488]
0x27DC	0x7800    LDRB	R0, [R0, #0]
;func.c, 96 :: 		&c10,&c11);
0x27DE	0xB408    PUSH	(R3)
0x27E0	0xB404    PUSH	(R2)
;func.c, 95 :: 		ControlDigit(flag_t.current_status_temp, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.current_status,
0x27E2	0xB402    PUSH	(R1)
0x27E4	0x230A    MOVS	R3, #10
0x27E6	0x2202    MOVS	R2, #2
0x27E8	0x2102    MOVS	R1, #2
;func.c, 96 :: 		&c10,&c11);
;func.c, 95 :: 		ControlDigit(flag_t.current_status_temp, DIGITAL_DELAY_ON,DIGITAL_DELAY_OFF,MS_IN_CYCLE,&flag_t.current_status,
;func.c, 96 :: 		&c10,&c11);
0x27EA	0xF7FFFE2D  BL	_ControlDigit+0
0x27EE	0xB003    ADD	SP, SP, #12
;func.c, 99 :: 		}
L_ControlOut9:
;func.c, 100 :: 		if(flag_t.first_start==SET)
0x27F0	0x485C    LDR	R0, [PC, #368]
0x27F2	0x7800    LDRB	R0, [R0, #0]
0x27F4	0x2801    CMP	R0, #1
0x27F6	0xF0408054  BNE	L_ControlOut10
;func.c, 103 :: 		MS_IN_CYCLE,&flag_t.status_first_step,&c,&c1);
0x27FA	0x4B5B    LDR	R3, [PC, #364]
0x27FC	0x4A5B    LDR	R2, [PC, #364]
0x27FE	0x495C    LDR	R1, [PC, #368]
;func.c, 102 :: 		ControlDigit(flag_t.input_voltage_status_first_step, SET_DELAY,RESET_DELAY,
0x2800	0x485C    LDR	R0, [PC, #368]
0x2802	0x7800    LDRB	R0, [R0, #0]
;func.c, 103 :: 		MS_IN_CYCLE,&flag_t.status_first_step,&c,&c1);
0x2804	0xB408    PUSH	(R3)
0x2806	0xB404    PUSH	(R2)
0x2808	0xB402    PUSH	(R1)
0x280A	0x230A    MOVS	R3, #10
;func.c, 102 :: 		ControlDigit(flag_t.input_voltage_status_first_step, SET_DELAY,RESET_DELAY,
0x280C	0x221E    MOVS	R2, #30
0x280E	0x210A    MOVS	R1, #10
;func.c, 103 :: 		MS_IN_CYCLE,&flag_t.status_first_step,&c,&c1);
0x2810	0xF7FFFE1A  BL	_ControlDigit+0
0x2814	0xB003    ADD	SP, SP, #12
;func.c, 106 :: 		MS_IN_CYCLE,&flag_t.status_second_step,&c2,&c3);
0x2816	0x4B58    LDR	R3, [PC, #352]
0x2818	0x4A58    LDR	R2, [PC, #352]
0x281A	0x4959    LDR	R1, [PC, #356]
;func.c, 105 :: 		ControlDigit(flag_t.input_voltage_status_second_step, SET_DELAY,RESET_DELAY,
0x281C	0x4859    LDR	R0, [PC, #356]
0x281E	0x7800    LDRB	R0, [R0, #0]
;func.c, 106 :: 		MS_IN_CYCLE,&flag_t.status_second_step,&c2,&c3);
0x2820	0xB408    PUSH	(R3)
0x2822	0xB404    PUSH	(R2)
0x2824	0xB402    PUSH	(R1)
0x2826	0x230A    MOVS	R3, #10
;func.c, 105 :: 		ControlDigit(flag_t.input_voltage_status_second_step, SET_DELAY,RESET_DELAY,
0x2828	0x221E    MOVS	R2, #30
0x282A	0x210A    MOVS	R1, #10
;func.c, 106 :: 		MS_IN_CYCLE,&flag_t.status_second_step,&c2,&c3);
0x282C	0xF7FFFE0C  BL	_ControlDigit+0
0x2830	0xB003    ADD	SP, SP, #12
;func.c, 109 :: 		MS_IN_CYCLE,&flag_t.status_bypass,&c4,&c5);
0x2832	0x4B55    LDR	R3, [PC, #340]
0x2834	0x4A55    LDR	R2, [PC, #340]
0x2836	0x4956    LDR	R1, [PC, #344]
;func.c, 108 :: 		ControlDigit(flag_t.input_voltage_status_bypass, SET_DELAY,RESET_DELAY,
0x2838	0x4856    LDR	R0, [PC, #344]
0x283A	0x7800    LDRB	R0, [R0, #0]
;func.c, 109 :: 		MS_IN_CYCLE,&flag_t.status_bypass,&c4,&c5);
0x283C	0xB408    PUSH	(R3)
0x283E	0xB404    PUSH	(R2)
0x2840	0xB402    PUSH	(R1)
0x2842	0x230A    MOVS	R3, #10
;func.c, 108 :: 		ControlDigit(flag_t.input_voltage_status_bypass, SET_DELAY,RESET_DELAY,
0x2844	0x221E    MOVS	R2, #30
0x2846	0x210A    MOVS	R1, #10
;func.c, 109 :: 		MS_IN_CYCLE,&flag_t.status_bypass,&c4,&c5);
0x2848	0xF7FFFDFE  BL	_ControlDigit+0
0x284C	0xB003    ADD	SP, SP, #12
;func.c, 112 :: 		MS_IN_CYCLE,&flag_t.output_voltage_status,&c6,&c7);
0x284E	0x4B52    LDR	R3, [PC, #328]
0x2850	0x4A52    LDR	R2, [PC, #328]
0x2852	0x4953    LDR	R1, [PC, #332]
;func.c, 111 :: 		ControlDigit(flag_t.output_voltage_status_temp, (TIME_KOEF),(DIGITAL_DELAY_OFF*TIME_KOEF),
0x2854	0x4853    LDR	R0, [PC, #332]
0x2856	0x7800    LDRB	R0, [R0, #0]
;func.c, 112 :: 		MS_IN_CYCLE,&flag_t.output_voltage_status,&c6,&c7);
0x2858	0xB408    PUSH	(R3)
0x285A	0xB404    PUSH	(R2)
0x285C	0xB402    PUSH	(R1)
0x285E	0x230A    MOVS	R3, #10
;func.c, 111 :: 		ControlDigit(flag_t.output_voltage_status_temp, (TIME_KOEF),(DIGITAL_DELAY_OFF*TIME_KOEF),
0x2860	0x2228    MOVS	R2, #40
0x2862	0x2114    MOVS	R1, #20
;func.c, 112 :: 		MS_IN_CYCLE,&flag_t.output_voltage_status,&c6,&c7);
0x2864	0xF7FFFDF0  BL	_ControlDigit+0
0x2868	0xB003    ADD	SP, SP, #12
;func.c, 116 :: 		&c8,&c9);
0x286A	0x4B4F    LDR	R3, [PC, #316]
0x286C	0x4A4F    LDR	R2, [PC, #316]
;func.c, 115 :: 		&flag_t.short_current_status,
0x286E	0x4950    LDR	R1, [PC, #320]
;func.c, 114 :: 		ControlDigit(flag_t.short_current_status_temp, CURRENT_SHORT_DELAY_ON,CURRENT_SHORT_DELAY_OFF,MS_IN_CYCLE,
0x2870	0x4850    LDR	R0, [PC, #320]
0x2872	0x7800    LDRB	R0, [R0, #0]
;func.c, 116 :: 		&c8,&c9);
0x2874	0xB408    PUSH	(R3)
0x2876	0xB404    PUSH	(R2)
;func.c, 115 :: 		&flag_t.short_current_status,
0x2878	0xB402    PUSH	(R1)
;func.c, 114 :: 		ControlDigit(flag_t.short_current_status_temp, CURRENT_SHORT_DELAY_ON,CURRENT_SHORT_DELAY_OFF,MS_IN_CYCLE,
0x287A	0x230A    MOVS	R3, #10
0x287C	0x2203    MOVS	R2, #3
0x287E	0x2103    MOVS	R1, #3
;func.c, 116 :: 		&c8,&c9);
;func.c, 115 :: 		&flag_t.short_current_status,
;func.c, 116 :: 		&c8,&c9);
0x2880	0xF7FFFDE2  BL	_ControlDigit+0
0x2884	0xB003    ADD	SP, SP, #12
;func.c, 120 :: 		&c10,&c11);
0x2886	0x4B4C    LDR	R3, [PC, #304]
0x2888	0x4A4C    LDR	R2, [PC, #304]
;func.c, 119 :: 		MS_IN_CYCLE,&flag_t.current_status,
0x288A	0x494D    LDR	R1, [PC, #308]
;func.c, 118 :: 		ControlDigit(flag_t.current_status_temp, (TIME_KOEF),(CURRENT_SHORT_DELAY_OFF*TIME_KOEF),
0x288C	0x484D    LDR	R0, [PC, #308]
0x288E	0x7800    LDRB	R0, [R0, #0]
;func.c, 120 :: 		&c10,&c11);
0x2890	0xB408    PUSH	(R3)
0x2892	0xB404    PUSH	(R2)
;func.c, 119 :: 		MS_IN_CYCLE,&flag_t.current_status,
0x2894	0xB402    PUSH	(R1)
0x2896	0x230A    MOVS	R3, #10
;func.c, 118 :: 		ControlDigit(flag_t.current_status_temp, (TIME_KOEF),(CURRENT_SHORT_DELAY_OFF*TIME_KOEF),
0x2898	0x223C    MOVS	R2, #60
0x289A	0x2114    MOVS	R1, #20
;func.c, 120 :: 		&c10,&c11);
;func.c, 119 :: 		MS_IN_CYCLE,&flag_t.current_status,
;func.c, 120 :: 		&c10,&c11);
0x289C	0xF7FFFDD4  BL	_ControlDigit+0
0x28A0	0xB003    ADD	SP, SP, #12
;func.c, 122 :: 		}
L_ControlOut10:
;func.c, 125 :: 		bitWrite(status, 0,flag_t.status_first_step);
0x28A2	0x4833    LDR	R0, [PC, #204]
0x28A4	0x7800    LDRB	R0, [R0, #0]
0x28A6	0xB140    CBZ	R0, L_ControlOut11
0x28A8	0x4847    LDR	R0, [PC, #284]
0x28AA	0x7800    LDRB	R0, [R0, #0]
0x28AC	0xF0400101  ORR	R1, R0, #1
0x28B0	0x4845    LDR	R0, [PC, #276]
0x28B2	0x7001    STRB	R1, [R0, #0]
0x28B4	0x4844    LDR	R0, [PC, #272]
; ?FLOC___ControlOut?T113 start address is: 0 (R0)
0x28B6	0x7800    LDRB	R0, [R0, #0]
; ?FLOC___ControlOut?T113 end address is: 0 (R0)
0x28B8	0xE008    B	L_ControlOut12
L_ControlOut11:
0x28BA	0x4843    LDR	R0, [PC, #268]
0x28BC	0x7801    LDRB	R1, [R0, #0]
0x28BE	0xF06F0001  MVN	R0, #1
0x28C2	0x4001    ANDS	R1, R0
0x28C4	0x4840    LDR	R0, [PC, #256]
0x28C6	0x7001    STRB	R1, [R0, #0]
0x28C8	0x483F    LDR	R0, [PC, #252]
; ?FLOC___ControlOut?T113 start address is: 0 (R0)
0x28CA	0x7800    LDRB	R0, [R0, #0]
; ?FLOC___ControlOut?T113 end address is: 0 (R0)
L_ControlOut12:
;func.c, 126 :: 		bitWrite(status, 1,flag_t.status_second_step);
0x28CC	0x482C    LDR	R0, [PC, #176]
0x28CE	0x7800    LDRB	R0, [R0, #0]
0x28D0	0xB140    CBZ	R0, L_ControlOut13
0x28D2	0x483D    LDR	R0, [PC, #244]
0x28D4	0x7800    LDRB	R0, [R0, #0]
0x28D6	0xF0400102  ORR	R1, R0, #2
0x28DA	0x483B    LDR	R0, [PC, #236]
0x28DC	0x7001    STRB	R1, [R0, #0]
0x28DE	0x483A    LDR	R0, [PC, #232]
; ?FLOC___ControlOut?T117 start address is: 0 (R0)
0x28E0	0x7800    LDRB	R0, [R0, #0]
; ?FLOC___ControlOut?T117 end address is: 0 (R0)
0x28E2	0xE008    B	L_ControlOut14
L_ControlOut13:
0x28E4	0x4838    LDR	R0, [PC, #224]
0x28E6	0x7801    LDRB	R1, [R0, #0]
0x28E8	0xF06F0002  MVN	R0, #2
0x28EC	0x4001    ANDS	R1, R0
0x28EE	0x4836    LDR	R0, [PC, #216]
0x28F0	0x7001    STRB	R1, [R0, #0]
0x28F2	0x4835    LDR	R0, [PC, #212]
; ?FLOC___ControlOut?T117 start address is: 0 (R0)
0x28F4	0x7800    LDRB	R0, [R0, #0]
; ?FLOC___ControlOut?T117 end address is: 0 (R0)
L_ControlOut14:
;func.c, 127 :: 		bitWrite(status, 2,flag_t.status_bypass);
0x28F6	0x4826    LDR	R0, [PC, #152]
0x28F8	0x7800    LDRB	R0, [R0, #0]
0x28FA	0xB140    CBZ	R0, L_ControlOut15
0x28FC	0x4832    LDR	R0, [PC, #200]
0x28FE	0x7800    LDRB	R0, [R0, #0]
0x2900	0xF0400104  ORR	R1, R0, #4
0x2904	0x4830    LDR	R0, [PC, #192]
0x2906	0x7001    STRB	R1, [R0, #0]
0x2908	0x482F    LDR	R0, [PC, #188]
; ?FLOC___ControlOut?T121 start address is: 0 (R0)
0x290A	0x7800    LDRB	R0, [R0, #0]
; ?FLOC___ControlOut?T121 end address is: 0 (R0)
0x290C	0xE008    B	L_ControlOut16
L_ControlOut15:
0x290E	0x482E    LDR	R0, [PC, #184]
0x2910	0x7801    LDRB	R1, [R0, #0]
0x2912	0xF06F0004  MVN	R0, #4
0x2916	0x4001    ANDS	R1, R0
0x2918	0x482B    LDR	R0, [PC, #172]
0x291A	0x7001    STRB	R1, [R0, #0]
0x291C	0x482A    LDR	R0, [PC, #168]
; ?FLOC___ControlOut?T121 start address is: 0 (R0)
0x291E	0x7800    LDRB	R0, [R0, #0]
; ?FLOC___ControlOut?T121 end address is: 0 (R0)
L_ControlOut16:
;func.c, 129 :: 		if(flag_t.start_button_status==RESET)
0x2920	0x482A    LDR	R0, [PC, #168]
0x2922	0x7800    LDRB	R0, [R0, #0]
0x2924	0xB910    CBNZ	R0, L_ControlOut17
;func.c, 131 :: 		flag_t.first_start = RESET;
0x2926	0x2100    MOVS	R1, #0
0x2928	0x480E    LDR	R0, [PC, #56]
0x292A	0x7001    STRB	R1, [R0, #0]
;func.c, 132 :: 		}
L_ControlOut17:
;func.c, 134 :: 		if(flag_t.first_start==RESET)
0x292C	0x480D    LDR	R0, [PC, #52]
0x292E	0x7800    LDRB	R0, [R0, #0]
0x2930	0xB910    CBNZ	R0, L_ControlOut18
;func.c, 136 :: 		flag_t.current_global_status = SET;
0x2932	0x2101    MOVS	R1, #1
0x2934	0x4826    LDR	R0, [PC, #152]
0x2936	0x7001    STRB	R1, [R0, #0]
;func.c, 137 :: 		}
L_ControlOut18:
;func.c, 139 :: 		if(flag_t.start_button_status==SET&&flag_t.current_status==SET&&flag_t.short_current_status==SET&&
0x2938	0x4824    LDR	R0, [PC, #144]
0x293A	0x7800    LDRB	R0, [R0, #0]
0x293C	0x2801    CMP	R0, #1
0x293E	0xF04080FB  BNE	L__ControlOut63
0x2942	0x481F    LDR	R0, [PC, #124]
0x2944	0x7800    LDRB	R0, [R0, #0]
0x2946	0x2801    CMP	R0, #1
0x2948	0xF04080F6  BNE	L__ControlOut62
0x294C	0x4818    LDR	R0, [PC, #96]
0x294E	0x7800    LDRB	R0, [R0, #0]
0x2950	0x2801    CMP	R0, #1
0x2952	0xF04080F1  BNE	L__ControlOut61
;func.c, 140 :: 		flag_t.current_global_status==SET)
0x2956	0x481E    LDR	R0, [PC, #120]
0x2958	0x7800    LDRB	R0, [R0, #0]
0x295A	0x2801    CMP	R0, #1
0x295C	0xF04080EC  BNE	L__ControlOut60
L__ControlOut59:
;func.c, 145 :: 		if(flag_t.output_voltage_status==SET)
0x2960	0xF000B838  B	#112
0x2964	0x00652000  	_flag_t+11
0x2968	0x003C2000  	ControlOut_c1_L0+0
0x296C	0x003A2000  	ControlOut_c_L0+0
0x2970	0x00682000  	_flag_t+14
0x2974	0x005C2000  	_flag_t+2
0x2978	0x00402000  	ControlOut_c3_L0+0
0x297C	0x003E2000  	ControlOut_c2_L0+0
0x2980	0x00692000  	_flag_t+15
0x2984	0x005D2000  	_flag_t+3
0x2988	0x00442000  	ControlOut_c5_L0+0
0x298C	0x00422000  	ControlOut_c4_L0+0
0x2990	0x00672000  	_flag_t+13
0x2994	0x005F2000  	_flag_t+5
0x2998	0x00482000  	ControlOut_c7_L0+0
0x299C	0x00462000  	ControlOut_c6_L0+0
0x29A0	0x00622000  	_flag_t+8
0x29A4	0x006A2000  	_flag_t+16
0x29A8	0x004C2000  	ControlOut_c9_L0+0
0x29AC	0x004A2000  	ControlOut_c8_L0+0
0x29B0	0x00642000  	_flag_t+10
0x29B4	0x006C2000  	_flag_t+18
0x29B8	0x00502000  	ControlOut_c11_L0+0
0x29BC	0x004E2000  	ControlOut_c10_L0+0
0x29C0	0x00632000  	_flag_t+9
0x29C4	0x006B2000  	_flag_t+17
0x29C8	0x000C2000  	_status+0
0x29CC	0x005B2000  	_flag_t+1
0x29D0	0x00662000  	_flag_t+12
0x29D4	0x4869    LDR	R0, [PC, #420]
0x29D6	0x7800    LDRB	R0, [R0, #0]
0x29D8	0x2801    CMP	R0, #1
0x29DA	0xD112    BNE	L_ControlOut22
;func.c, 147 :: 		if((main_count++)>=MAIN_RELE_DELAY)
0x29DC	0x4A68    LDR	R2, [PC, #416]
0x29DE	0x8811    LDRH	R1, [R2, #0]
0x29E0	0x4610    MOV	R0, R2
0x29E2	0x8800    LDRH	R0, [R0, #0]
0x29E4	0x1C40    ADDS	R0, R0, #1
0x29E6	0x8010    STRH	R0, [R2, #0]
0x29E8	0xF5B16FAF  CMP	R1, #1400
0x29EC	0xD309    BCC	L_ControlOut23
;func.c, 149 :: 		main_count = 0;
0x29EE	0x2100    MOVS	R1, #0
0x29F0	0x4863    LDR	R0, [PC, #396]
0x29F2	0x8001    STRH	R1, [R0, #0]
;func.c, 150 :: 		main_count1 = 0;
0x29F4	0x2100    MOVS	R1, #0
0x29F6	0x4863    LDR	R0, [PC, #396]
0x29F8	0x8001    STRH	R1, [R0, #0]
;func.c, 151 :: 		RELE_OUT_MAIN = ON;
0x29FA	0x2101    MOVS	R1, #1
0x29FC	0xB249    SXTB	R1, R1
0x29FE	0x4862    LDR	R0, [PC, #392]
0x2A00	0x6001    STR	R1, [R0, #0]
;func.c, 152 :: 		}
L_ControlOut23:
;func.c, 154 :: 		}
L_ControlOut22:
;func.c, 155 :: 		if(flag_t.output_voltage_status==RESET)
0x2A02	0x485E    LDR	R0, [PC, #376]
0x2A04	0x7800    LDRB	R0, [R0, #0]
0x2A06	0xB9B0    CBNZ	R0, L_ControlOut24
;func.c, 157 :: 		if((main_count1++)>=(MAIN_RELE_DELAY/2))
0x2A08	0x4A5E    LDR	R2, [PC, #376]
0x2A0A	0x8811    LDRH	R1, [R2, #0]
0x2A0C	0x4610    MOV	R0, R2
0x2A0E	0x8800    LDRH	R0, [R0, #0]
0x2A10	0x1C40    ADDS	R0, R0, #1
0x2A12	0x8010    STRH	R0, [R2, #0]
0x2A14	0xF5B17F2F  CMP	R1, #700
0x2A18	0xD30D    BCC	L_ControlOut25
;func.c, 159 :: 		main_count= 0;
0x2A1A	0x2100    MOVS	R1, #0
0x2A1C	0x4858    LDR	R0, [PC, #352]
0x2A1E	0x8001    STRH	R1, [R0, #0]
;func.c, 160 :: 		main_count1 = 0;
0x2A20	0x2100    MOVS	R1, #0
0x2A22	0x4858    LDR	R0, [PC, #352]
0x2A24	0x8001    STRH	R1, [R0, #0]
;func.c, 161 :: 		RELE_OUT_MAIN = OFF;
0x2A26	0x2100    MOVS	R1, #0
0x2A28	0xB249    SXTB	R1, R1
0x2A2A	0x4857    LDR	R0, [PC, #348]
0x2A2C	0x6001    STR	R1, [R0, #0]
;func.c, 162 :: 		OutVoltage = 0;
0x2A2E	0xF04F0100  MOV	R1, #0
0x2A32	0x4856    LDR	R0, [PC, #344]
0x2A34	0x6001    STR	R1, [R0, #0]
;func.c, 163 :: 		}
L_ControlOut25:
;func.c, 165 :: 		}
L_ControlOut24:
;func.c, 168 :: 		switch (status)
0x2A36	0xE06B    B	L_ControlOut26
;func.c, 170 :: 		case 0b00000111:
L_ControlOut28:
;func.c, 172 :: 		if(flag_t.output_voltage_status==SET)
0x2A38	0x4850    LDR	R0, [PC, #320]
0x2A3A	0x7800    LDRB	R0, [R0, #0]
0x2A3C	0x2801    CMP	R0, #1
0x2A3E	0xD123    BNE	L_ControlOut29
;func.c, 174 :: 		RELE_2 = OFF;
0x2A40	0x2100    MOVS	R1, #0
0x2A42	0xB249    SXTB	R1, R1
0x2A44	0x4852    LDR	R0, [PC, #328]
0x2A46	0x6001    STR	R1, [R0, #0]
;func.c, 175 :: 		RELE_BYPASS = OFF;
0x2A48	0x4852    LDR	R0, [PC, #328]
0x2A4A	0x6001    STR	R1, [R0, #0]
;func.c, 176 :: 		if((rele_1_count++)>=DELAY_SWITCH)
0x2A4C	0x4A52    LDR	R2, [PC, #328]
0x2A4E	0x7811    LDRB	R1, [R2, #0]
0x2A50	0x4610    MOV	R0, R2
0x2A52	0x7800    LDRB	R0, [R0, #0]
0x2A54	0x1C40    ADDS	R0, R0, #1
0x2A56	0x7010    STRB	R0, [R2, #0]
0x2A58	0x2907    CMP	R1, #7
0x2A5A	0xD315    BCC	L_ControlOut30
;func.c, 178 :: 		rele_1_count = 0;
0x2A5C	0x2100    MOVS	R1, #0
0x2A5E	0x484E    LDR	R0, [PC, #312]
0x2A60	0x7001    STRB	R1, [R0, #0]
;func.c, 179 :: 		RELE_1 = ON;
0x2A62	0x2101    MOVS	R1, #1
0x2A64	0xB249    SXTB	R1, R1
0x2A66	0x484D    LDR	R0, [PC, #308]
0x2A68	0x6001    STR	R1, [R0, #0]
;func.c, 180 :: 		OutVoltage = ((InVoltageValue/KOEF_TRANSF)*2)+InVoltageValue;
0x2A6A	0x484D    LDR	R0, [PC, #308]
0x2A6C	0x6800    LDR	R0, [R0, #0]
0x2A6E	0x4A4D    LDR	R2, [PC, #308]
0x2A70	0xF7FEF95E  BL	__Div_FP+0
0x2A74	0xF04F4280  MOV	R2, #1073741824
0x2A78	0xF7FFFBD4  BL	__Mul_FP+0
0x2A7C	0x4948    LDR	R1, [PC, #288]
0x2A7E	0x680A    LDR	R2, [R1, #0]
0x2A80	0xF7FDFCD2  BL	__Add_FP+0
0x2A84	0x4941    LDR	R1, [PC, #260]
0x2A86	0x6008    STR	R0, [R1, #0]
;func.c, 181 :: 		}
L_ControlOut30:
;func.c, 183 :: 		}
L_ControlOut29:
;func.c, 185 :: 		break;
0x2A88	0xE055    B	L_ControlOut27
;func.c, 186 :: 		case 0b00000110:
L_ControlOut31:
;func.c, 187 :: 		case 0b00000100:
L_ControlOut32:
;func.c, 188 :: 		RELE_1 = OFF;
0x2A8A	0x2100    MOVS	R1, #0
0x2A8C	0xB249    SXTB	R1, R1
0x2A8E	0x4843    LDR	R0, [PC, #268]
0x2A90	0x6001    STR	R1, [R0, #0]
;func.c, 189 :: 		RELE_BYPASS = OFF;
0x2A92	0x4840    LDR	R0, [PC, #256]
0x2A94	0x6001    STR	R1, [R0, #0]
;func.c, 190 :: 		if(flag_t.output_voltage_status==SET)
0x2A96	0x4839    LDR	R0, [PC, #228]
0x2A98	0x7800    LDRB	R0, [R0, #0]
0x2A9A	0x2801    CMP	R0, #1
0x2A9C	0xD119    BNE	L_ControlOut33
;func.c, 192 :: 		if((rele_2_count++)>=DELAY_SWITCH)
0x2A9E	0x4A42    LDR	R2, [PC, #264]
0x2AA0	0x7811    LDRB	R1, [R2, #0]
0x2AA2	0x4610    MOV	R0, R2
0x2AA4	0x7800    LDRB	R0, [R0, #0]
0x2AA6	0x1C40    ADDS	R0, R0, #1
0x2AA8	0x7010    STRB	R0, [R2, #0]
0x2AAA	0x2907    CMP	R1, #7
0x2AAC	0xD311    BCC	L_ControlOut34
;func.c, 194 :: 		rele_2_count = 0;
0x2AAE	0x2100    MOVS	R1, #0
0x2AB0	0x483D    LDR	R0, [PC, #244]
0x2AB2	0x7001    STRB	R1, [R0, #0]
;func.c, 195 :: 		RELE_2 = ON;
0x2AB4	0x2101    MOVS	R1, #1
0x2AB6	0xB249    SXTB	R1, R1
0x2AB8	0x4835    LDR	R0, [PC, #212]
0x2ABA	0x6001    STR	R1, [R0, #0]
;func.c, 196 :: 		OutVoltage = ((InVoltageValue/KOEF_TRANSF)*1)+InVoltageValue;
0x2ABC	0x4838    LDR	R0, [PC, #224]
0x2ABE	0x6800    LDR	R0, [R0, #0]
0x2AC0	0x4A38    LDR	R2, [PC, #224]
0x2AC2	0xF7FEF935  BL	__Div_FP+0
0x2AC6	0x4936    LDR	R1, [PC, #216]
0x2AC8	0x680A    LDR	R2, [R1, #0]
0x2ACA	0xF7FDFCAD  BL	__Add_FP+0
0x2ACE	0x492F    LDR	R1, [PC, #188]
0x2AD0	0x6008    STR	R0, [R1, #0]
;func.c, 197 :: 		}
L_ControlOut34:
;func.c, 198 :: 		}
L_ControlOut33:
;func.c, 200 :: 		break;
0x2AD2	0xE030    B	L_ControlOut27
;func.c, 202 :: 		case 0b00000000:
L_ControlOut35:
;func.c, 203 :: 		RELE_1 = OFF;
0x2AD4	0x2100    MOVS	R1, #0
0x2AD6	0xB249    SXTB	R1, R1
0x2AD8	0x4830    LDR	R0, [PC, #192]
0x2ADA	0x6001    STR	R1, [R0, #0]
;func.c, 204 :: 		RELE_2 = OFF;
0x2ADC	0x482C    LDR	R0, [PC, #176]
0x2ADE	0x6001    STR	R1, [R0, #0]
;func.c, 205 :: 		if(flag_t.output_voltage_status==SET)
0x2AE0	0x4826    LDR	R0, [PC, #152]
0x2AE2	0x7800    LDRB	R0, [R0, #0]
0x2AE4	0x2801    CMP	R0, #1
0x2AE6	0xD112    BNE	L_ControlOut36
;func.c, 207 :: 		if((rele_bypass_count++)>=DELAY_SWITCH)
0x2AE8	0x4A30    LDR	R2, [PC, #192]
0x2AEA	0x7811    LDRB	R1, [R2, #0]
0x2AEC	0x4610    MOV	R0, R2
0x2AEE	0x7800    LDRB	R0, [R0, #0]
0x2AF0	0x1C40    ADDS	R0, R0, #1
0x2AF2	0x7010    STRB	R0, [R2, #0]
0x2AF4	0x2907    CMP	R1, #7
0x2AF6	0xD30A    BCC	L_ControlOut37
;func.c, 209 :: 		rele_bypass_count = 0;
0x2AF8	0x2100    MOVS	R1, #0
0x2AFA	0x482C    LDR	R0, [PC, #176]
0x2AFC	0x7001    STRB	R1, [R0, #0]
;func.c, 210 :: 		RELE_BYPASS = ON;
0x2AFE	0x2101    MOVS	R1, #1
0x2B00	0xB249    SXTB	R1, R1
0x2B02	0x4824    LDR	R0, [PC, #144]
0x2B04	0x6001    STR	R1, [R0, #0]
;func.c, 211 :: 		OutVoltage = InVoltageValue;
0x2B06	0x4826    LDR	R0, [PC, #152]
0x2B08	0x6801    LDR	R1, [R0, #0]
0x2B0A	0x4820    LDR	R0, [PC, #128]
0x2B0C	0x6001    STR	R1, [R0, #0]
;func.c, 212 :: 		}
L_ControlOut37:
;func.c, 214 :: 		}
L_ControlOut36:
;func.c, 217 :: 		break;
0x2B0E	0xE012    B	L_ControlOut27
;func.c, 218 :: 		}
L_ControlOut26:
0x2B10	0x4827    LDR	R0, [PC, #156]
0x2B12	0x7800    LDRB	R0, [R0, #0]
0x2B14	0x2807    CMP	R0, #7
0x2B16	0xF43FAF8F  BEQ	L_ControlOut28
0x2B1A	0x4825    LDR	R0, [PC, #148]
0x2B1C	0x7800    LDRB	R0, [R0, #0]
0x2B1E	0x2806    CMP	R0, #6
0x2B20	0xF43FAFB3  BEQ	L_ControlOut31
0x2B24	0x4822    LDR	R0, [PC, #136]
0x2B26	0x7800    LDRB	R0, [R0, #0]
0x2B28	0x2804    CMP	R0, #4
0x2B2A	0xF43FAFAE  BEQ	L_ControlOut32
0x2B2E	0x4820    LDR	R0, [PC, #128]
0x2B30	0x7800    LDRB	R0, [R0, #0]
0x2B32	0x2800    CMP	R0, #0
0x2B34	0xD0CE    BEQ	L_ControlOut35
L_ControlOut27:
;func.c, 219 :: 		}
0x2B36	0xE01C    B	L_ControlOut38
;func.c, 139 :: 		if(flag_t.start_button_status==SET&&flag_t.current_status==SET&&flag_t.short_current_status==SET&&
L__ControlOut63:
L__ControlOut62:
L__ControlOut61:
;func.c, 140 :: 		flag_t.current_global_status==SET)
L__ControlOut60:
;func.c, 222 :: 		main_count = 0;
0x2B38	0x2100    MOVS	R1, #0
0x2B3A	0x4811    LDR	R0, [PC, #68]
0x2B3C	0x8001    STRH	R1, [R0, #0]
;func.c, 223 :: 		main_count1 = 0;
0x2B3E	0x2100    MOVS	R1, #0
0x2B40	0x4810    LDR	R0, [PC, #64]
0x2B42	0x8001    STRH	R1, [R0, #0]
;func.c, 224 :: 		rele_1_count = 0;
0x2B44	0x2100    MOVS	R1, #0
0x2B46	0x4814    LDR	R0, [PC, #80]
0x2B48	0x7001    STRB	R1, [R0, #0]
;func.c, 225 :: 		rele_2_count = 0;
0x2B4A	0x2100    MOVS	R1, #0
0x2B4C	0x4816    LDR	R0, [PC, #88]
0x2B4E	0x7001    STRB	R1, [R0, #0]
;func.c, 226 :: 		rele_bypass_count = 0;
0x2B50	0x2100    MOVS	R1, #0
0x2B52	0x4816    LDR	R0, [PC, #88]
0x2B54	0x7001    STRB	R1, [R0, #0]
;func.c, 227 :: 		RELE_1 = OFF;
0x2B56	0x2100    MOVS	R1, #0
0x2B58	0xB249    SXTB	R1, R1
0x2B5A	0x4810    LDR	R0, [PC, #64]
0x2B5C	0x6001    STR	R1, [R0, #0]
;func.c, 228 :: 		RELE_2 = OFF;
0x2B5E	0x480C    LDR	R0, [PC, #48]
0x2B60	0x6001    STR	R1, [R0, #0]
;func.c, 229 :: 		RELE_BYPASS = OFF;
0x2B62	0x480C    LDR	R0, [PC, #48]
0x2B64	0x6001    STR	R1, [R0, #0]
;func.c, 230 :: 		RELE_OUT_MAIN = OFF;
0x2B66	0x4808    LDR	R0, [PC, #32]
0x2B68	0x6001    STR	R1, [R0, #0]
;func.c, 231 :: 		OutVoltage = 0;
0x2B6A	0xF04F0100  MOV	R1, #0
0x2B6E	0x4807    LDR	R0, [PC, #28]
0x2B70	0x6001    STR	R1, [R0, #0]
;func.c, 232 :: 		}
L_ControlOut38:
;func.c, 234 :: 		}
L_end_ControlOut:
0x2B72	0xF8DDE000  LDR	LR, [SP, #0]
0x2B76	0xB001    ADD	SP, SP, #4
0x2B78	0x4770    BX	LR
0x2B7A	0xBF00    NOP
0x2B7C	0x00622000  	_flag_t+8
0x2B80	0x00342000  	ControlOut_main_count_L0+0
0x2B84	0x00362000  	ControlOut_main_count1_L0+0
0x2B88	0x02B04241  	RELE_OUT_MAIN+0
0x2B8C	0x00702000  	_OutVoltage+0
0x2B90	0x02B04240  	RELE_2+0
0x2B94	0x82984240  	RELE_BYPASS+0
0x2B98	0x00332000  	ControlOut_rele_1_count_L0+0
0x2B9C	0x02AC4240  	RELE_1+0
0x2BA0	0x00002000  	_InVoltageValue+0
0x2BA4	0x000040B0  	#1085276160
0x2BA8	0x00382000  	ControlOut_rele_2_count_L0+0
0x2BAC	0x00392000  	ControlOut_rele_bypass_count_L0+0
0x2BB0	0x000C2000  	_status+0
; end of _ControlOut
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x2224	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x2226	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x2228	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x222C	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x222E	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x2232	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x2236	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x223A	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x223E	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x2240	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x2242	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x2246	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x224A	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x224C	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x224E	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x2250	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x2254	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x2258	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x225A	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x225C	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x2260	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x2264	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x2266	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x2268	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x226A	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x226C	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x2270	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x2272	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x2274	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x2276	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x2278	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x227A	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x227C	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x227E	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x2280	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x2282	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x2284	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x2288	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x228A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x228C	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x228E	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x2292	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x2296	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x229A	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x229C	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x229E	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x22A0	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x22A2	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x22A6	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x22AA	0xB001    ADD	SP, SP, #4
0x22AC	0x4770    BX	LR
; end of __Mul_FP
_displayData:
;func.c, 4 :: 		void displayData()
0x2624	0xB081    SUB	SP, SP, #4
0x2626	0xF8CDE000  STR	LR, [SP, #0]
;func.c, 10 :: 		if(flag_t.change_button_status==SET)
0x262A	0x481F    LDR	R0, [PC, #124]
0x262C	0x7800    LDRB	R0, [R0, #0]
0x262E	0x2801    CMP	R0, #1
0x2630	0xD10A    BNE	L_displayData0
;func.c, 12 :: 		if(in_reset==RESET)
0x2632	0x481E    LDR	R0, [PC, #120]
0x2634	0x7800    LDRB	R0, [R0, #0]
0x2636	0xB938    CBNZ	R0, L_displayData1
;func.c, 14 :: 		in_reset=SET;
0x2638	0x2101    MOVS	R1, #1
0x263A	0x481C    LDR	R0, [PC, #112]
0x263C	0x7001    STRB	R1, [R0, #0]
;func.c, 16 :: 		state^=1;
0x263E	0x491C    LDR	R1, [PC, #112]
0x2640	0x7808    LDRB	R0, [R1, #0]
0x2642	0xF0800001  EOR	R0, R0, #1
0x2646	0x7008    STRB	R0, [R1, #0]
;func.c, 18 :: 		}
L_displayData1:
;func.c, 19 :: 		}
L_displayData0:
;func.c, 20 :: 		if(flag_t.change_button_status==RESET)
0x2648	0x4817    LDR	R0, [PC, #92]
0x264A	0x7800    LDRB	R0, [R0, #0]
0x264C	0xB910    CBNZ	R0, L_displayData2
;func.c, 22 :: 		in_reset = RESET;
0x264E	0x2100    MOVS	R1, #0
0x2650	0x4816    LDR	R0, [PC, #88]
0x2652	0x7001    STRB	R1, [R0, #0]
;func.c, 23 :: 		}
L_displayData2:
;func.c, 24 :: 		if((count_data++)>=100)
0x2654	0x4A17    LDR	R2, [PC, #92]
0x2656	0x8811    LDRH	R1, [R2, #0]
0x2658	0x4610    MOV	R0, R2
0x265A	0x8800    LDRH	R0, [R0, #0]
0x265C	0x1C40    ADDS	R0, R0, #1
0x265E	0x8010    STRH	R0, [R2, #0]
0x2660	0x2964    CMP	R1, #100
0x2662	0xD31D    BCC	L_displayData3
;func.c, 26 :: 		count_data = 0;
0x2664	0x2100    MOVS	R1, #0
0x2666	0x4813    LDR	R0, [PC, #76]
0x2668	0x8001    STRH	R1, [R0, #0]
;func.c, 27 :: 		LCD_bar_status();
0x266A	0xF7FFFE21  BL	_LCD_bar_status+0
;func.c, 28 :: 		switch(state)
0x266E	0xE00F    B	L_displayData4
;func.c, 30 :: 		case 0: Out_data_to_LCD('H','B',InVoltageValue);
L_displayData6:
0x2670	0x4811    LDR	R0, [PC, #68]
0x2672	0x6800    LDR	R0, [R0, #0]
0x2674	0x4602    MOV	R2, R0
0x2676	0x2142    MOVS	R1, #66
0x2678	0x2048    MOVS	R0, #72
0x267A	0xF7FFFD07  BL	_Out_data_to_LCD+0
;func.c, 31 :: 		break;
0x267E	0xE00F    B	L_displayData5
;func.c, 32 :: 		case 1: Out_data_to_LCD('T','A',CurrentValue);
L_displayData7:
0x2680	0x480E    LDR	R0, [PC, #56]
0x2682	0x6800    LDR	R0, [R0, #0]
0x2684	0x4602    MOV	R2, R0
0x2686	0x2141    MOVS	R1, #65
0x2688	0x2054    MOVS	R0, #84
0x268A	0xF7FFFCFF  BL	_Out_data_to_LCD+0
;func.c, 33 :: 		break;
0x268E	0xE007    B	L_displayData5
;func.c, 34 :: 		}
L_displayData4:
0x2690	0x4807    LDR	R0, [PC, #28]
0x2692	0x7800    LDRB	R0, [R0, #0]
0x2694	0x2800    CMP	R0, #0
0x2696	0xD0EB    BEQ	L_displayData6
0x2698	0x4805    LDR	R0, [PC, #20]
0x269A	0x7800    LDRB	R0, [R0, #0]
0x269C	0x2801    CMP	R0, #1
0x269E	0xD0EF    BEQ	L_displayData7
L_displayData5:
;func.c, 35 :: 		}
L_displayData3:
;func.c, 36 :: 		}
L_end_displayData:
0x26A0	0xF8DDE000  LDR	LR, [SP, #0]
0x26A4	0xB001    ADD	SP, SP, #4
0x26A6	0x4770    BX	LR
0x26A8	0x006D2000  	_flag_t+19
0x26AC	0x00522000  	displayData_in_reset_L0+0
0x26B0	0x00532000  	displayData_state_L0+0
0x26B4	0x00542000  	displayData_count_data_L0+0
0x26B8	0x00002000  	_InVoltageValue+0
0x26BC	0x00042000  	_CurrentValue+0
; end of _displayData
_LCD_bar_status:
;lcd_my_func.c, 73 :: 		void LCD_bar_status()
0x22B0	0xB081    SUB	SP, SP, #4
0x22B2	0xF8CDE000  STR	LR, [SP, #0]
;lcd_my_func.c, 75 :: 		if(RELE_1)BAR0_ON;
0x22B6	0x4929    LDR	R1, [PC, #164]
0x22B8	0x6808    LDR	R0, [R1, #0]
0x22BA	0xB120    CBZ	R0, L_LCD_bar_status859
0x22BC	0x4928    LDR	R1, [PC, #160]
0x22BE	0x7808    LDRB	R0, [R1, #0]
0x22C0	0xF0400008  ORR	R0, R0, #8
0x22C4	0x7008    STRB	R0, [R1, #0]
L_LCD_bar_status859:
;lcd_my_func.c, 76 :: 		if(!RELE_1)BAR0_OFF;
0x22C6	0x4925    LDR	R1, [PC, #148]
0x22C8	0x6808    LDR	R0, [R1, #0]
0x22CA	0xB938    CBNZ	R0, L_LCD_bar_status860
0x22CC	0x4A24    LDR	R2, [PC, #144]
0x22CE	0x7811    LDRB	R1, [R2, #0]
0x22D0	0xF64F70F7  MOVW	R0, #65527
0x22D4	0xB200    SXTH	R0, R0
0x22D6	0xEA010000  AND	R0, R1, R0, LSL #0
0x22DA	0x7010    STRB	R0, [R2, #0]
L_LCD_bar_status860:
;lcd_my_func.c, 78 :: 		if(RELE_2)BAR1_ON;
0x22DC	0x4921    LDR	R1, [PC, #132]
0x22DE	0x6808    LDR	R0, [R1, #0]
0x22E0	0xB120    CBZ	R0, L_LCD_bar_status861
0x22E2	0x4921    LDR	R1, [PC, #132]
0x22E4	0x7808    LDRB	R0, [R1, #0]
0x22E6	0xF0400008  ORR	R0, R0, #8
0x22EA	0x7008    STRB	R0, [R1, #0]
L_LCD_bar_status861:
;lcd_my_func.c, 79 :: 		if(!RELE_2)BAR1_OFF;
0x22EC	0x491D    LDR	R1, [PC, #116]
0x22EE	0x6808    LDR	R0, [R1, #0]
0x22F0	0xB938    CBNZ	R0, L_LCD_bar_status862
0x22F2	0x4A1D    LDR	R2, [PC, #116]
0x22F4	0x7811    LDRB	R1, [R2, #0]
0x22F6	0xF64F70F7  MOVW	R0, #65527
0x22FA	0xB200    SXTH	R0, R0
0x22FC	0xEA010000  AND	R0, R1, R0, LSL #0
0x2300	0x7010    STRB	R0, [R2, #0]
L_LCD_bar_status862:
;lcd_my_func.c, 81 :: 		if(RELE_BYPASS)BAR2_ON;
0x2302	0x491A    LDR	R1, [PC, #104]
0x2304	0x6808    LDR	R0, [R1, #0]
0x2306	0xB120    CBZ	R0, L_LCD_bar_status863
0x2308	0x4915    LDR	R1, [PC, #84]
0x230A	0x7808    LDRB	R0, [R1, #0]
0x230C	0xF0400002  ORR	R0, R0, #2
0x2310	0x7008    STRB	R0, [R1, #0]
L_LCD_bar_status863:
;lcd_my_func.c, 82 :: 		if(!RELE_BYPASS)BAR2_OFF;
0x2312	0x4916    LDR	R1, [PC, #88]
0x2314	0x6808    LDR	R0, [R1, #0]
0x2316	0xB938    CBNZ	R0, L_LCD_bar_status864
0x2318	0x4A11    LDR	R2, [PC, #68]
0x231A	0x7811    LDRB	R1, [R2, #0]
0x231C	0xF64F70FD  MOVW	R0, #65533
0x2320	0xB200    SXTH	R0, R0
0x2322	0xEA010000  AND	R0, R1, R0, LSL #0
0x2326	0x7010    STRB	R0, [R2, #0]
L_LCD_bar_status864:
;lcd_my_func.c, 84 :: 		if(RELE_OUT_MAIN)BAR3_ON;
0x2328	0x4911    LDR	R1, [PC, #68]
0x232A	0x6808    LDR	R0, [R1, #0]
0x232C	0xB120    CBZ	R0, L_LCD_bar_status865
0x232E	0x490E    LDR	R1, [PC, #56]
0x2330	0x7808    LDRB	R0, [R1, #0]
0x2332	0xF0400002  ORR	R0, R0, #2
0x2336	0x7008    STRB	R0, [R1, #0]
L_LCD_bar_status865:
;lcd_my_func.c, 85 :: 		if(!RELE_OUT_MAIN)BAR3_OFF;
0x2338	0x490D    LDR	R1, [PC, #52]
0x233A	0x6808    LDR	R0, [R1, #0]
0x233C	0xB938    CBNZ	R0, L_LCD_bar_status866
0x233E	0x4A0A    LDR	R2, [PC, #40]
0x2340	0x7811    LDRB	R1, [R2, #0]
0x2342	0xF64F70FD  MOVW	R0, #65533
0x2346	0xB200    SXTH	R0, R0
0x2348	0xEA010000  AND	R0, R1, R0, LSL #0
0x234C	0x7010    STRB	R0, [R2, #0]
L_LCD_bar_status866:
;lcd_my_func.c, 86 :: 		LCD_bar();
0x234E	0xF7FEFD41  BL	_LCD_bar+0
;lcd_my_func.c, 87 :: 		}
L_end_LCD_bar_status:
0x2352	0xF8DDE000  LDR	LR, [SP, #0]
0x2356	0xB001    ADD	SP, SP, #4
0x2358	0x4770    BX	LR
0x235A	0xBF00    NOP
0x235C	0x02AC4240  	RELE_1+0
0x2360	0x000E2000  	_t_bar+1
0x2364	0x02B04240  	RELE_2+0
0x2368	0x000D2000  	_t_bar+0
0x236C	0x82984240  	RELE_BYPASS+0
0x2370	0x02B04241  	RELE_OUT_MAIN+0
; end of _LCD_bar_status
_LCD_bar:
;glass_lcd.c, 131 :: 		void LCD_bar()
;glass_lcd.c, 133 :: 		LCD_RAM_COM2 &= 0xFFFF5FFF;
0x0DD4	0x4810    LDR	R0, [PC, #64]
0x0DD6	0x6801    LDR	R1, [R0, #0]
0x0DD8	0xF46F4020  MVN	R0, #40960
0x0DDC	0x4001    ANDS	R1, R0
0x0DDE	0x480E    LDR	R0, [PC, #56]
0x0DE0	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 134 :: 		LCD_RAM_COM3 &= 0xFFFF5FFF;
0x0DE2	0x480E    LDR	R0, [PC, #56]
0x0DE4	0x6801    LDR	R1, [R0, #0]
0x0DE6	0xF46F4020  MVN	R0, #40960
0x0DEA	0x4001    ANDS	R1, R0
0x0DEC	0x480B    LDR	R0, [PC, #44]
0x0DEE	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 136 :: 		LCD_RAM_COM2 |= ((unsigned long)((unsigned long)t_bar[0] << 0x0C));
0x0DF0	0x480B    LDR	R0, [PC, #44]
0x0DF2	0x7800    LDRB	R0, [R0, #0]
0x0DF4	0x0301    LSLS	R1, R0, #12
0x0DF6	0x4808    LDR	R0, [PC, #32]
0x0DF8	0x6800    LDR	R0, [R0, #0]
0x0DFA	0xEA400101  ORR	R1, R0, R1, LSL #0
0x0DFE	0x4806    LDR	R0, [PC, #24]
0x0E00	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 138 :: 		LCD_RAM_COM3 |= ((unsigned long)((unsigned long)t_bar[1] << 0x0C));
0x0E02	0x4808    LDR	R0, [PC, #32]
0x0E04	0x7800    LDRB	R0, [R0, #0]
0x0E06	0x0301    LSLS	R1, R0, #12
0x0E08	0x4804    LDR	R0, [PC, #16]
0x0E0A	0x6800    LDR	R0, [R0, #0]
0x0E0C	0xEA400101  ORR	R1, R0, R1, LSL #0
0x0E10	0x4802    LDR	R0, [PC, #8]
0x0E12	0x6001    STR	R1, [R0, #0]
;glass_lcd.c, 139 :: 		}
L_end_LCD_bar:
0x0E14	0x4770    BX	LR
0x0E16	0xBF00    NOP
0x0E18	0x24244000  	LCD_RAM_COM2+0
0x0E1C	0x242C4000  	LCD_RAM_COM3+0
0x0E20	0x000D2000  	_t_bar+0
0x0E24	0x000E2000  	_t_bar+1
; end of _LCD_bar
_Out_data_to_LCD:
;lcd_my_func.c, 6 :: 		void Out_data_to_LCD(char str_start,char str_end,float process_value)
; process_value start address is: 8 (R2)
; str_end start address is: 4 (R1)
; str_start start address is: 0 (R0)
0x208C	0xB082    SUB	SP, SP, #8
0x208E	0xF8CDE000  STR	LR, [SP, #0]
0x2092	0xFA5FFB80  UXTB	R11, R0
0x2096	0xFA5FFA81  UXTB	R10, R1
; process_value end address is: 8 (R2)
; str_end end address is: 4 (R1)
; str_start end address is: 0 (R0)
; str_start start address is: 44 (R11)
; str_end start address is: 40 (R10)
; process_value start address is: 8 (R2)
;lcd_my_func.c, 8 :: 		float p1=0,p2=0;
0x209A	0xF04F0300  MOV	R3, #0
0x209E	0x9301    STR	R3, [SP, #4]
;lcd_my_func.c, 9 :: 		unsigned int convert_char = 0,temp = 0,temp1 = 0;
;lcd_my_func.c, 11 :: 		p1 = modf(process_value, &p2);// p1 = 0.25, p2 = 6.00
0x20A0	0xAB01    ADD	R3, SP, #4
0x20A2	0x4619    MOV	R1, R3
0x20A4	0x4610    MOV	R0, R2
; process_value end address is: 8 (R2)
0x20A6	0xF7FEFB03  BL	_modf+0
;lcd_my_func.c, 12 :: 		convert_char = (unsigned int)p2;
0x20AA	0x9801    LDR	R0, [SP, #4]
0x20AC	0xF7FEFB5C  BL	__FloatToUnsignedIntegral+0
0x20B0	0xB280    UXTH	R0, R0
; convert_char start address is: 32 (R8)
0x20B2	0xFA1FF880  UXTH	R8, R0
;lcd_my_func.c, 14 :: 		strDisp[0] = str_start;
0x20B6	0x4B35    LDR	R3, [PC, #212]
0x20B8	0xF8A3B000  STRH	R11, [R3, #0]
; str_start end address is: 44 (R11)
;lcd_my_func.c, 15 :: 		LCD_GLASS_WriteChar(&strDisp[0],false,false,1);
0x20BC	0x2301    MOVS	R3, #1
0x20BE	0x2200    MOVS	R2, #0
0x20C0	0x2100    MOVS	R1, #0
0x20C2	0x4832    LDR	R0, [PC, #200]
0x20C4	0xF7FEFB74  BL	_LCD_GLASS_WriteChar+0
;lcd_my_func.c, 17 :: 		strDisp[1]= ' ';
0x20C8	0x2420    MOVS	R4, #32
0x20CA	0x4B31    LDR	R3, [PC, #196]
0x20CC	0x801C    STRH	R4, [R3, #0]
;lcd_my_func.c, 18 :: 		LCD_GLASS_WriteChar(&strDisp[1],false,false,2);
0x20CE	0x2302    MOVS	R3, #2
0x20D0	0x2200    MOVS	R2, #0
0x20D2	0x2100    MOVS	R1, #0
0x20D4	0x482E    LDR	R0, [PC, #184]
0x20D6	0xF7FEFB6B  BL	_LCD_GLASS_WriteChar+0
;lcd_my_func.c, 20 :: 		temp =  (convert_char/100);
0x20DA	0x2364    MOVS	R3, #100
0x20DC	0xFBB8F3F3  UDIV	R3, R8, R3
0x20E0	0xB29B    UXTH	R3, R3
; temp start address is: 36 (R9)
0x20E2	0xFA1FF983  UXTH	R9, R3
;lcd_my_func.c, 21 :: 		strDisp[2]= temp +48;
0x20E6	0xF2030430  ADDW	R4, R3, #48
0x20EA	0xB2A4    UXTH	R4, R4
0x20EC	0x4B29    LDR	R3, [PC, #164]
0x20EE	0x801C    STRH	R4, [R3, #0]
;lcd_my_func.c, 22 :: 		if(strDisp[2]=='0')
0x20F0	0x2C30    CMP	R4, #48
0x20F2	0xD102    BNE	L_Out_data_to_LCD855
;lcd_my_func.c, 24 :: 		strDisp[2]=' ';
0x20F4	0x2420    MOVS	R4, #32
0x20F6	0x4B27    LDR	R3, [PC, #156]
0x20F8	0x801C    STRH	R4, [R3, #0]
;lcd_my_func.c, 25 :: 		}
L_Out_data_to_LCD855:
;lcd_my_func.c, 26 :: 		LCD_GLASS_WriteChar(&strDisp[2],false,false,3);
0x20FA	0x2303    MOVS	R3, #3
0x20FC	0x2200    MOVS	R2, #0
0x20FE	0x2100    MOVS	R1, #0
0x2100	0x4824    LDR	R0, [PC, #144]
0x2102	0xF7FEFB55  BL	_LCD_GLASS_WriteChar+0
;lcd_my_func.c, 28 :: 		temp1 = (convert_char-(temp*100));
0x2106	0x2364    MOVS	R3, #100
0x2108	0xFB09F303  MUL	R3, R9, R3
0x210C	0xB29B    UXTH	R3, R3
; temp end address is: 36 (R9)
0x210E	0xEBA80403  SUB	R4, R8, R3, LSL #0
0x2112	0xB2A4    UXTH	R4, R4
; convert_char end address is: 32 (R8)
; temp1 start address is: 32 (R8)
0x2114	0xFA1FF884  UXTH	R8, R4
;lcd_my_func.c, 29 :: 		strDisp[3]= ((temp1/10) + 48);
0x2118	0x230A    MOVS	R3, #10
0x211A	0xFBB4F3F3  UDIV	R3, R4, R3
0x211E	0xB29B    UXTH	R3, R3
0x2120	0xF2030430  ADDW	R4, R3, #48
0x2124	0x4B1C    LDR	R3, [PC, #112]
0x2126	0x801C    STRH	R4, [R3, #0]
;lcd_my_func.c, 30 :: 		if((strDisp[2]=='0')&&(strDisp[3]=='0'))
0x2128	0x4B1A    LDR	R3, [PC, #104]
0x212A	0x881B    LDRH	R3, [R3, #0]
0x212C	0x2B30    CMP	R3, #48
0x212E	0xD106    BNE	L__Out_data_to_LCD881
0x2130	0x4B19    LDR	R3, [PC, #100]
0x2132	0x881B    LDRH	R3, [R3, #0]
0x2134	0x2B30    CMP	R3, #48
0x2136	0xD102    BNE	L__Out_data_to_LCD880
L__Out_data_to_LCD879:
;lcd_my_func.c, 32 :: 		strDisp[3]=' ';
0x2138	0x2420    MOVS	R4, #32
0x213A	0x4B17    LDR	R3, [PC, #92]
0x213C	0x801C    STRH	R4, [R3, #0]
;lcd_my_func.c, 30 :: 		if((strDisp[2]=='0')&&(strDisp[3]=='0'))
L__Out_data_to_LCD881:
L__Out_data_to_LCD880:
;lcd_my_func.c, 34 :: 		LCD_GLASS_WriteChar(&strDisp[3],false,false,4);
0x213E	0x2304    MOVS	R3, #4
0x2140	0x2200    MOVS	R2, #0
0x2142	0x2100    MOVS	R1, #0
0x2144	0x4814    LDR	R0, [PC, #80]
0x2146	0xF7FEFB33  BL	_LCD_GLASS_WriteChar+0
;lcd_my_func.c, 36 :: 		strDisp[4]= ((temp1 - ((temp1/10)*10))+48);
0x214A	0x230A    MOVS	R3, #10
0x214C	0xFBB8F4F3  UDIV	R4, R8, R3
0x2150	0xB2A4    UXTH	R4, R4
0x2152	0x230A    MOVS	R3, #10
0x2154	0x4363    MULS	R3, R4, R3
0x2156	0xB29B    UXTH	R3, R3
0x2158	0xEBA80303  SUB	R3, R8, R3, LSL #0
0x215C	0xB29B    UXTH	R3, R3
; temp1 end address is: 32 (R8)
0x215E	0xF2030430  ADDW	R4, R3, #48
0x2162	0x4B0E    LDR	R3, [PC, #56]
0x2164	0x801C    STRH	R4, [R3, #0]
;lcd_my_func.c, 37 :: 		LCD_GLASS_WriteChar(&strDisp[4],false,false,5);
0x2166	0x2305    MOVS	R3, #5
0x2168	0x2200    MOVS	R2, #0
0x216A	0x2100    MOVS	R1, #0
0x216C	0x480B    LDR	R0, [PC, #44]
0x216E	0xF7FEFB1F  BL	_LCD_GLASS_WriteChar+0
;lcd_my_func.c, 39 :: 		strDisp[5]= str_end;
0x2172	0x4B0B    LDR	R3, [PC, #44]
0x2174	0xF8A3A000  STRH	R10, [R3, #0]
; str_end end address is: 40 (R10)
;lcd_my_func.c, 40 :: 		LCD_GLASS_WriteChar(&strDisp[5],false,false,6);
0x2178	0x2306    MOVS	R3, #6
0x217A	0x2200    MOVS	R2, #0
0x217C	0x2100    MOVS	R1, #0
0x217E	0x4808    LDR	R0, [PC, #32]
0x2180	0xF7FEFB16  BL	_LCD_GLASS_WriteChar+0
;lcd_my_func.c, 41 :: 		}
L_end_Out_data_to_LCD:
0x2184	0xF8DDE000  LDR	LR, [SP, #0]
0x2188	0xB002    ADD	SP, SP, #8
0x218A	0x4770    BX	LR
0x218C	0x00742000  	_strDisp+0
0x2190	0x00762000  	_strDisp+2
0x2194	0x00782000  	_strDisp+4
0x2198	0x007A2000  	_strDisp+6
0x219C	0x007C2000  	_strDisp+8
0x21A0	0x007E2000  	_strDisp+10
; end of _Out_data_to_LCD
_modf:
;__Lib_CMath.c, 130 :: 		
; iptr start address is: 4 (R1)
0x06B0	0xB082    SUB	SP, SP, #8
0x06B2	0xF8CDE000  STR	LR, [SP, #0]
0x06B6	0x9001    STR	R0, [SP, #4]
0x06B8	0x4689    MOV	R9, R1
; iptr end address is: 4 (R1)
; iptr start address is: 36 (R9)
;__Lib_CMath.c, 134 :: 		
0x06BA	0x9A01    LDR	R2, [SP, #4]
0x06BC	0xF04F0000  MOV	R0, #0
0x06C0	0xF7FFFF32  BL	__Compare_FP+0
0x06C4	0xF2400000  MOVW	R0, #0
0x06C8	0xDC00    BGT	L__modf94
0x06CA	0x2001    MOVS	R0, #1
L__modf94:
0x06CC	0xB158    CBZ	R0, L_modf20
0x06CE	0x9A01    LDR	R2, [SP, #4]
0x06D0	0xF04F507E  MOV	R0, #1065353216
0x06D4	0xF7FFFF28  BL	__Compare_FP+0
0x06D8	0xF2400000  MOVW	R0, #0
0x06DC	0xDD00    BLE	L__modf95
0x06DE	0x2001    MOVS	R0, #1
L__modf95:
0x06E0	0xB108    CBZ	R0, L_modf20
0x06E2	0x2201    MOVS	R2, #1
0x06E4	0xE000    B	L_modf19
L_modf20:
0x06E6	0x2200    MOVS	R2, #0
L_modf19:
; bbb start address is: 0 (R0)
0x06E8	0xB2D0    UXTB	R0, R2
;__Lib_CMath.c, 135 :: 		
0x06EA	0xB9A8    CBNZ	R0, L__modf69
; bbb end address is: 0 (R0)
0x06EC	0x9A01    LDR	R2, [SP, #4]
0x06EE	0x481D    LDR	R0, [PC, #116]
0x06F0	0xF7FFFF1A  BL	__Compare_FP+0
0x06F4	0xF2400000  MOVW	R0, #0
0x06F8	0xDA00    BGE	L__modf96
0x06FA	0x2001    MOVS	R0, #1
L__modf96:
0x06FC	0xB158    CBZ	R0, L__modf68
0x06FE	0x9A01    LDR	R2, [SP, #4]
0x0700	0xF04F0000  MOV	R0, #0
0x0704	0xF7FFFF10  BL	__Compare_FP+0
0x0708	0xF2400000  MOVW	R0, #0
0x070C	0xDB00    BLT	L__modf97
0x070E	0x2001    MOVS	R0, #1
L__modf97:
0x0710	0x2800    CMP	R0, #0
0x0712	0xD000    BEQ	L__modf67
0x0714	0xE000    B	L__modf65
L__modf68:
L__modf67:
0x0716	0xE005    B	L_modf25
L__modf65:
L__modf69:
;__Lib_CMath.c, 136 :: 		
0x0718	0xF04F0200  MOV	R2, #0
0x071C	0xF8C92000  STR	R2, [R9, #0]
; iptr end address is: 36 (R9)
;__Lib_CMath.c, 137 :: 		
0x0720	0x9801    LDR	R0, [SP, #4]
0x0722	0xE01A    B	L_end_modf
;__Lib_CMath.c, 138 :: 		
L_modf25:
;__Lib_CMath.c, 140 :: 		
; iptr start address is: 36 (R9)
0x0724	0xAA01    ADD	R2, SP, #4
0x0726	0x6812    LDR	R2, [R2, #0]
0x0728	0x0DD2    LSRS	R2, R2, #23
0x072A	0xF00202FF  AND	R2, R2, #255
0x072E	0x3A7F    SUBS	R2, #127
;__Lib_CMath.c, 141 :: 		
0x0730	0xB292    UXTH	R2, R2
0x0732	0x2A18    CMP	R2, #24
0x0734	0xD905    BLS	L_modf26
;__Lib_CMath.c, 142 :: 		
0x0736	0x9A01    LDR	R2, [SP, #4]
0x0738	0xF8C92000  STR	R2, [R9, #0]
; iptr end address is: 36 (R9)
;__Lib_CMath.c, 143 :: 		
0x073C	0xF04F0000  MOV	R0, #0
0x0740	0xE00B    B	L_end_modf
;__Lib_CMath.c, 144 :: 		
L_modf26:
;__Lib_CMath.c, 145 :: 		
; iptr start address is: 36 (R9)
0x0742	0x9801    LDR	R0, [SP, #4]
0x0744	0xF7FFFCE4  BL	__FloatToSignedIntegral+0
0x0748	0xF7FFFE4E  BL	__SignedIntegralToFloat+0
0x074C	0xF8C90000  STR	R0, [R9, #0]
;__Lib_CMath.c, 147 :: 		
0x0750	0xF8D92000  LDR	R2, [R9, #0]
; iptr end address is: 36 (R9)
0x0754	0x9801    LDR	R0, [SP, #4]
0x0756	0xF7FFFF1B  BL	__Sub_FP+0
;__Lib_CMath.c, 148 :: 		
L_end_modf:
0x075A	0xF8DDE000  LDR	LR, [SP, #0]
0x075E	0xB002    ADD	SP, SP, #8
0x0760	0x4770    BX	LR
0x0762	0xBF00    NOP
0x0764	0x0000BF80  	#-1082130432
; end of _modf
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x0110	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x0112	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x0114	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x0118	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x011C	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x011E	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x0120	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x0124	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x0126	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x012A	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x012C	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x0130	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x0134	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x0136	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x0138	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x013A	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x013C	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x013E	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x0140	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x0142	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x0146	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x0148	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x014A	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x014E	0xB001    ADD	SP, SP, #4
0x0150	0x4770    BX	LR
; end of __FloatToSignedIntegral
__SignedIntegralToFloat:
;__Lib_MathDouble.c, 186 :: 		
0x03E8	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 188 :: 		
0x03EA	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 189 :: 		
0x03EC	0xBF08    IT	EQ
;__Lib_MathDouble.c, 191 :: 		
0x03EE	0xE019    BEQ	__me_lab_end
;__Lib_MathDouble.c, 193 :: 		
0x03F0	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 195 :: 		
0x03F2	0xBF54    ITE	PL
;__Lib_MathDouble.c, 196 :: 		
0x03F4	0x4601    MOVPL	R1, R0
;__Lib_MathDouble.c, 197 :: 		
0x03F6	0xF1D00100  RSBSMI	R1, R0, #0
;__Lib_MathDouble.c, 199 :: 		
0x03FA	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 201 :: 		
0x03FE	0xD402    BMI	__me_lab1
;__Lib_MathDouble.c, 202 :: 		
__me_loop:
0x0400	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 203 :: 		
0x0402	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 204 :: 		
0x0404	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 206 :: 		
__me_lab1:
0x0406	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 207 :: 		
0x0408	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 208 :: 		
0x040A	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 209 :: 		
0x040C	0x0049    LSLCC	R1, R1, #1
;__Lib_MathDouble.c, 211 :: 		
0x040E	0xEA4F2151  LSR	R1, R1, #9
;__Lib_MathDouble.c, 212 :: 		
0x0412	0xEA4151C2  ORR	R1, R1, R2, LSL #23
;__Lib_MathDouble.c, 213 :: 		
0x0416	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 214 :: 		
0x0418	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 215 :: 		
0x041A	0xF0414000  ORRMI	R0, R1, #-2147483648
;__Lib_MathDouble.c, 216 :: 		
0x041E	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 218 :: 		
0x0420	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 219 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 221 :: 		
L_end__SignedIntegralToFloat:
0x0424	0xB001    ADD	SP, SP, #4
0x0426	0x4770    BX	LR
; end of __SignedIntegralToFloat
__FloatToUnsignedIntegral:
;__Lib_MathDouble.c, 45 :: 		
0x0768	0xB081    SUB	SP, SP, #4
0x076A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MathDouble.c, 47 :: 		
0x076E	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 49 :: 		
0x0770	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 50 :: 		
0x0772	0xD502    BPL	__me_label_pos
;__Lib_MathDouble.c, 51 :: 		
0x0774	0xF7FFFCCC  BL	__FloatToSignedIntegral+0
;__Lib_MathDouble.c, 52 :: 		
0x0778	0xE013    B	__me_endLab
;__Lib_MathDouble.c, 55 :: 		
__me_label_pos:
0x077A	0xEA4F0140  LSL	R1, R0, #1
;__Lib_MathDouble.c, 56 :: 		
0x077E	0xEA4F6111  LSR	R1, R1, #24
;__Lib_MathDouble.c, 58 :: 		
0x0782	0x397F    SUBS	R1, #127
;__Lib_MathDouble.c, 59 :: 		
0x0784	0xBF3C    ITT	CC
;__Lib_MathDouble.c, 60 :: 		
0x0786	0xF04F0000  MOVCC	R0, #0
;__Lib_MathDouble.c, 62 :: 		
0x078A	0xE00A    BCC	__me_endLab
;__Lib_MathDouble.c, 64 :: 		
0x078C	0xF1D1011F  RSBS	R1, R1, #31
;__Lib_MathDouble.c, 65 :: 		
0x0790	0xD305    BCC	__me_ovfl
;__Lib_MathDouble.c, 67 :: 		
0x0792	0xEA4F2000  LSL	R0, R0, #8
;__Lib_MathDouble.c, 68 :: 		
0x0796	0xF0404000  ORR	R0, R0, #-2147483648
;__Lib_MathDouble.c, 70 :: 		
0x079A	0x40C8    LSRS	R0, R1
;__Lib_MathDouble.c, 73 :: 		
0x079C	0xE001    B	__me_endLab
;__Lib_MathDouble.c, 75 :: 		
__me_ovfl:
0x079E	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 76 :: 		
0x07A0	0x1E40    SUBS	R0, R0, #1
;__Lib_MathDouble.c, 78 :: 		
__me_endLab:
;__Lib_MathDouble.c, 79 :: 		
0x07A2	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 82 :: 		
L_end__FloatToUnsignedIntegral:
0x07A6	0xF8DDE000  LDR	LR, [SP, #0]
0x07AA	0xB001    ADD	SP, SP, #4
0x07AC	0x4770    BX	LR
; end of __FloatToUnsignedIntegral
_LCD_GLASS_WriteChar:
;glass_lcd.c, 142 :: 		void LCD_GLASS_WriteChar(unsigned char *ch, unsigned char point, unsigned char column, unsigned char position)
; position start address is: 12 (R3)
; column start address is: 8 (R2)
; point start address is: 4 (R1)
; ch start address is: 0 (R0)
0x07B0	0xB083    SUB	SP, SP, #12
0x07B2	0xF8CDE000  STR	LR, [SP, #0]
; position end address is: 12 (R3)
; column end address is: 8 (R2)
; point end address is: 4 (R1)
; ch end address is: 0 (R0)
; ch start address is: 0 (R0)
; point start address is: 4 (R1)
; column start address is: 8 (R2)
; position start address is: 12 (R3)
;glass_lcd.c, 147 :: 		LCD_Conv_Char_Seg(ch, point, column, digit);
0x07B6	0xAC02    ADD	R4, SP, #8
0x07B8	0xF88D3004  STRB	R3, [SP, #4]
0x07BC	0x4623    MOV	R3, R4
; column end address is: 8 (R2)
; point end address is: 4 (R1)
; ch end address is: 0 (R0)
0x07BE	0xF7FFFD59  BL	lcd_my_func_LCD_Conv_Char_Seg+0
; position end address is: 12 (R3)
0x07C2	0xF89D3004  LDRB	R3, [SP, #4]
0x07C6	0xB2D8    UXTB	R0, R3
;glass_lcd.c, 149 :: 		while(LCD_SRbits.UDR == true);
L_LCD_GLASS_WriteChar787:
; position start address is: 0 (R0)
0x07C8	0x4C9F    LDR	R4, [PC, #636]
0x07CA	0x6824    LDR	R4, [R4, #0]
0x07CC	0x2C00    CMP	R4, #0
0x07CE	0xD000    BEQ	L_LCD_GLASS_WriteChar788
0x07D0	0xE7FA    B	L_LCD_GLASS_WriteChar787
L_LCD_GLASS_WriteChar788:
;glass_lcd.c, 151 :: 		switch (position)
0x07D2	0xE26F    B	L_LCD_GLASS_WriteChar789
; position end address is: 0 (R0)
;glass_lcd.c, 154 :: 		case 1:
L_LCD_GLASS_WriteChar791:
;glass_lcd.c, 156 :: 		LCD_RAM_COM0 &= 0xCFFFFFFC;
0x07D4	0x4C9D    LDR	R4, [PC, #628]
0x07D6	0x6825    LDR	R5, [R4, #0]
0x07D8	0x4C9D    LDR	R4, [PC, #628]
0x07DA	0x4025    ANDS	R5, R4
0x07DC	0x4C9B    LDR	R4, [PC, #620]
0x07DE	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 157 :: 		LCD_RAM_COM1 &= 0xCFFFFFFC;
0x07E0	0x4C9C    LDR	R4, [PC, #624]
0x07E2	0x6825    LDR	R5, [R4, #0]
0x07E4	0x4C9A    LDR	R4, [PC, #616]
0x07E6	0x4025    ANDS	R5, R4
0x07E8	0x4C9A    LDR	R4, [PC, #616]
0x07EA	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 158 :: 		LCD_RAM_COM2 &= 0xCFFFFFFC;
0x07EC	0x4C9A    LDR	R4, [PC, #616]
0x07EE	0x6825    LDR	R5, [R4, #0]
0x07F0	0x4C97    LDR	R4, [PC, #604]
0x07F2	0x4025    ANDS	R5, R4
0x07F4	0x4C98    LDR	R4, [PC, #608]
0x07F6	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 159 :: 		LCD_RAM_COM3 &= 0xCFFFFFFC;
0x07F8	0x4C98    LDR	R4, [PC, #608]
0x07FA	0x6825    LDR	R5, [R4, #0]
0x07FC	0x4C94    LDR	R4, [PC, #592]
0x07FE	0x4025    ANDS	R5, R4
0x0800	0x4C96    LDR	R4, [PC, #600]
0x0802	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 161 :: 		LCD_RAM_COM0 |= (((((unsigned long)digit[0x00]) & 0x0C) << 0x1A) | (((unsigned long)digit[0x00]) & 0x03)); // 1G 1B 1M 1E
0x0804	0xAF02    ADD	R7, SP, #8
0x0806	0x783E    LDRB	R6, [R7, #0]
0x0808	0xB2F4    UXTB	R4, R6
0x080A	0xF004040C  AND	R4, R4, #12
0x080E	0x06A5    LSLS	R5, R4, #26
0x0810	0xB2F4    UXTB	R4, R6
0x0812	0xF0040403  AND	R4, R4, #3
0x0816	0x4325    ORRS	R5, R4
0x0818	0x4C8C    LDR	R4, [PC, #560]
0x081A	0x6824    LDR	R4, [R4, #0]
0x081C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0820	0x4C8A    LDR	R4, [PC, #552]
0x0822	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 162 :: 		LCD_RAM_COM1 |= (((((unsigned long)digit[0x01]) & 0x0C) << 0x1A) | (((unsigned long)digit[0x01]) & 0x03)); // 1F 1A 1C 1D
0x0824	0x1C7C    ADDS	R4, R7, #1
0x0826	0x7826    LDRB	R6, [R4, #0]
0x0828	0xB2F4    UXTB	R4, R6
0x082A	0xF004040C  AND	R4, R4, #12
0x082E	0x06A5    LSLS	R5, R4, #26
0x0830	0xB2F4    UXTB	R4, R6
0x0832	0xF0040403  AND	R4, R4, #3
0x0836	0x4325    ORRS	R5, R4
0x0838	0x4C86    LDR	R4, [PC, #536]
0x083A	0x6824    LDR	R4, [R4, #0]
0x083C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0840	0x4C84    LDR	R4, [PC, #528]
0x0842	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 163 :: 		LCD_RAM_COM2 |= (((((unsigned long)digit[0x02]) & 0x0C) << 0x1A) | (((unsigned long)digit[0x02]) & 0x03)); // 1Q 1K 1Col 1P
0x0844	0x1CBC    ADDS	R4, R7, #2
0x0846	0x7826    LDRB	R6, [R4, #0]
0x0848	0xB2F4    UXTB	R4, R6
0x084A	0xF004040C  AND	R4, R4, #12
0x084E	0x06A5    LSLS	R5, R4, #26
0x0850	0xB2F4    UXTB	R4, R6
0x0852	0xF0040403  AND	R4, R4, #3
0x0856	0x4325    ORRS	R5, R4
0x0858	0x4C7F    LDR	R4, [PC, #508]
0x085A	0x6824    LDR	R4, [R4, #0]
0x085C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0860	0x4C7D    LDR	R4, [PC, #500]
0x0862	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 164 :: 		LCD_RAM_COM3 |= (((((unsigned long)digit[0x03]) & 0x0C) << 0x1A) | (((unsigned long)digit[0x03]) & 0x03)); // 1H 1J 1DP 1N
0x0864	0x1CFC    ADDS	R4, R7, #3
0x0866	0x7826    LDRB	R6, [R4, #0]
0x0868	0xB2F4    UXTB	R4, R6
0x086A	0xF004040C  AND	R4, R4, #12
0x086E	0x06A5    LSLS	R5, R4, #26
0x0870	0xB2F4    UXTB	R4, R6
0x0872	0xF0040403  AND	R4, R4, #3
0x0876	0x4325    ORRS	R5, R4
0x0878	0x4C78    LDR	R4, [PC, #480]
0x087A	0x6824    LDR	R4, [R4, #0]
0x087C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0880	0x4C76    LDR	R4, [PC, #472]
0x0882	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 166 :: 		break;
0x0884	0xE229    B	L_LCD_GLASS_WriteChar790
;glass_lcd.c, 170 :: 		case 2:
L_LCD_GLASS_WriteChar792:
;glass_lcd.c, 172 :: 		LCD_RAM_COM0 &= 0xF3FFFF03;
0x0886	0x4C71    LDR	R4, [PC, #452]
0x0888	0x6825    LDR	R5, [R4, #0]
0x088A	0x4C75    LDR	R4, [PC, #468]
0x088C	0x4025    ANDS	R5, R4
0x088E	0x4C6F    LDR	R4, [PC, #444]
0x0890	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 173 :: 		LCD_RAM_COM1 &= 0xF3FFFF03;
0x0892	0x4C70    LDR	R4, [PC, #448]
0x0894	0x6825    LDR	R5, [R4, #0]
0x0896	0x4C72    LDR	R4, [PC, #456]
0x0898	0x4025    ANDS	R5, R4
0x089A	0x4C6E    LDR	R4, [PC, #440]
0x089C	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 174 :: 		LCD_RAM_COM2 &= 0xF3FFFF03;
0x089E	0x4C6E    LDR	R4, [PC, #440]
0x08A0	0x6825    LDR	R5, [R4, #0]
0x08A2	0x4C6F    LDR	R4, [PC, #444]
0x08A4	0x4025    ANDS	R5, R4
0x08A6	0x4C6C    LDR	R4, [PC, #432]
0x08A8	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 175 :: 		LCD_RAM_COM3 &= 0xF3FFFF03;
0x08AA	0x4C6C    LDR	R4, [PC, #432]
0x08AC	0x6825    LDR	R5, [R4, #0]
0x08AE	0x4C6C    LDR	R4, [PC, #432]
0x08B0	0x4025    ANDS	R5, R4
0x08B2	0x4C6A    LDR	R4, [PC, #424]
0x08B4	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 177 :: 		LCD_RAM_COM0 |= (((((unsigned long)digit[0x00]) & 0x0C) << 0x18) | ((((unsigned long)digit[0x00]) & 0x02) << 0x06) | ((((unsigned long)digit[0x00]) & 0x01) << 0x02)); // 2G 2B 2M 2E
0x08B6	0xAF02    ADD	R7, SP, #8
0x08B8	0x783E    LDRB	R6, [R7, #0]
0x08BA	0xB2F4    UXTB	R4, R6
0x08BC	0xF004040C  AND	R4, R4, #12
0x08C0	0x0625    LSLS	R5, R4, #24
0x08C2	0xB2F4    UXTB	R4, R6
0x08C4	0xF0040402  AND	R4, R4, #2
0x08C8	0x01A4    LSLS	R4, R4, #6
0x08CA	0x4325    ORRS	R5, R4
0x08CC	0xB2F4    UXTB	R4, R6
0x08CE	0xF0040401  AND	R4, R4, #1
0x08D2	0x00A4    LSLS	R4, R4, #2
0x08D4	0x4325    ORRS	R5, R4
0x08D6	0x4C5D    LDR	R4, [PC, #372]
0x08D8	0x6824    LDR	R4, [R4, #0]
0x08DA	0xEA440505  ORR	R5, R4, R5, LSL #0
0x08DE	0x4C5B    LDR	R4, [PC, #364]
0x08E0	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 178 :: 		LCD_RAM_COM1 |= (((((unsigned long)digit[0x01]) & 0x0C) << 0x18) | ((((unsigned long)digit[0x01]) & 0x02) << 0x06) | ((((unsigned long)digit[0x01]) & 0x01) << 0x02)); // 2F 2A 2C 2D
0x08E2	0x1C7C    ADDS	R4, R7, #1
0x08E4	0x7826    LDRB	R6, [R4, #0]
0x08E6	0xB2F4    UXTB	R4, R6
0x08E8	0xF004040C  AND	R4, R4, #12
0x08EC	0x0625    LSLS	R5, R4, #24
0x08EE	0xB2F4    UXTB	R4, R6
0x08F0	0xF0040402  AND	R4, R4, #2
0x08F4	0x01A4    LSLS	R4, R4, #6
0x08F6	0x4325    ORRS	R5, R4
0x08F8	0xB2F4    UXTB	R4, R6
0x08FA	0xF0040401  AND	R4, R4, #1
0x08FE	0x00A4    LSLS	R4, R4, #2
0x0900	0x4325    ORRS	R5, R4
0x0902	0x4C54    LDR	R4, [PC, #336]
0x0904	0x6824    LDR	R4, [R4, #0]
0x0906	0xEA440505  ORR	R5, R4, R5, LSL #0
0x090A	0x4C52    LDR	R4, [PC, #328]
0x090C	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 179 :: 		LCD_RAM_COM2 |= (((((unsigned long)digit[0x02]) & 0x0C) << 0x18) | ((((unsigned long)digit[0x02]) & 0x02) << 0x06) | ((((unsigned long)digit[0x02]) & 0x01) << 0x02)); // 2Q 2K 2Col 2P
0x090E	0x1CBC    ADDS	R4, R7, #2
0x0910	0x7826    LDRB	R6, [R4, #0]
0x0912	0xB2F4    UXTB	R4, R6
0x0914	0xF004040C  AND	R4, R4, #12
0x0918	0x0625    LSLS	R5, R4, #24
0x091A	0xB2F4    UXTB	R4, R6
0x091C	0xF0040402  AND	R4, R4, #2
0x0920	0x01A4    LSLS	R4, R4, #6
0x0922	0x4325    ORRS	R5, R4
0x0924	0xB2F4    UXTB	R4, R6
0x0926	0xF0040401  AND	R4, R4, #1
0x092A	0x00A4    LSLS	R4, R4, #2
0x092C	0x4325    ORRS	R5, R4
0x092E	0x4C4A    LDR	R4, [PC, #296]
0x0930	0x6824    LDR	R4, [R4, #0]
0x0932	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0936	0x4C48    LDR	R4, [PC, #288]
0x0938	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 180 :: 		LCD_RAM_COM3 |= (((((unsigned long)digit[0x03]) & 0x0C) << 0x18) | ((((unsigned long)digit[0x03]) & 0x02) << 0x06) | ((((unsigned long)digit[0x03]) & 0x01) << 0x02)); // 2H 2J 2DP 2N
0x093A	0x1CFC    ADDS	R4, R7, #3
0x093C	0x7826    LDRB	R6, [R4, #0]
0x093E	0xB2F4    UXTB	R4, R6
0x0940	0xF004040C  AND	R4, R4, #12
0x0944	0x0625    LSLS	R5, R4, #24
0x0946	0xB2F4    UXTB	R4, R6
0x0948	0xF0040402  AND	R4, R4, #2
0x094C	0x01A4    LSLS	R4, R4, #6
0x094E	0x4325    ORRS	R5, R4
0x0950	0xB2F4    UXTB	R4, R6
0x0952	0xF0040401  AND	R4, R4, #1
0x0956	0x00A4    LSLS	R4, R4, #2
0x0958	0x4325    ORRS	R5, R4
0x095A	0x4C40    LDR	R4, [PC, #256]
0x095C	0x6824    LDR	R4, [R4, #0]
0x095E	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0962	0x4C3E    LDR	R4, [PC, #248]
0x0964	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 182 :: 		break;
0x0966	0xE1B8    B	L_LCD_GLASS_WriteChar790
;glass_lcd.c, 186 :: 		case 3:
L_LCD_GLASS_WriteChar793:
;glass_lcd.c, 188 :: 		LCD_RAM_COM0 &= 0xFCFFFCFF;
0x0968	0x4C38    LDR	R4, [PC, #224]
0x096A	0x6825    LDR	R5, [R4, #0]
0x096C	0xF06F2403  MVN	R4, #50332416
0x0970	0x4025    ANDS	R5, R4
0x0972	0x4C36    LDR	R4, [PC, #216]
0x0974	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 189 :: 		LCD_RAM_COM1 &= 0xFCFFFCFF;
0x0976	0x4C37    LDR	R4, [PC, #220]
0x0978	0x6825    LDR	R5, [R4, #0]
0x097A	0xF06F2403  MVN	R4, #50332416
0x097E	0x4025    ANDS	R5, R4
0x0980	0x4C34    LDR	R4, [PC, #208]
0x0982	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 190 :: 		LCD_RAM_COM2 &= 0xFCFFFCFF;
0x0984	0x4C34    LDR	R4, [PC, #208]
0x0986	0x6825    LDR	R5, [R4, #0]
0x0988	0xF06F2403  MVN	R4, #50332416
0x098C	0x4025    ANDS	R5, R4
0x098E	0x4C32    LDR	R4, [PC, #200]
0x0990	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 191 :: 		LCD_RAM_COM3 &= 0xFCFFFCFF;
0x0992	0x4C32    LDR	R4, [PC, #200]
0x0994	0x6825    LDR	R5, [R4, #0]
0x0996	0xF06F2403  MVN	R4, #50332416
0x099A	0x4025    ANDS	R5, R4
0x099C	0x4C2F    LDR	R4, [PC, #188]
0x099E	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 193 :: 		LCD_RAM_COM0 |= (((((unsigned long)digit[0x00]) & 0x0C) << 0x16) | ((((unsigned long)digit[0x00]) & 0x03) << 0x08)); // 3G 3B 3M 3E
0x09A0	0xAF02    ADD	R7, SP, #8
0x09A2	0x783E    LDRB	R6, [R7, #0]
0x09A4	0xB2F4    UXTB	R4, R6
0x09A6	0xF004040C  AND	R4, R4, #12
0x09AA	0x05A5    LSLS	R5, R4, #22
0x09AC	0xB2F4    UXTB	R4, R6
0x09AE	0xF0040403  AND	R4, R4, #3
0x09B2	0x0224    LSLS	R4, R4, #8
0x09B4	0x4325    ORRS	R5, R4
0x09B6	0x4C25    LDR	R4, [PC, #148]
0x09B8	0x6824    LDR	R4, [R4, #0]
0x09BA	0xEA440505  ORR	R5, R4, R5, LSL #0
0x09BE	0x4C23    LDR	R4, [PC, #140]
0x09C0	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 194 :: 		LCD_RAM_COM1 |= (((((unsigned long)digit[0x01]) & 0x0C) << 0x16) | ((((unsigned long)digit[0x01]) & 0x03) << 0x08)); // 3F 3A 3C 3D
0x09C2	0x1C7C    ADDS	R4, R7, #1
0x09C4	0x7826    LDRB	R6, [R4, #0]
0x09C6	0xB2F4    UXTB	R4, R6
0x09C8	0xF004040C  AND	R4, R4, #12
0x09CC	0x05A5    LSLS	R5, R4, #22
0x09CE	0xB2F4    UXTB	R4, R6
0x09D0	0xF0040403  AND	R4, R4, #3
0x09D4	0x0224    LSLS	R4, R4, #8
0x09D6	0x4325    ORRS	R5, R4
0x09D8	0x4C1E    LDR	R4, [PC, #120]
0x09DA	0x6824    LDR	R4, [R4, #0]
0x09DC	0xEA440505  ORR	R5, R4, R5, LSL #0
0x09E0	0x4C1C    LDR	R4, [PC, #112]
0x09E2	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 195 :: 		LCD_RAM_COM2 |= (((((unsigned long)digit[0x02]) & 0x0C) << 0x16) | ((((unsigned long)digit[0x02]) & 0x03) << 0x08)); // 3Q 3K 3Col 3P
0x09E4	0x1CBC    ADDS	R4, R7, #2
0x09E6	0x7826    LDRB	R6, [R4, #0]
0x09E8	0xB2F4    UXTB	R4, R6
0x09EA	0xF004040C  AND	R4, R4, #12
0x09EE	0x05A5    LSLS	R5, R4, #22
0x09F0	0xB2F4    UXTB	R4, R6
0x09F2	0xF0040403  AND	R4, R4, #3
0x09F6	0x0224    LSLS	R4, R4, #8
0x09F8	0x4325    ORRS	R5, R4
0x09FA	0x4C17    LDR	R4, [PC, #92]
0x09FC	0x6824    LDR	R4, [R4, #0]
0x09FE	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0A02	0x4C15    LDR	R4, [PC, #84]
0x0A04	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 196 :: 		LCD_RAM_COM3 |= (((((unsigned long)digit[0x03]) & 0x0C) << 0x16) | ((((unsigned long)digit[0x03]) & 0x03) << 0x08)); // 3H 3J 3DP 3N
0x0A06	0x1CFC    ADDS	R4, R7, #3
0x0A08	0x7826    LDRB	R6, [R4, #0]
0x0A0A	0xB2F4    UXTB	R4, R6
0x0A0C	0xF004040C  AND	R4, R4, #12
0x0A10	0x05A5    LSLS	R5, R4, #22
0x0A12	0xB2F4    UXTB	R4, R6
0x0A14	0xF0040403  AND	R4, R4, #3
0x0A18	0x0224    LSLS	R4, R4, #8
0x0A1A	0x4325    ORRS	R5, R4
0x0A1C	0x4C0F    LDR	R4, [PC, #60]
0x0A1E	0x6824    LDR	R4, [R4, #0]
0x0A20	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0A24	0x4C0D    LDR	R4, [PC, #52]
0x0A26	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 198 :: 		break;
0x0A28	0xE157    B	L_LCD_GLASS_WriteChar790
;glass_lcd.c, 202 :: 		case 4:
L_LCD_GLASS_WriteChar794:
;glass_lcd.c, 204 :: 		LCD_RAM_COM0 &= 0xFFCFF3FF;
0x0A2A	0x4C08    LDR	R4, [PC, #32]
0x0A2C	0x6825    LDR	R5, [R4, #0]
0x0A2E	0x4C0D    LDR	R4, [PC, #52]
0x0A30	0x4025    ANDS	R5, R4
0x0A32	0x4C06    LDR	R4, [PC, #24]
0x0A34	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 205 :: 		LCD_RAM_COM1 &= 0xFFCFF3FF;
0x0A36	0x4C07    LDR	R4, [PC, #28]
0x0A38	0x6825    LDR	R5, [R4, #0]
0x0A3A	0x4C0A    LDR	R4, [PC, #40]
0x0A3C	0x4025    ANDS	R5, R4
0x0A3E	0x4C05    LDR	R4, [PC, #20]
0x0A40	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 206 :: 		LCD_RAM_COM2 &= 0xFFCFF3FF;
0x0A42	0x4C05    LDR	R4, [PC, #20]
0x0A44	0x6825    LDR	R5, [R4, #0]
0x0A46	0xE00F    B	#30
0x0A48	0x81084204  	LCD_SRbits+0
0x0A4C	0x24144000  	LCD_RAM_COM0+0
0x0A50	0xFFFCCFFF  	#-805306372
0x0A54	0x241C4000  	LCD_RAM_COM1+0
0x0A58	0x24244000  	LCD_RAM_COM2+0
0x0A5C	0x242C4000  	LCD_RAM_COM3+0
0x0A60	0xFF03F3FF  	#-201326845
0x0A64	0xF3FFFFCF  	#-3148801
0x0A68	0x4CA0    LDR	R4, [PC, #640]
0x0A6A	0x4025    ANDS	R5, R4
0x0A6C	0x4CA0    LDR	R4, [PC, #640]
0x0A6E	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 207 :: 		LCD_RAM_COM3 &= 0xFFCFF3FF;
0x0A70	0x4CA0    LDR	R4, [PC, #640]
0x0A72	0x6825    LDR	R5, [R4, #0]
0x0A74	0x4C9D    LDR	R4, [PC, #628]
0x0A76	0x4025    ANDS	R5, R4
0x0A78	0x4C9E    LDR	R4, [PC, #632]
0x0A7A	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 209 :: 		LCD_RAM_COM0 |= (((((unsigned long)digit[0x00]) & 0x0C) << 0x12) | ((((unsigned long)digit[0x00]) & 0x03) << 0x0A)); // 4G 4B 4M 4E
0x0A7C	0xAF02    ADD	R7, SP, #8
0x0A7E	0x783E    LDRB	R6, [R7, #0]
0x0A80	0xB2F4    UXTB	R4, R6
0x0A82	0xF004040C  AND	R4, R4, #12
0x0A86	0x04A5    LSLS	R5, R4, #18
0x0A88	0xB2F4    UXTB	R4, R6
0x0A8A	0xF0040403  AND	R4, R4, #3
0x0A8E	0x02A4    LSLS	R4, R4, #10
0x0A90	0x4325    ORRS	R5, R4
0x0A92	0x4C99    LDR	R4, [PC, #612]
0x0A94	0x6824    LDR	R4, [R4, #0]
0x0A96	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0A9A	0x4C97    LDR	R4, [PC, #604]
0x0A9C	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 210 :: 		LCD_RAM_COM1 |= (((((unsigned long)digit[0x01]) & 0x0C) << 0x12) | ((((unsigned long)digit[0x01]) & 0x03) << 0x0A)); // 4F 4A 4C 4D
0x0A9E	0x1C7C    ADDS	R4, R7, #1
0x0AA0	0x7826    LDRB	R6, [R4, #0]
0x0AA2	0xB2F4    UXTB	R4, R6
0x0AA4	0xF004040C  AND	R4, R4, #12
0x0AA8	0x04A5    LSLS	R5, R4, #18
0x0AAA	0xB2F4    UXTB	R4, R6
0x0AAC	0xF0040403  AND	R4, R4, #3
0x0AB0	0x02A4    LSLS	R4, R4, #10
0x0AB2	0x4325    ORRS	R5, R4
0x0AB4	0x4C91    LDR	R4, [PC, #580]
0x0AB6	0x6824    LDR	R4, [R4, #0]
0x0AB8	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0ABC	0x4C8F    LDR	R4, [PC, #572]
0x0ABE	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 211 :: 		LCD_RAM_COM2 |= (((((unsigned long)digit[0x02]) & 0x0C) << 0x12) | ((((unsigned long)digit[0x02]) & 0x03) << 0x0A)); // 4Q 4K 4Col 4P
0x0AC0	0x1CBC    ADDS	R4, R7, #2
0x0AC2	0x7826    LDRB	R6, [R4, #0]
0x0AC4	0xB2F4    UXTB	R4, R6
0x0AC6	0xF004040C  AND	R4, R4, #12
0x0ACA	0x04A5    LSLS	R5, R4, #18
0x0ACC	0xB2F4    UXTB	R4, R6
0x0ACE	0xF0040403  AND	R4, R4, #3
0x0AD2	0x02A4    LSLS	R4, R4, #10
0x0AD4	0x4325    ORRS	R5, R4
0x0AD6	0x4C86    LDR	R4, [PC, #536]
0x0AD8	0x6824    LDR	R4, [R4, #0]
0x0ADA	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0ADE	0x4C84    LDR	R4, [PC, #528]
0x0AE0	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 212 :: 		LCD_RAM_COM3 |= (((((unsigned long)digit[0x03]) & 0x0C) << 0x12) | ((((unsigned long)digit[0x03]) & 0x03) << 0x0A)); // 4H 4J 4DP 4N
0x0AE2	0x1CFC    ADDS	R4, R7, #3
0x0AE4	0x7826    LDRB	R6, [R4, #0]
0x0AE6	0xB2F4    UXTB	R4, R6
0x0AE8	0xF004040C  AND	R4, R4, #12
0x0AEC	0x04A5    LSLS	R5, R4, #18
0x0AEE	0xB2F4    UXTB	R4, R6
0x0AF0	0xF0040403  AND	R4, R4, #3
0x0AF4	0x02A4    LSLS	R4, R4, #10
0x0AF6	0x4325    ORRS	R5, R4
0x0AF8	0x4C7E    LDR	R4, [PC, #504]
0x0AFA	0x6824    LDR	R4, [R4, #0]
0x0AFC	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0B00	0x4C7C    LDR	R4, [PC, #496]
0x0B02	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 214 :: 		break;
0x0B04	0xE0E9    B	L_LCD_GLASS_WriteChar790
;glass_lcd.c, 218 :: 		case 5:
L_LCD_GLASS_WriteChar795:
;glass_lcd.c, 220 :: 		LCD_RAM_COM0 &= 0xFFF3CFFF;
0x0B06	0x4C7C    LDR	R4, [PC, #496]
0x0B08	0x6825    LDR	R5, [R4, #0]
0x0B0A	0xF46F2443  MVN	R4, #798720
0x0B0E	0x4025    ANDS	R5, R4
0x0B10	0x4C79    LDR	R4, [PC, #484]
0x0B12	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 221 :: 		LCD_RAM_COM1 &= 0xFFF3CFFF;
0x0B14	0x4C79    LDR	R4, [PC, #484]
0x0B16	0x6825    LDR	R5, [R4, #0]
0x0B18	0xF46F2443  MVN	R4, #798720
0x0B1C	0x4025    ANDS	R5, R4
0x0B1E	0x4C77    LDR	R4, [PC, #476]
0x0B20	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 222 :: 		LCD_RAM_COM2 &= 0xFFF3CFFF;
0x0B22	0x4C73    LDR	R4, [PC, #460]
0x0B24	0x6825    LDR	R5, [R4, #0]
0x0B26	0xF46F2443  MVN	R4, #798720
0x0B2A	0x4025    ANDS	R5, R4
0x0B2C	0x4C70    LDR	R4, [PC, #448]
0x0B2E	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 223 :: 		LCD_RAM_COM3 &= 0xFFF3CFFF;
0x0B30	0x4C70    LDR	R4, [PC, #448]
0x0B32	0x6825    LDR	R5, [R4, #0]
0x0B34	0xF46F2443  MVN	R4, #798720
0x0B38	0x4025    ANDS	R5, R4
0x0B3A	0x4C6E    LDR	R4, [PC, #440]
0x0B3C	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 225 :: 		LCD_RAM_COM0 |= (((((unsigned long)digit[0x00]) & 0x0C) << 0x10) | ((((unsigned long)digit[0x00]) & 0x03) << 0x0C)); // 5G 5B 5M 5E
0x0B3E	0xAF02    ADD	R7, SP, #8
0x0B40	0x783E    LDRB	R6, [R7, #0]
0x0B42	0xB2F4    UXTB	R4, R6
0x0B44	0xF004040C  AND	R4, R4, #12
0x0B48	0x0425    LSLS	R5, R4, #16
0x0B4A	0xB2F4    UXTB	R4, R6
0x0B4C	0xF0040403  AND	R4, R4, #3
0x0B50	0x0324    LSLS	R4, R4, #12
0x0B52	0x4325    ORRS	R5, R4
0x0B54	0x4C68    LDR	R4, [PC, #416]
0x0B56	0x6824    LDR	R4, [R4, #0]
0x0B58	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0B5C	0x4C66    LDR	R4, [PC, #408]
0x0B5E	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 226 :: 		LCD_RAM_COM1 |= (((((unsigned long)digit[0x01]) & 0x0C) << 0x10) | ((((unsigned long)digit[0x01]) & 0x03) << 0x0C)); // 5F 5A 5C 5D
0x0B60	0x1C7C    ADDS	R4, R7, #1
0x0B62	0x7826    LDRB	R6, [R4, #0]
0x0B64	0xB2F4    UXTB	R4, R6
0x0B66	0xF004040C  AND	R4, R4, #12
0x0B6A	0x0425    LSLS	R5, R4, #16
0x0B6C	0xB2F4    UXTB	R4, R6
0x0B6E	0xF0040403  AND	R4, R4, #3
0x0B72	0x0324    LSLS	R4, R4, #12
0x0B74	0x4325    ORRS	R5, R4
0x0B76	0x4C61    LDR	R4, [PC, #388]
0x0B78	0x6824    LDR	R4, [R4, #0]
0x0B7A	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0B7E	0x4C5F    LDR	R4, [PC, #380]
0x0B80	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 227 :: 		LCD_RAM_COM2 |= (((((unsigned long)digit[0x02]) & 0x0C) << 0x10) | ((((unsigned long)digit[0x02]) & 0x01) << 0x0C)); // 5Q 5K   5P
0x0B82	0x1CBC    ADDS	R4, R7, #2
0x0B84	0x7826    LDRB	R6, [R4, #0]
0x0B86	0xB2F4    UXTB	R4, R6
0x0B88	0xF004040C  AND	R4, R4, #12
0x0B8C	0x0425    LSLS	R5, R4, #16
0x0B8E	0xB2F4    UXTB	R4, R6
0x0B90	0xF0040401  AND	R4, R4, #1
0x0B94	0x0324    LSLS	R4, R4, #12
0x0B96	0x4325    ORRS	R5, R4
0x0B98	0x4C55    LDR	R4, [PC, #340]
0x0B9A	0x6824    LDR	R4, [R4, #0]
0x0B9C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0BA0	0x4C53    LDR	R4, [PC, #332]
0x0BA2	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 228 :: 		LCD_RAM_COM3 |= (((((unsigned long)digit[0x03]) & 0x0C) << 0x10) | ((((unsigned long)digit[0x03]) & 0x01) << 0x0C)); // 5H 5J   5N
0x0BA4	0x1CFC    ADDS	R4, R7, #3
0x0BA6	0x7826    LDRB	R6, [R4, #0]
0x0BA8	0xB2F4    UXTB	R4, R6
0x0BAA	0xF004040C  AND	R4, R4, #12
0x0BAE	0x0425    LSLS	R5, R4, #16
0x0BB0	0xB2F4    UXTB	R4, R6
0x0BB2	0xF0040401  AND	R4, R4, #1
0x0BB6	0x0324    LSLS	R4, R4, #12
0x0BB8	0x4325    ORRS	R5, R4
0x0BBA	0x4C4E    LDR	R4, [PC, #312]
0x0BBC	0x6824    LDR	R4, [R4, #0]
0x0BBE	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0BC2	0x4C4C    LDR	R4, [PC, #304]
0x0BC4	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 230 :: 		break;
0x0BC6	0xE088    B	L_LCD_GLASS_WriteChar790
;glass_lcd.c, 234 :: 		case 6:
L_LCD_GLASS_WriteChar796:
;glass_lcd.c, 236 :: 		LCD_RAM_COM0 &= 0xFFFC3FFF;
0x0BC8	0x4C4B    LDR	R4, [PC, #300]
0x0BCA	0x6825    LDR	R5, [R4, #0]
0x0BCC	0xF46F3470  MVN	R4, #245760
0x0BD0	0x4025    ANDS	R5, R4
0x0BD2	0x4C49    LDR	R4, [PC, #292]
0x0BD4	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 237 :: 		LCD_RAM_COM1 &= 0xFFFC3FFF;
0x0BD6	0x4C49    LDR	R4, [PC, #292]
0x0BD8	0x6825    LDR	R5, [R4, #0]
0x0BDA	0xF46F3470  MVN	R4, #245760
0x0BDE	0x4025    ANDS	R5, R4
0x0BE0	0x4C46    LDR	R4, [PC, #280]
0x0BE2	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 238 :: 		LCD_RAM_COM2 &= 0xFFFC3FFF;
0x0BE4	0x4C42    LDR	R4, [PC, #264]
0x0BE6	0x6825    LDR	R5, [R4, #0]
0x0BE8	0xF46F3470  MVN	R4, #245760
0x0BEC	0x4025    ANDS	R5, R4
0x0BEE	0x4C40    LDR	R4, [PC, #256]
0x0BF0	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 239 :: 		LCD_RAM_COM3 &= 0xFFFC3FFF;
0x0BF2	0x4C40    LDR	R4, [PC, #256]
0x0BF4	0x6825    LDR	R5, [R4, #0]
0x0BF6	0xF46F3470  MVN	R4, #245760
0x0BFA	0x4025    ANDS	R5, R4
0x0BFC	0x4C3D    LDR	R4, [PC, #244]
0x0BFE	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 241 :: 		LCD_RAM_COM0 |= (((((unsigned long)digit[0x00]) & 0x04) << 0x0F) | ((((unsigned long)digit[0x00]) & 0x08) << 0x0D) | ((((unsigned long)digit[0x00]) & 0x03) << 0x0E)) ; // 6B 6G 6M 6E
0x0C00	0xAF02    ADD	R7, SP, #8
0x0C02	0x783E    LDRB	R6, [R7, #0]
0x0C04	0xB2F4    UXTB	R4, R6
0x0C06	0xF0040404  AND	R4, R4, #4
0x0C0A	0x03E5    LSLS	R5, R4, #15
0x0C0C	0xB2F4    UXTB	R4, R6
0x0C0E	0xF0040408  AND	R4, R4, #8
0x0C12	0x0364    LSLS	R4, R4, #13
0x0C14	0x4325    ORRS	R5, R4
0x0C16	0xB2F4    UXTB	R4, R6
0x0C18	0xF0040403  AND	R4, R4, #3
0x0C1C	0x03A4    LSLS	R4, R4, #14
0x0C1E	0x4325    ORRS	R5, R4
0x0C20	0x4C35    LDR	R4, [PC, #212]
0x0C22	0x6824    LDR	R4, [R4, #0]
0x0C24	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0C28	0x4C33    LDR	R4, [PC, #204]
0x0C2A	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 242 :: 		LCD_RAM_COM1 |= (((((unsigned long)digit[0x01]) & 0x04) << 0x0F) | ((((unsigned long)digit[0x01]) & 0x08) << 0x0D) | ((((unsigned long)digit[0x01]) & 0x03) << 0x0E)) ; // 6A 6F 6C 6D
0x0C2C	0x1C7C    ADDS	R4, R7, #1
0x0C2E	0x7826    LDRB	R6, [R4, #0]
0x0C30	0xB2F4    UXTB	R4, R6
0x0C32	0xF0040404  AND	R4, R4, #4
0x0C36	0x03E5    LSLS	R5, R4, #15
0x0C38	0xB2F4    UXTB	R4, R6
0x0C3A	0xF0040408  AND	R4, R4, #8
0x0C3E	0x0364    LSLS	R4, R4, #13
0x0C40	0x4325    ORRS	R5, R4
0x0C42	0xB2F4    UXTB	R4, R6
0x0C44	0xF0040403  AND	R4, R4, #3
0x0C48	0x03A4    LSLS	R4, R4, #14
0x0C4A	0x4325    ORRS	R5, R4
0x0C4C	0x4C2B    LDR	R4, [PC, #172]
0x0C4E	0x6824    LDR	R4, [R4, #0]
0x0C50	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0C54	0x4C29    LDR	R4, [PC, #164]
0x0C56	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 243 :: 		LCD_RAM_COM2 |= (((((unsigned long)digit[0x02]) & 0x04) << 0x0F) | ((((unsigned long)digit[0x02]) & 0x08) << 0x0D) | ((((unsigned long)digit[0x02]) & 0x01) << 0x0E)) ; // 6K 6Q    6P
0x0C58	0x1CBC    ADDS	R4, R7, #2
0x0C5A	0x7826    LDRB	R6, [R4, #0]
0x0C5C	0xB2F4    UXTB	R4, R6
0x0C5E	0xF0040404  AND	R4, R4, #4
0x0C62	0x03E5    LSLS	R5, R4, #15
0x0C64	0xB2F4    UXTB	R4, R6
0x0C66	0xF0040408  AND	R4, R4, #8
0x0C6A	0x0364    LSLS	R4, R4, #13
0x0C6C	0x4325    ORRS	R5, R4
0x0C6E	0xB2F4    UXTB	R4, R6
0x0C70	0xF0040401  AND	R4, R4, #1
0x0C74	0x03A4    LSLS	R4, R4, #14
0x0C76	0x4325    ORRS	R5, R4
0x0C78	0x4C1D    LDR	R4, [PC, #116]
0x0C7A	0x6824    LDR	R4, [R4, #0]
0x0C7C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0C80	0x4C1B    LDR	R4, [PC, #108]
0x0C82	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 244 :: 		LCD_RAM_COM3 |= (((((unsigned long)digit[0x03]) & 0x04) << 0x0F) | ((((unsigned long)digit[0x03]) & 0x08) << 0x0D) | ((((unsigned long)digit[0x03]) & 0x01) << 0x0E)) ; // 6J 6H   6N
0x0C84	0x1CFC    ADDS	R4, R7, #3
0x0C86	0x7826    LDRB	R6, [R4, #0]
0x0C88	0xB2F4    UXTB	R4, R6
0x0C8A	0xF0040404  AND	R4, R4, #4
0x0C8E	0x03E5    LSLS	R5, R4, #15
0x0C90	0xB2F4    UXTB	R4, R6
0x0C92	0xF0040408  AND	R4, R4, #8
0x0C96	0x0364    LSLS	R4, R4, #13
0x0C98	0x4325    ORRS	R5, R4
0x0C9A	0xB2F4    UXTB	R4, R6
0x0C9C	0xF0040401  AND	R4, R4, #1
0x0CA0	0x03A4    LSLS	R4, R4, #14
0x0CA2	0x4325    ORRS	R5, R4
0x0CA4	0x4C13    LDR	R4, [PC, #76]
0x0CA6	0x6824    LDR	R4, [R4, #0]
0x0CA8	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0CAC	0x4C11    LDR	R4, [PC, #68]
0x0CAE	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 246 :: 		break;
0x0CB0	0xE013    B	L_LCD_GLASS_WriteChar790
;glass_lcd.c, 249 :: 		default:
L_LCD_GLASS_WriteChar797:
;glass_lcd.c, 251 :: 		break;
0x0CB2	0xE012    B	L_LCD_GLASS_WriteChar790
;glass_lcd.c, 253 :: 		}
L_LCD_GLASS_WriteChar789:
; position start address is: 0 (R0)
0x0CB4	0x2801    CMP	R0, #1
0x0CB6	0xF43FAD8D  BEQ	L_LCD_GLASS_WriteChar791
0x0CBA	0x2802    CMP	R0, #2
0x0CBC	0xF43FADE3  BEQ	L_LCD_GLASS_WriteChar792
0x0CC0	0x2803    CMP	R0, #3
0x0CC2	0xF43FAE51  BEQ	L_LCD_GLASS_WriteChar793
0x0CC6	0x2804    CMP	R0, #4
0x0CC8	0xF43FAEAF  BEQ	L_LCD_GLASS_WriteChar794
0x0CCC	0x2805    CMP	R0, #5
0x0CCE	0xF43FAF1A  BEQ	L_LCD_GLASS_WriteChar795
0x0CD2	0x2806    CMP	R0, #6
0x0CD4	0xF43FAF78  BEQ	L_LCD_GLASS_WriteChar796
; position end address is: 0 (R0)
0x0CD8	0xE7EB    B	L_LCD_GLASS_WriteChar797
L_LCD_GLASS_WriteChar790:
;glass_lcd.c, 256 :: 		LCD_bar();
0x0CDA	0xF000F87B  BL	_LCD_bar+0
;glass_lcd.c, 257 :: 		update_display_request();
0x0CDE	0x2501    MOVS	R5, #1
0x0CE0	0x4C07    LDR	R4, [PC, #28]
0x0CE2	0x6025    STR	R5, [R4, #0]
;glass_lcd.c, 258 :: 		}
L_end_LCD_GLASS_WriteChar:
0x0CE4	0xF8DDE000  LDR	LR, [SP, #0]
0x0CE8	0xB003    ADD	SP, SP, #12
0x0CEA	0x4770    BX	LR
0x0CEC	0xF3FFFFCF  	#-3148801
0x0CF0	0x24244000  	LCD_RAM_COM2+0
0x0CF4	0x242C4000  	LCD_RAM_COM3+0
0x0CF8	0x24144000  	LCD_RAM_COM0+0
0x0CFC	0x241C4000  	LCD_RAM_COM1+0
0x0D00	0x81084204  	LCD_SRbits+0
; end of _LCD_GLASS_WriteChar
lcd_my_func_LCD_Conv_Char_Seg:
;glass_lcd.c, 369 :: 		static void LCD_Conv_Char_Seg(unsigned char *c, unsigned char point, unsigned char column, unsigned char *digit)
; digit start address is: 12 (R3)
; column start address is: 8 (R2)
; point start address is: 4 (R1)
; c start address is: 0 (R0)
0x0274	0xB081    SUB	SP, SP, #4
; digit end address is: 12 (R3)
; column end address is: 8 (R2)
; point end address is: 4 (R1)
; c end address is: 0 (R0)
; c start address is: 0 (R0)
; point start address is: 4 (R1)
; column start address is: 8 (R2)
; digit start address is: 12 (R3)
;glass_lcd.c, 371 :: 		unsigned char i = 0x00;
;glass_lcd.c, 372 :: 		unsigned char j = 0x00;
;glass_lcd.c, 374 :: 		unsigned int ch = 0x0000;
; ch start address is: 20 (R5)
0x0276	0xF2400500  MOVW	R5, #0
;glass_lcd.c, 376 :: 		switch(*c)
0x027A	0xE04A    B	L_lcd_my_func_LCD_Conv_Char_Seg819
; c end address is: 0 (R0)
; ch end address is: 20 (R5)
;glass_lcd.c, 378 :: 		case ' ':
L_lcd_my_func_LCD_Conv_Char_Seg821:
;glass_lcd.c, 380 :: 		ch = 0x00;
; ch start address is: 0 (R0)
0x027C	0x2000    MOVS	R0, #0
;glass_lcd.c, 381 :: 		break;
; ch end address is: 0 (R0)
0x027E	0xE08C    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 383 :: 		case '*':
L_lcd_my_func_LCD_Conv_Char_Seg822:
;glass_lcd.c, 385 :: 		ch = star;
; ch start address is: 0 (R0)
0x0280	0xF24A00DD  MOVW	R0, #41181
;glass_lcd.c, 386 :: 		break;
; ch end address is: 0 (R0)
0x0284	0xE089    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 388 :: 		case 'µ':
L_lcd_my_func_LCD_Conv_Char_Seg823:
;glass_lcd.c, 390 :: 		ch = C_UMAP;
; ch start address is: 0 (R0)
0x0286	0xF2460084  MOVW	R0, #24708
;glass_lcd.c, 391 :: 		break;
; ch end address is: 0 (R0)
0x028A	0xE086    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 393 :: 		case 'm':
L_lcd_my_func_LCD_Conv_Char_Seg824:
;glass_lcd.c, 395 :: 		ch = C_mMap;
; ch start address is: 0 (R0)
0x028C	0xF24B2010  MOVW	R0, #45584
;glass_lcd.c, 396 :: 		break;
; ch end address is: 0 (R0)
0x0290	0xE083    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 398 :: 		case 'n':
L_lcd_my_func_LCD_Conv_Char_Seg825:
;glass_lcd.c, 400 :: 		ch = C_nMap;
; ch start address is: 0 (R0)
0x0292	0xF2422010  MOVW	R0, #8720
;glass_lcd.c, 401 :: 		break;
; ch end address is: 0 (R0)
0x0296	0xE080    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 403 :: 		case '-':
L_lcd_my_func_LCD_Conv_Char_Seg826:
;glass_lcd.c, 405 :: 		ch = C_minus;
; ch start address is: 0 (R0)
0x0298	0xF24A0000  MOVW	R0, #40960
;glass_lcd.c, 406 :: 		break;
; ch end address is: 0 (R0)
0x029C	0xE07D    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 408 :: 		case '/':
L_lcd_my_func_LCD_Conv_Char_Seg827:
;glass_lcd.c, 410 :: 		ch = C_slatch;
; ch start address is: 0 (R0)
0x029E	0x20C0    MOVS	R0, #192
;glass_lcd.c, 411 :: 		break;
; ch end address is: 0 (R0)
0x02A0	0xE07B    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 413 :: 		case '°':
L_lcd_my_func_LCD_Conv_Char_Seg828:
;glass_lcd.c, 415 :: 		ch = C_percent_1;
; ch start address is: 0 (R0)
0x02A2	0xF64E4000  MOVW	R0, #60416
;glass_lcd.c, 416 :: 		break;
; ch end address is: 0 (R0)
0x02A6	0xE078    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 418 :: 		case '%':
L_lcd_my_func_LCD_Conv_Char_Seg829:
;glass_lcd.c, 420 :: 		ch = C_percent_2;
; ch start address is: 0 (R0)
0x02A8	0xF24B3000  MOVW	R0, #45824
;glass_lcd.c, 421 :: 		break;
; ch end address is: 0 (R0)
0x02AC	0xE075    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 423 :: 		case '[':
L_lcd_my_func_LCD_Conv_Char_Seg830:
;glass_lcd.c, 425 :: 		ch = bracket_open;
; ch start address is: 0 (R0)
0x02AE	0xF6415000  MOVW	R0, #7424
;glass_lcd.c, 426 :: 		break;
; ch end address is: 0 (R0)
0x02B2	0xE072    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 428 :: 		case ']':
L_lcd_my_func_LCD_Conv_Char_Seg831:
;glass_lcd.c, 430 :: 		ch = bracket_close;
; ch start address is: 0 (R0)
0x02B4	0xF2447000  MOVW	R0, #18176
;glass_lcd.c, 431 :: 		break;
; ch end address is: 0 (R0)
0x02B8	0xE06F    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 433 :: 		case 0xFF:
L_lcd_my_func_LCD_Conv_Char_Seg832:
;glass_lcd.c, 435 :: 		ch = C_full;
; ch start address is: 0 (R0)
0x02BA	0xF64F70DD  MOVW	R0, #65501
;glass_lcd.c, 436 :: 		break;
; ch end address is: 0 (R0)
0x02BE	0xE06C    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 438 :: 		case '0':
L_lcd_my_func_LCD_Conv_Char_Seg833:
;glass_lcd.c, 439 :: 		case '1':
; c start address is: 0 (R0)
L_lcd_my_func_LCD_Conv_Char_Seg834:
;glass_lcd.c, 440 :: 		case '2':
L_lcd_my_func_LCD_Conv_Char_Seg835:
;glass_lcd.c, 441 :: 		case '3':
L_lcd_my_func_LCD_Conv_Char_Seg836:
;glass_lcd.c, 442 :: 		case '4':
L_lcd_my_func_LCD_Conv_Char_Seg837:
;glass_lcd.c, 443 :: 		case '5':
L_lcd_my_func_LCD_Conv_Char_Seg838:
;glass_lcd.c, 444 :: 		case '6':
L_lcd_my_func_LCD_Conv_Char_Seg839:
;glass_lcd.c, 445 :: 		case '7':
L_lcd_my_func_LCD_Conv_Char_Seg840:
;glass_lcd.c, 446 :: 		case '8':
L_lcd_my_func_LCD_Conv_Char_Seg841:
;glass_lcd.c, 447 :: 		case '9':
L_lcd_my_func_LCD_Conv_Char_Seg842:
;glass_lcd.c, 449 :: 		ch = NumberMap[(*c - 0x30)];
0x02C0	0x7804    LDRB	R4, [R0, #0]
; c end address is: 0 (R0)
0x02C2	0x3C30    SUBS	R4, #48
0x02C4	0xB224    SXTH	R4, R4
0x02C6	0x0065    LSLS	R5, R4, #1
0x02C8	0x4C44    LDR	R4, [PC, #272]
0x02CA	0x1964    ADDS	R4, R4, R5
0x02CC	0x8820    LDRH	R0, [R4, #0]
; ch start address is: 0 (R0)
;glass_lcd.c, 450 :: 		break;
; ch end address is: 0 (R0)
0x02CE	0xE064    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 452 :: 		default:
L_lcd_my_func_LCD_Conv_Char_Seg843:
;glass_lcd.c, 455 :: 		if((*c < 0x5B) && (*c > 0x40))
; ch start address is: 20 (R5)
; c start address is: 0 (R0)
0x02D0	0x7804    LDRB	R4, [R0, #0]
0x02D2	0x2C5B    CMP	R4, #91
0x02D4	0xD20A    BCS	L_lcd_my_func_LCD_Conv_Char_Seg873
0x02D6	0x7804    LDRB	R4, [R0, #0]
0x02D8	0x2C40    CMP	R4, #64
0x02DA	0xD908    BLS	L_lcd_my_func_LCD_Conv_Char_Seg874
; ch end address is: 20 (R5)
L_lcd_my_func_LCD_Conv_Char_Seg868:
;glass_lcd.c, 457 :: 		ch = CapLetterMap[(*c - 'A')];
0x02DC	0x7804    LDRB	R4, [R0, #0]
0x02DE	0x3C41    SUBS	R4, #65
0x02E0	0xB224    SXTH	R4, R4
0x02E2	0x0065    LSLS	R5, R4, #1
0x02E4	0x4C3E    LDR	R4, [PC, #248]
0x02E6	0x1964    ADDS	R4, R4, R5
0x02E8	0x8825    LDRH	R5, [R4, #0]
; ch start address is: 20 (R5)
; ch end address is: 20 (R5)
;glass_lcd.c, 455 :: 		if((*c < 0x5B) && (*c > 0x40))
0x02EA	0xE7FF    B	L_lcd_my_func_LCD_Conv_Char_Seg870
L_lcd_my_func_LCD_Conv_Char_Seg873:
L_lcd_my_func_LCD_Conv_Char_Seg870:
; ch start address is: 20 (R5)
; ch end address is: 20 (R5)
0x02EC	0xE7FF    B	L_lcd_my_func_LCD_Conv_Char_Seg869
L_lcd_my_func_LCD_Conv_Char_Seg874:
L_lcd_my_func_LCD_Conv_Char_Seg869:
;glass_lcd.c, 460 :: 		if((*c <0x7B) && (*c > 0x60))
; ch start address is: 20 (R5)
0x02EE	0x7804    LDRB	R4, [R0, #0]
0x02F0	0x2C7B    CMP	R4, #123
0x02F2	0xD20A    BCS	L_lcd_my_func_LCD_Conv_Char_Seg875
0x02F4	0x7804    LDRB	R4, [R0, #0]
0x02F6	0x2C60    CMP	R4, #96
0x02F8	0xD909    BLS	L_lcd_my_func_LCD_Conv_Char_Seg876
; ch end address is: 20 (R5)
L_lcd_my_func_LCD_Conv_Char_Seg867:
;glass_lcd.c, 462 :: 		ch = SmallLetterMap[(*c - 'a')];
0x02FA	0x7804    LDRB	R4, [R0, #0]
; c end address is: 0 (R0)
0x02FC	0x3C61    SUBS	R4, #97
0x02FE	0xB224    SXTH	R4, R4
0x0300	0x0065    LSLS	R5, R4, #1
0x0302	0x4C38    LDR	R4, [PC, #224]
0x0304	0x1964    ADDS	R4, R4, R5
0x0306	0x8820    LDRH	R0, [R4, #0]
; ch start address is: 0 (R0)
; ch end address is: 0 (R0)
;glass_lcd.c, 460 :: 		if((*c <0x7B) && (*c > 0x60))
0x0308	0xE000    B	L_lcd_my_func_LCD_Conv_Char_Seg872
L_lcd_my_func_LCD_Conv_Char_Seg875:
0x030A	0xB2A8    UXTH	R0, R5
L_lcd_my_func_LCD_Conv_Char_Seg872:
; ch start address is: 0 (R0)
; ch end address is: 0 (R0)
0x030C	0xE000    B	L_lcd_my_func_LCD_Conv_Char_Seg871
L_lcd_my_func_LCD_Conv_Char_Seg876:
0x030E	0xB2A8    UXTH	R0, R5
L_lcd_my_func_LCD_Conv_Char_Seg871:
;glass_lcd.c, 464 :: 		break;
; ch start address is: 0 (R0)
; ch end address is: 0 (R0)
0x0310	0xE043    B	L_lcd_my_func_LCD_Conv_Char_Seg820
;glass_lcd.c, 466 :: 		}
L_lcd_my_func_LCD_Conv_Char_Seg819:
; ch start address is: 20 (R5)
; c start address is: 0 (R0)
0x0312	0x7804    LDRB	R4, [R0, #0]
0x0314	0x2C20    CMP	R4, #32
0x0316	0xD0B1    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg821
0x0318	0x7804    LDRB	R4, [R0, #0]
0x031A	0x2C2A    CMP	R4, #42
0x031C	0xD0B0    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg822
0x031E	0x7804    LDRB	R4, [R0, #0]
0x0320	0x2CB5    CMP	R4, #181
0x0322	0xD0B0    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg823
0x0324	0x7804    LDRB	R4, [R0, #0]
0x0326	0x2C6D    CMP	R4, #109
0x0328	0xD0B0    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg824
0x032A	0x7804    LDRB	R4, [R0, #0]
0x032C	0x2C6E    CMP	R4, #110
0x032E	0xD0B0    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg825
0x0330	0x7804    LDRB	R4, [R0, #0]
0x0332	0x2C2D    CMP	R4, #45
0x0334	0xD0B0    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg826
0x0336	0x7804    LDRB	R4, [R0, #0]
0x0338	0x2C2F    CMP	R4, #47
0x033A	0xD0B0    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg827
0x033C	0x7804    LDRB	R4, [R0, #0]
0x033E	0x2CB0    CMP	R4, #176
0x0340	0xD0AF    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg828
0x0342	0x7804    LDRB	R4, [R0, #0]
0x0344	0x2C25    CMP	R4, #37
0x0346	0xD0AF    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg829
0x0348	0x7804    LDRB	R4, [R0, #0]
0x034A	0x2C5B    CMP	R4, #91
0x034C	0xD0AF    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg830
0x034E	0x7804    LDRB	R4, [R0, #0]
0x0350	0x2C5D    CMP	R4, #93
0x0352	0xD0AF    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg831
0x0354	0x7804    LDRB	R4, [R0, #0]
0x0356	0xF1B40FFF  CMP	R4, #255
0x035A	0xD0AE    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg832
0x035C	0x7804    LDRB	R4, [R0, #0]
0x035E	0x2C30    CMP	R4, #48
0x0360	0xD0AE    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg833
0x0362	0x7804    LDRB	R4, [R0, #0]
0x0364	0x2C31    CMP	R4, #49
0x0366	0xD0AB    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg834
0x0368	0x7804    LDRB	R4, [R0, #0]
0x036A	0x2C32    CMP	R4, #50
0x036C	0xD0A8    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg835
0x036E	0x7804    LDRB	R4, [R0, #0]
0x0370	0x2C33    CMP	R4, #51
0x0372	0xD0A5    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg836
0x0374	0x7804    LDRB	R4, [R0, #0]
0x0376	0x2C34    CMP	R4, #52
0x0378	0xD0A2    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg837
0x037A	0x7804    LDRB	R4, [R0, #0]
0x037C	0x2C35    CMP	R4, #53
0x037E	0xD09F    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg838
0x0380	0x7804    LDRB	R4, [R0, #0]
0x0382	0x2C36    CMP	R4, #54
0x0384	0xD09C    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg839
0x0386	0x7804    LDRB	R4, [R0, #0]
0x0388	0x2C37    CMP	R4, #55
0x038A	0xD099    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg840
0x038C	0x7804    LDRB	R4, [R0, #0]
0x038E	0x2C38    CMP	R4, #56
0x0390	0xD096    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg841
0x0392	0x7804    LDRB	R4, [R0, #0]
0x0394	0x2C39    CMP	R4, #57
0x0396	0xD093    BEQ	L_lcd_my_func_LCD_Conv_Char_Seg842
0x0398	0xE79A    B	L_lcd_my_func_LCD_Conv_Char_Seg843
; c end address is: 0 (R0)
; ch end address is: 20 (R5)
L_lcd_my_func_LCD_Conv_Char_Seg820:
;glass_lcd.c, 469 :: 		if(point != 0)
; ch start address is: 0 (R0)
0x039A	0xB119    CBZ	R1, L_lcd_my_func_LCD_Conv_Char_Seg877
; point end address is: 4 (R1)
;glass_lcd.c, 471 :: 		ch |= 0x0002;
0x039C	0xF0400002  ORR	R0, R0, #2
0x03A0	0xB280    UXTH	R0, R0
; ch end address is: 0 (R0)
;glass_lcd.c, 472 :: 		}
0x03A2	0xE7FF    B	L_lcd_my_func_LCD_Conv_Char_Seg850
L_lcd_my_func_LCD_Conv_Char_Seg877:
;glass_lcd.c, 469 :: 		if(point != 0)
;glass_lcd.c, 472 :: 		}
L_lcd_my_func_LCD_Conv_Char_Seg850:
;glass_lcd.c, 475 :: 		if(column != 0)
; ch start address is: 0 (R0)
0x03A4	0xB11A    CBZ	R2, L_lcd_my_func_LCD_Conv_Char_Seg878
; column end address is: 8 (R2)
;glass_lcd.c, 477 :: 		ch |= 0x0020;
0x03A6	0xF0400020  ORR	R0, R0, #32
0x03AA	0xB280    UXTH	R0, R0
; ch end address is: 0 (R0)
;glass_lcd.c, 478 :: 		}
0x03AC	0xE7FF    B	L_lcd_my_func_LCD_Conv_Char_Seg851
L_lcd_my_func_LCD_Conv_Char_Seg878:
;glass_lcd.c, 475 :: 		if(column != 0)
;glass_lcd.c, 478 :: 		}
L_lcd_my_func_LCD_Conv_Char_Seg851:
;glass_lcd.c, 480 :: 		for(i = 0x0C, j = 0x00 ; j < 0x04; i -= 0x04, j++)
; ch start address is: 0 (R0)
; i start address is: 4 (R1)
0x03AE	0x210C    MOVS	R1, #12
; j start address is: 8 (R2)
0x03B0	0x2200    MOVS	R2, #0
; digit end address is: 12 (R3)
; i end address is: 4 (R1)
; j end address is: 8 (R2)
0x03B2	0xF88D1000  STRB	R1, [SP, #0]
0x03B6	0x4619    MOV	R1, R3
0x03B8	0xF89D3000  LDRB	R3, [SP, #0]
L_lcd_my_func_LCD_Conv_Char_Seg852:
; j start address is: 8 (R2)
; digit start address is: 4 (R1)
; i start address is: 12 (R3)
; ch start address is: 0 (R0)
; ch end address is: 0 (R0)
; digit start address is: 4 (R1)
; digit end address is: 4 (R1)
0x03BC	0x2A04    CMP	R2, #4
0x03BE	0xD20B    BCS	L_lcd_my_func_LCD_Conv_Char_Seg853
; ch end address is: 0 (R0)
; digit end address is: 4 (R1)
;glass_lcd.c, 482 :: 		digit[j] = ((ch >> i) & 0x0F); //To isolate the less signifiant bit
; digit start address is: 4 (R1)
; ch start address is: 0 (R0)
0x03C0	0x188D    ADDS	R5, R1, R2
0x03C2	0xFA20F403  LSR	R4, R0, R3
0x03C6	0xB2A4    UXTH	R4, R4
0x03C8	0xF004040F  AND	R4, R4, #15
0x03CC	0x702C    STRB	R4, [R5, #0]
;glass_lcd.c, 480 :: 		for(i = 0x0C, j = 0x00 ; j < 0x04; i -= 0x04, j++)
0x03CE	0x1F1C    SUBS	R4, R3, #4
0x03D0	0xB2E3    UXTB	R3, R4
0x03D2	0x1C52    ADDS	R2, R2, #1
0x03D4	0xB2D2    UXTB	R2, R2
;glass_lcd.c, 483 :: 		}
; ch end address is: 0 (R0)
; digit end address is: 4 (R1)
; i end address is: 12 (R3)
; j end address is: 8 (R2)
0x03D6	0xE7F1    B	L_lcd_my_func_LCD_Conv_Char_Seg852
L_lcd_my_func_LCD_Conv_Char_Seg853:
;glass_lcd.c, 484 :: 		}
L_end_LCD_Conv_Char_Seg:
0x03D8	0xB001    ADD	SP, SP, #4
0x03DA	0x4770    BX	LR
0x03DC	0x36760000  	_NumberMap+0
0x03E0	0x36420000  	_CapLetterMap+0
0x03E4	0x360E0000  	_SmallLetterMap+0
; end of lcd_my_func_LCD_Conv_Char_Seg
___CC2DW:
;__Lib_System_15X.c, 30 :: 		
0x31B4	0xB081    SUB	SP, SP, #4
;__Lib_System_15X.c, 32 :: 		
L_loopDW:
;__Lib_System_15X.c, 33 :: 		
0x31B6	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_15X.c, 34 :: 		
0x31BA	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_15X.c, 35 :: 		
0x31BE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_15X.c, 36 :: 		
0x31C2	0xD1F8    BNE	L_loopDW
;__Lib_System_15X.c, 38 :: 		
L_end___CC2DW:
0x31C4	0xB001    ADD	SP, SP, #4
0x31C6	0x4770    BX	LR
; end of ___CC2DW
__Lib_System_15X_InitialSetUpRCCRCC2:
;__Lib_System_15X.c, 399 :: 		
0x3434	0xB082    SUB	SP, SP, #8
0x3436	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_15X.c, 403 :: 		
; ulRCC_CR start address is: 8 (R2)
0x343A	0x4A4B    LDR	R2, [PC, #300]
;__Lib_System_15X.c, 404 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x343C	0x4B4B    LDR	R3, [PC, #300]
;__Lib_System_15X.c, 405 :: 		
; ulVCORE start address is: 0 (R0)
0x343E	0x484C    LDR	R0, [PC, #304]
;__Lib_System_15X.c, 406 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3440	0x494C    LDR	R1, [PC, #304]
;__Lib_System_15X.c, 409 :: 		
0x3442	0xB9B8    CBNZ	R0, L___Lib_System_15X_InitialSetUpRCCRCC234
; ulVCORE end address is: 0 (R0)
;__Lib_System_15X.c, 410 :: 		
0x3444	0xF5B16FFA  CMP	R1, #2000
0x3448	0xD90C    BLS	L___Lib_System_15X_InitialSetUpRCCRCC235
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_15X.c, 411 :: 		
0x344A	0x2101    MOVS	R1, #1
0x344C	0xB249    SXTB	R1, R1
0x344E	0x484A    LDR	R0, [PC, #296]
0x3450	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 412 :: 		
0x3452	0x484A    LDR	R0, [PC, #296]
0x3454	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 413 :: 		
0x3456	0x484A    LDR	R0, [PC, #296]
0x3458	0x6800    LDR	R0, [R0, #0]
0x345A	0xF0400101  ORR	R1, R0, #1
0x345E	0x4848    LDR	R0, [PC, #288]
0x3460	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 414 :: 		
0x3462	0xE006    B	L___Lib_System_15X_InitialSetUpRCCRCC236
L___Lib_System_15X_InitialSetUpRCCRCC235:
;__Lib_System_15X.c, 416 :: 		
0x3464	0x4846    LDR	R0, [PC, #280]
0x3466	0x6801    LDR	R1, [R0, #0]
0x3468	0xF06F0001  MVN	R0, #1
0x346C	0x4001    ANDS	R1, R0
0x346E	0x4844    LDR	R0, [PC, #272]
0x3470	0x6001    STR	R1, [R0, #0]
L___Lib_System_15X_InitialSetUpRCCRCC236:
;__Lib_System_15X.c, 417 :: 		
0x3472	0xE032    B	L___Lib_System_15X_InitialSetUpRCCRCC237
L___Lib_System_15X_InitialSetUpRCCRCC234:
;__Lib_System_15X.c, 418 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVCORE start address is: 0 (R0)
0x3474	0x2801    CMP	R0, #1
0x3476	0xD117    BNE	L___Lib_System_15X_InitialSetUpRCCRCC238
; ulVCORE end address is: 0 (R0)
;__Lib_System_15X.c, 419 :: 		
0x3478	0xF5B15FFA  CMP	R1, #8000
0x347C	0xD90C    BLS	L___Lib_System_15X_InitialSetUpRCCRCC239
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_15X.c, 420 :: 		
0x347E	0x2101    MOVS	R1, #1
0x3480	0xB249    SXTB	R1, R1
0x3482	0x483D    LDR	R0, [PC, #244]
0x3484	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 421 :: 		
0x3486	0x483D    LDR	R0, [PC, #244]
0x3488	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 422 :: 		
0x348A	0x483D    LDR	R0, [PC, #244]
0x348C	0x6800    LDR	R0, [R0, #0]
0x348E	0xF0400101  ORR	R1, R0, #1
0x3492	0x483B    LDR	R0, [PC, #236]
0x3494	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 423 :: 		
0x3496	0xE006    B	L___Lib_System_15X_InitialSetUpRCCRCC240
L___Lib_System_15X_InitialSetUpRCCRCC239:
;__Lib_System_15X.c, 425 :: 		
0x3498	0x4839    LDR	R0, [PC, #228]
0x349A	0x6801    LDR	R1, [R0, #0]
0x349C	0xF06F0001  MVN	R0, #1
0x34A0	0x4001    ANDS	R1, R0
0x34A2	0x4837    LDR	R0, [PC, #220]
0x34A4	0x6001    STR	R1, [R0, #0]
L___Lib_System_15X_InitialSetUpRCCRCC240:
;__Lib_System_15X.c, 426 :: 		
0x34A6	0xE018    B	L___Lib_System_15X_InitialSetUpRCCRCC241
L___Lib_System_15X_InitialSetUpRCCRCC238:
;__Lib_System_15X.c, 427 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVCORE start address is: 0 (R0)
0x34A8	0x2802    CMP	R0, #2
0x34AA	0xD116    BNE	L___Lib_System_15X_InitialSetUpRCCRCC242
; ulVCORE end address is: 0 (R0)
;__Lib_System_15X.c, 428 :: 		
0x34AC	0xF5B15F7A  CMP	R1, #16000
0x34B0	0xD90C    BLS	L___Lib_System_15X_InitialSetUpRCCRCC243
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_15X.c, 429 :: 		
0x34B2	0x2101    MOVS	R1, #1
0x34B4	0xB249    SXTB	R1, R1
0x34B6	0x4830    LDR	R0, [PC, #192]
0x34B8	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 430 :: 		
0x34BA	0x4830    LDR	R0, [PC, #192]
0x34BC	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 431 :: 		
0x34BE	0x4830    LDR	R0, [PC, #192]
0x34C0	0x6800    LDR	R0, [R0, #0]
0x34C2	0xF0400101  ORR	R1, R0, #1
0x34C6	0x482E    LDR	R0, [PC, #184]
0x34C8	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 432 :: 		
0x34CA	0xE006    B	L___Lib_System_15X_InitialSetUpRCCRCC244
L___Lib_System_15X_InitialSetUpRCCRCC243:
;__Lib_System_15X.c, 434 :: 		
0x34CC	0x482C    LDR	R0, [PC, #176]
0x34CE	0x6801    LDR	R1, [R0, #0]
0x34D0	0xF06F0001  MVN	R0, #1
0x34D4	0x4001    ANDS	R1, R0
0x34D6	0x482A    LDR	R0, [PC, #168]
0x34D8	0x6001    STR	R1, [R0, #0]
L___Lib_System_15X_InitialSetUpRCCRCC244:
;__Lib_System_15X.c, 435 :: 		
L___Lib_System_15X_InitialSetUpRCCRCC242:
L___Lib_System_15X_InitialSetUpRCCRCC241:
L___Lib_System_15X_InitialSetUpRCCRCC237:
;__Lib_System_15X.c, 437 :: 		
0x34DA	0xF7FFFE3F  BL	__Lib_System_15X_SystemClockSetDefault+0
;__Lib_System_15X.c, 439 :: 		
0x34DE	0x4829    LDR	R0, [PC, #164]
0x34E0	0x6003    STR	R3, [R0, #0]
;__Lib_System_15X.c, 440 :: 		
0x34E2	0x4829    LDR	R0, [PC, #164]
0x34E4	0xEA020100  AND	R1, R2, R0, LSL #0
0x34E8	0x4828    LDR	R0, [PC, #160]
0x34EA	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 442 :: 		
0x34EC	0xF0020001  AND	R0, R2, #1
0x34F0	0xB140    CBZ	R0, L___Lib_System_15X_InitialSetUpRCCRCC256
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x34F2	0x4619    MOV	R1, R3
;__Lib_System_15X.c, 443 :: 		
L___Lib_System_15X_InitialSetUpRCCRCC246:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x34F4	0x4825    LDR	R0, [PC, #148]
0x34F6	0x6800    LDR	R0, [R0, #0]
0x34F8	0xF0000002  AND	R0, R0, #2
0x34FC	0x2800    CMP	R0, #0
0x34FE	0xD100    BNE	L___Lib_System_15X_InitialSetUpRCCRCC247
;__Lib_System_15X.c, 444 :: 		
0x3500	0xE7F8    B	L___Lib_System_15X_InitialSetUpRCCRCC246
L___Lib_System_15X_InitialSetUpRCCRCC247:
;__Lib_System_15X.c, 445 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x3502	0xE000    B	L___Lib_System_15X_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_15X_InitialSetUpRCCRCC256:
;__Lib_System_15X.c, 442 :: 		
0x3504	0x4619    MOV	R1, R3
;__Lib_System_15X.c, 445 :: 		
L___Lib_System_15X_InitialSetUpRCCRCC245:
;__Lib_System_15X.c, 447 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x3506	0xF4023080  AND	R0, R2, #65536
0x350A	0xB148    CBZ	R0, L___Lib_System_15X_InitialSetUpRCCRCC257
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_15X.c, 448 :: 		
L___Lib_System_15X_InitialSetUpRCCRCC249:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x350C	0x481F    LDR	R0, [PC, #124]
0x350E	0x6800    LDR	R0, [R0, #0]
0x3510	0xF4003000  AND	R0, R0, #131072
0x3514	0xB900    CBNZ	R0, L___Lib_System_15X_InitialSetUpRCCRCC250
;__Lib_System_15X.c, 449 :: 		
0x3516	0xE7F9    B	L___Lib_System_15X_InitialSetUpRCCRCC249
L___Lib_System_15X_InitialSetUpRCCRCC250:
;__Lib_System_15X.c, 450 :: 		
0x3518	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x351A	0x460A    MOV	R2, R1
0x351C	0x9901    LDR	R1, [SP, #4]
0x351E	0xE002    B	L___Lib_System_15X_InitialSetUpRCCRCC248
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_15X_InitialSetUpRCCRCC257:
;__Lib_System_15X.c, 447 :: 		
0x3520	0x9101    STR	R1, [SP, #4]
0x3522	0x4611    MOV	R1, R2
0x3524	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_15X.c, 450 :: 		
L___Lib_System_15X_InitialSetUpRCCRCC248:
;__Lib_System_15X.c, 452 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x3526	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x352A	0xB170    CBZ	R0, L___Lib_System_15X_InitialSetUpRCCRCC258
;__Lib_System_15X.c, 453 :: 		
0x352C	0x4817    LDR	R0, [PC, #92]
0x352E	0x6800    LDR	R0, [R0, #0]
0x3530	0xF0407180  ORR	R1, R0, #16777216
0x3534	0x4815    LDR	R0, [PC, #84]
0x3536	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x3538	0x4611    MOV	R1, R2
;__Lib_System_15X.c, 454 :: 		
L___Lib_System_15X_InitialSetUpRCCRCC252:
; ulRCC_CFGR start address is: 4 (R1)
0x353A	0x4814    LDR	R0, [PC, #80]
0x353C	0x6800    LDR	R0, [R0, #0]
0x353E	0xF0007000  AND	R0, R0, #33554432
0x3542	0xB900    CBNZ	R0, L___Lib_System_15X_InitialSetUpRCCRCC253
;__Lib_System_15X.c, 455 :: 		
0x3544	0xE7F9    B	L___Lib_System_15X_InitialSetUpRCCRCC252
L___Lib_System_15X_InitialSetUpRCCRCC253:
;__Lib_System_15X.c, 456 :: 		
0x3546	0x460A    MOV	R2, R1
0x3548	0xE7FF    B	L___Lib_System_15X_InitialSetUpRCCRCC251
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_15X_InitialSetUpRCCRCC258:
;__Lib_System_15X.c, 452 :: 		
;__Lib_System_15X.c, 456 :: 		
L___Lib_System_15X_InitialSetUpRCCRCC251:
;__Lib_System_15X.c, 459 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_15X_InitialSetUpRCCRCC254:
; ulRCC_CFGR start address is: 8 (R2)
0x354A	0x480E    LDR	R0, [PC, #56]
0x354C	0x6800    LDR	R0, [R0, #0]
0x354E	0xF000010C  AND	R1, R0, #12
0x3552	0x0090    LSLS	R0, R2, #2
0x3554	0xF000000C  AND	R0, R0, #12
0x3558	0x4281    CMP	R1, R0
0x355A	0xD000    BEQ	L___Lib_System_15X_InitialSetUpRCCRCC255
;__Lib_System_15X.c, 460 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x355C	0xE7F5    B	L___Lib_System_15X_InitialSetUpRCCRCC254
L___Lib_System_15X_InitialSetUpRCCRCC255:
;__Lib_System_15X.c, 462 :: 		
L_end_InitialSetUpRCCRCC2:
0x355E	0xF8DDE000  LDR	LR, [SP, #0]
0x3562	0xB002    ADD	SP, SP, #8
0x3564	0x4770    BX	LR
0x3566	0xBF00    NOP
0x3568	0x00010100  	#16777217
0x356C	0x00030044  	#4456451
0x3570	0x00020000  	#2
0x3574	0x7D000000  	#32000
0x3578	0x80084247  	FLASH_ACR+0
0x357C	0x80044247  	FLASH_ACR+0
0x3580	0x3C004002  	FLASH_ACR+0
0x3584	0x38084002  	RCC_CFGR+0
0x3588	0xFFFF000F  	#1048575
0x358C	0x38004002  	RCC_CR+0
; end of __Lib_System_15X_InitialSetUpRCCRCC2
__Lib_System_15X_SystemClockSetDefault:
;__Lib_System_15X.c, 377 :: 		
0x315C	0xB081    SUB	SP, SP, #4
;__Lib_System_15X.c, 380 :: 		
0x315E	0x4811    LDR	R0, [PC, #68]
0x3160	0x6800    LDR	R0, [R0, #0]
0x3162	0xF4407180  ORR	R1, R0, #256
0x3166	0x480F    LDR	R0, [PC, #60]
0x3168	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 383 :: 		
0x316A	0x480F    LDR	R0, [PC, #60]
0x316C	0x6801    LDR	R1, [R0, #0]
0x316E	0x480F    LDR	R0, [PC, #60]
0x3170	0x4001    ANDS	R1, R0
0x3172	0x480D    LDR	R0, [PC, #52]
0x3174	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 386 :: 		
0x3176	0x480B    LDR	R0, [PC, #44]
0x3178	0x6801    LDR	R1, [R0, #0]
0x317A	0x480D    LDR	R0, [PC, #52]
0x317C	0x4001    ANDS	R1, R0
0x317E	0x4809    LDR	R0, [PC, #36]
0x3180	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 389 :: 		
0x3182	0x4808    LDR	R0, [PC, #32]
0x3184	0x6801    LDR	R1, [R0, #0]
0x3186	0xF46F2080  MVN	R0, #262144
0x318A	0x4001    ANDS	R1, R0
0x318C	0x4805    LDR	R0, [PC, #20]
0x318E	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 392 :: 		
0x3190	0x4805    LDR	R0, [PC, #20]
0x3192	0x6801    LDR	R1, [R0, #0]
0x3194	0xF46F007D  MVN	R0, #16580608
0x3198	0x4001    ANDS	R1, R0
0x319A	0x4803    LDR	R0, [PC, #12]
0x319C	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 396 :: 		
L_end_SystemClockSetDefault:
0x319E	0xB001    ADD	SP, SP, #4
0x31A0	0x4770    BX	LR
0x31A2	0xBF00    NOP
0x31A4	0x38004002  	RCC_CR+0
0x31A8	0x38084002  	RCC_CFGR+0
0x31AC	0xC00C88FF  	#-1996505076
0x31B0	0xFFFEEEFE  	#-285278210
; end of __Lib_System_15X_SystemClockSetDefault
__Lib_System_15X_InitialSetUpFosc:
;__Lib_System_15X.c, 346 :: 		
0x3590	0xB081    SUB	SP, SP, #4
;__Lib_System_15X.c, 347 :: 		
0x3592	0x4904    LDR	R1, [PC, #16]
0x3594	0x4804    LDR	R0, [PC, #16]
0x3596	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 348 :: 		
0x3598	0x4904    LDR	R1, [PC, #16]
0x359A	0x4805    LDR	R0, [PC, #20]
0x359C	0x6001    STR	R1, [R0, #0]
;__Lib_System_15X.c, 349 :: 		
L_end_InitialSetUpFosc:
0x359E	0xB001    ADD	SP, SP, #4
0x35A0	0x4770    BX	LR
0x35A2	0xBF00    NOP
0x35A4	0x7D000000  	#32000
0x35A8	0x00842000  	___System_CLOCK_IN_KHZ+0
0x35AC	0x00020000  	#2
0x35B0	0x00882000  	__VOLTAGE_RANGE+0
; end of __Lib_System_15X_InitialSetUpFosc
___GenExcept:
;__Lib_System_15X.c, 313 :: 		
0x336C	0xB081    SUB	SP, SP, #4
;__Lib_System_15X.c, 314 :: 		
L___GenExcept30:
0x336E	0xE7FE    B	L___GenExcept30
;__Lib_System_15X.c, 315 :: 		
L_end___GenExcept:
0x3370	0xB001    ADD	SP, SP, #4
0x3372	0x4770    BX	LR
; end of ___GenExcept
0x368C	0xB500    PUSH	(R14)
0x368E	0xF8DFB014  LDR	R11, [PC, #20]
0x3692	0xF8DFA014  LDR	R10, [PC, #20]
0x3696	0xF8DFC014  LDR	R12, [PC, #20]
0x369A	0xF7FFFD8B  BL	12724
0x369E	0xBD00    POP	(R15)
0x36A0	0x4770    BX	LR
0x36A2	0xBF00    NOP
0x36A4	0x00002000  	#536870912
0x36A8	0x005A2000  	#536871002
0x36AC	0x35B40000  	#13748
0x370C	0xB500    PUSH	(R14)
0x370E	0xF8DFB010  LDR	R11, [PC, #16]
0x3712	0xF8DFA010  LDR	R10, [PC, #16]
0x3716	0xF7FFFD03  BL	12576
0x371A	0xBD00    POP	(R15)
0x371C	0x4770    BX	LR
0x371E	0xBF00    NOP
0x3720	0x00002000  	#536870912
0x3724	0x008C2000  	#536871052
_key_timer_interrupt:
;timer_func.c, 36 :: 		void key_timer_interrupt() iv IVT_INT_TIM3 ics ICS_AUTO
;timer_func.c, 38 :: 		TIM3_SRbits.UIF = 0;
0x33EC	0x2100    MOVS	R1, #0
0x33EE	0xB249    SXTB	R1, R1
0x33F0	0x4801    LDR	R0, [PC, #4]
0x33F2	0x6001    STR	R1, [R0, #0]
;timer_func.c, 39 :: 		}
L_end_key_timer_interrupt:
0x33F4	0x4770    BX	LR
0x33F6	0xBF00    NOP
0x33F8	0x82004200  	TIM3_SRbits+0
; end of _key_timer_interrupt
_main_timer_func:
;timer_func.c, 3 :: 		void main_timer_func() iv IVT_INT_TIM2 ics ICS_AUTO
;timer_func.c, 7 :: 		TIM2_SRbits.UIF = 0;
0x3374	0x2100    MOVS	R1, #0
0x3376	0xB249    SXTB	R1, R1
0x3378	0x4816    LDR	R0, [PC, #88]
0x337A	0x6001    STR	R1, [R0, #0]
;timer_func.c, 8 :: 		flag_t.ovf_flag = SET;
0x337C	0x2001    MOVS	R0, #1
0x337E	0x4916    LDR	R1, [PC, #88]
0x3380	0x7008    STRB	R0, [R1, #0]
;timer_func.c, 11 :: 		flag_t.ovf_flag = SET;
0x3382	0x2001    MOVS	R0, #1
0x3384	0x7008    STRB	R0, [R1, #0]
;timer_func.c, 13 :: 		if(flag_t.first_start==RESET)
0x3386	0x4815    LDR	R0, [PC, #84]
0x3388	0x7800    LDRB	R0, [R0, #0]
0x338A	0xB970    CBNZ	R0, L_main_timer_func0
;timer_func.c, 15 :: 		if((first_start_count++)>=((unsigned int)DELAY_FIRST_START*(1000/MS_IN_CYCLE)))
0x338C	0x4A14    LDR	R2, [PC, #80]
0x338E	0x8811    LDRH	R1, [R2, #0]
0x3390	0x4610    MOV	R0, R2
0x3392	0x8800    LDRH	R0, [R0, #0]
0x3394	0x1C40    ADDS	R0, R0, #1
0x3396	0x8010    STRH	R0, [R2, #0]
0x3398	0xF5B16FFA  CMP	R1, #2000
0x339C	0xD305    BCC	L_main_timer_func1
;timer_func.c, 17 :: 		first_start_count = 0;
0x339E	0x2100    MOVS	R1, #0
0x33A0	0x480F    LDR	R0, [PC, #60]
0x33A2	0x8001    STRH	R1, [R0, #0]
;timer_func.c, 18 :: 		flag_t.first_start = SET;
0x33A4	0x2101    MOVS	R1, #1
0x33A6	0x480D    LDR	R0, [PC, #52]
0x33A8	0x7001    STRB	R1, [R0, #0]
;timer_func.c, 19 :: 		}
L_main_timer_func1:
;timer_func.c, 21 :: 		}
L_main_timer_func0:
;timer_func.c, 23 :: 		if(flag_t.current_global_status==RESET)
0x33AA	0x480E    LDR	R0, [PC, #56]
0x33AC	0x7800    LDRB	R0, [R0, #0]
0x33AE	0xB978    CBNZ	R0, L_main_timer_func2
;timer_func.c, 25 :: 		if((current_global_status_count++)>=((unsigned int)DELAY_AFTER_CURRENT*(1000/MS_IN_CYCLE)))
0x33B0	0x4A0D    LDR	R2, [PC, #52]
0x33B2	0x8811    LDRH	R1, [R2, #0]
0x33B4	0x4610    MOV	R0, R2
0x33B6	0x8800    LDRH	R0, [R0, #0]
0x33B8	0x1C40    ADDS	R0, R0, #1
0x33BA	0x8010    STRH	R0, [R2, #0]
0x33BC	0xF2413088  MOVW	R0, #5000
0x33C0	0x4281    CMP	R1, R0
0x33C2	0xD305    BCC	L_main_timer_func3
;timer_func.c, 27 :: 		current_global_status_count = 0;
0x33C4	0x2100    MOVS	R1, #0
0x33C6	0x4808    LDR	R0, [PC, #32]
0x33C8	0x8001    STRH	R1, [R0, #0]
;timer_func.c, 28 :: 		flag_t.current_global_status = SET;
0x33CA	0x2101    MOVS	R1, #1
0x33CC	0x4805    LDR	R0, [PC, #20]
0x33CE	0x7001    STRB	R1, [R0, #0]
;timer_func.c, 29 :: 		}
L_main_timer_func3:
;timer_func.c, 30 :: 		}
L_main_timer_func2:
;timer_func.c, 34 :: 		}
L_end_main_timer_func:
0x33D0	0x4770    BX	LR
0x33D2	0xBF00    NOP
0x33D4	0x02004200  	TIM2_SRbits+0
0x33D8	0x005A2000  	_flag_t+0
0x33DC	0x00652000  	_flag_t+11
0x33E0	0x00562000  	main_timer_func_first_start_count_L0+0
0x33E4	0x00662000  	_flag_t+12
0x33E8	0x00582000  	main_timer_func_current_global_status_count_L0+0
; end of _main_timer_func
;adc_func.c,0 :: ?ICS_InVoltageValue [4]
0x35B4	0x00000000 ;?ICS_InVoltageValue+0
; end of ?ICS_InVoltageValue
;adc_func.c,0 :: ?ICS_CurrentValue [4]
0x35B8	0x00000000 ;?ICS_CurrentValue+0
; end of ?ICS_CurrentValue
;adc_func.c,0 :: ?ICS_OutVoltageValue [4]
0x35BC	0x00000000 ;?ICS_OutVoltageValue+0
; end of ?ICS_OutVoltageValue
;,0 :: _initBlock_3 [4]
; Containing: ?ICS_status [1]
;             ?ICS_t_bar [2]
;             ?ICSStatusLed_count_st_led_L0 [1]
0x35C0	0x00000000 ;_initBlock_3+0 : ?ICS_status at 0x35C0 : ?ICS_t_bar at 0x35C1 : ?ICSStatusLed_count_st_led_L0 at 0x35C3
; end of _initBlock_3
;,0 :: _initBlock_4 [2]
; Containing: ?ICSStatusLed_count_st_led1_L0 [1]
;             ?ICSStatusLed_count_st_led2_L0 [1]
0x35C4	0x0000 ;_initBlock_4+0 : ?ICSStatusLed_count_st_led1_L0 at 0x35C4 : ?ICSStatusLed_count_st_led2_L0 at 0x35C5
; end of _initBlock_4
;func.c,0 :: ?ICSControlDigitalFlags_start_button_status_count1_L0 [2]
0x35C6	0x0000 ;?ICSControlDigitalFlags_start_button_status_count1_L0+0
; end of ?ICSControlDigitalFlags_start_button_status_count1_L0
;func.c,0 :: ?ICSControlDigitalFlags_start_button_status_count2_L0 [2]
0x35C8	0x0000 ;?ICSControlDigitalFlags_start_button_status_count2_L0+0
; end of ?ICSControlDigitalFlags_start_button_status_count2_L0
;func.c,0 :: ?ICSControlDigitalFlags_change_button_status_count_L0 [2]
0x35CA	0x0000 ;?ICSControlDigitalFlags_change_button_status_count_L0+0
; end of ?ICSControlDigitalFlags_change_button_status_count_L0
;func.c,0 :: ?ICSControlDigitalFlags_change_button_status_count1_L0 [2]
0x35CC	0x0000 ;?ICSControlDigitalFlags_change_button_status_count1_L0+0
; end of ?ICSControlDigitalFlags_change_button_status_count1_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_input_voltage_status_first_step_count_L0 [2]
0x35CE	0x0000 ;?ICSControlAnalogFlags_input_voltage_status_first_step_count_L0+0
; end of ?ICSControlAnalogFlags_input_voltage_status_first_step_count_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_input_voltage_status_first_step_count1_L0 [2]
0x35D0	0x0000 ;?ICSControlAnalogFlags_input_voltage_status_first_step_count1_L0+0
; end of ?ICSControlAnalogFlags_input_voltage_status_first_step_count1_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_input_voltage_status_second_step_count_L0 [2]
0x35D2	0x0000 ;?ICSControlAnalogFlags_input_voltage_status_second_step_count_L0+0
; end of ?ICSControlAnalogFlags_input_voltage_status_second_step_count_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_input_voltage_status_second_step_count1_L0 [2]
0x35D4	0x0000 ;?ICSControlAnalogFlags_input_voltage_status_second_step_count1_L0+0
; end of ?ICSControlAnalogFlags_input_voltage_status_second_step_count1_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_current_status_count_L0 [2]
0x35D6	0x0000 ;?ICSControlAnalogFlags_current_status_count_L0+0
; end of ?ICSControlAnalogFlags_current_status_count_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_current_status_count1_L0 [2]
0x35D8	0x0000 ;?ICSControlAnalogFlags_current_status_count1_L0+0
; end of ?ICSControlAnalogFlags_current_status_count1_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_input_voltage_status_bypass_count_L0 [2]
0x35DA	0x0000 ;?ICSControlAnalogFlags_input_voltage_status_bypass_count_L0+0
; end of ?ICSControlAnalogFlags_input_voltage_status_bypass_count_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_input_voltage_status_bypass_count1_L0 [2]
0x35DC	0x0000 ;?ICSControlAnalogFlags_input_voltage_status_bypass_count1_L0+0
; end of ?ICSControlAnalogFlags_input_voltage_status_bypass_count1_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_output_voltage_status_count_L0 [2]
0x35DE	0x0000 ;?ICSControlAnalogFlags_output_voltage_status_count_L0+0
; end of ?ICSControlAnalogFlags_output_voltage_status_count_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_output_voltage_status_count1_L0 [2]
0x35E0	0x0000 ;?ICSControlAnalogFlags_output_voltage_status_count1_L0+0
; end of ?ICSControlAnalogFlags_output_voltage_status_count1_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_short_current_status_count_L0 [2]
0x35E2	0x0000 ;?ICSControlAnalogFlags_short_current_status_count_L0+0
; end of ?ICSControlAnalogFlags_short_current_status_count_L0
;adc_func.c,0 :: ?ICSControlAnalogFlags_short_current_status_count1_L0 [2]
0x35E4	0x0000 ;?ICSControlAnalogFlags_short_current_status_count1_L0+0
; end of ?ICSControlAnalogFlags_short_current_status_count1_L0
;,0 :: _initBlock_21 [2]
; Containing: ?ICSReadAnalogInput_rai_count_L0 [1]
;             ?ICSControlOut_rele_1_count_L0 [1]
0x35E6	0x0000 ;_initBlock_21+0 : ?ICSReadAnalogInput_rai_count_L0 at 0x35E6 : ?ICSControlOut_rele_1_count_L0 at 0x35E7
; end of _initBlock_21
;func.c,0 :: ?ICSControlOut_main_count_L0 [2]
0x35E8	0x0000 ;?ICSControlOut_main_count_L0+0
; end of ?ICSControlOut_main_count_L0
;func.c,0 :: ?ICSControlOut_main_count1_L0 [2]
0x35EA	0x0000 ;?ICSControlOut_main_count1_L0+0
; end of ?ICSControlOut_main_count1_L0
;,0 :: _initBlock_24 [2]
; Containing: ?ICSControlOut_rele_2_count_L0 [1]
;             ?ICSControlOut_rele_bypass_count_L0 [1]
0x35EC	0x0000 ;_initBlock_24+0 : ?ICSControlOut_rele_2_count_L0 at 0x35EC : ?ICSControlOut_rele_bypass_count_L0 at 0x35ED
; end of _initBlock_24
;func.c,0 :: ?ICSControlOut_c_L0 [2]
0x35EE	0x0000 ;?ICSControlOut_c_L0+0
; end of ?ICSControlOut_c_L0
;func.c,0 :: ?ICSControlOut_c1_L0 [2]
0x35F0	0x0000 ;?ICSControlOut_c1_L0+0
; end of ?ICSControlOut_c1_L0
;func.c,0 :: ?ICSControlOut_c2_L0 [2]
0x35F2	0x0000 ;?ICSControlOut_c2_L0+0
; end of ?ICSControlOut_c2_L0
;func.c,0 :: ?ICSControlOut_c3_L0 [2]
0x35F4	0x0000 ;?ICSControlOut_c3_L0+0
; end of ?ICSControlOut_c3_L0
;func.c,0 :: ?ICSControlOut_c4_L0 [2]
0x35F6	0x0000 ;?ICSControlOut_c4_L0+0
; end of ?ICSControlOut_c4_L0
;func.c,0 :: ?ICSControlOut_c5_L0 [2]
0x35F8	0x0000 ;?ICSControlOut_c5_L0+0
; end of ?ICSControlOut_c5_L0
;func.c,0 :: ?ICSControlOut_c6_L0 [2]
0x35FA	0x0000 ;?ICSControlOut_c6_L0+0
; end of ?ICSControlOut_c6_L0
;func.c,0 :: ?ICSControlOut_c7_L0 [2]
0x35FC	0x0000 ;?ICSControlOut_c7_L0+0
; end of ?ICSControlOut_c7_L0
;func.c,0 :: ?ICSControlOut_c8_L0 [2]
0x35FE	0x0000 ;?ICSControlOut_c8_L0+0
; end of ?ICSControlOut_c8_L0
;func.c,0 :: ?ICSControlOut_c9_L0 [2]
0x3600	0x0000 ;?ICSControlOut_c9_L0+0
; end of ?ICSControlOut_c9_L0
;func.c,0 :: ?ICSControlOut_c10_L0 [2]
0x3602	0x0000 ;?ICSControlOut_c10_L0+0
; end of ?ICSControlOut_c10_L0
;func.c,0 :: ?ICSControlOut_c11_L0 [2]
0x3604	0x0000 ;?ICSControlOut_c11_L0+0
; end of ?ICSControlOut_c11_L0
;,0 :: _initBlock_37 [2]
; Containing: ?ICSdisplayData_in_reset_L0 [1]
;             ?ICSdisplayData_state_L0 [1]
0x3606	0x0000 ;_initBlock_37+0 : ?ICSdisplayData_in_reset_L0 at 0x3606 : ?ICSdisplayData_state_L0 at 0x3607
; end of _initBlock_37
;func.c,0 :: ?ICSdisplayData_count_data_L0 [2]
0x3608	0x0000 ;?ICSdisplayData_count_data_L0+0
; end of ?ICSdisplayData_count_data_L0
;timer_func.c,0 :: ?ICSmain_timer_func_first_start_count_L0 [2]
0x360A	0x0000 ;?ICSmain_timer_func_first_start_count_L0+0
; end of ?ICSmain_timer_func_first_start_count_L0
;timer_func.c,0 :: ?ICSmain_timer_func_current_global_status_count_L0 [2]
0x360C	0x0000 ;?ICSmain_timer_func_current_global_status_count_L0+0
; end of ?ICSmain_timer_func_current_global_status_count_L0
;lcd_my_func.c,120 :: _SmallLetterMap [52]
0x360E	0x99019118 ;_SmallLetterMap+0
0x3612	0x6380B100 ;_SmallLetterMap+4
0x3616	0x9C009180 ;_SmallLetterMap+8
0x361A	0x98106340 ;_SmallLetterMap+12
0x361E	0x07000510 ;_SmallLetterMap+16
0x3622	0x01140055 ;_SmallLetterMap+20
0x3626	0x9010B210 ;_SmallLetterMap+24
0x362A	0x9808B300 ;_SmallLetterMap+28
0x362E	0x90006240 ;_SmallLetterMap+32
0x3632	0x99002101 ;_SmallLetterMap+36
0x3636	0x02011300 ;_SmallLetterMap+40
0x363A	0xA0811281 ;_SmallLetterMap+44
0x363E	0x81800301 ;_SmallLetterMap+48
; end of _SmallLetterMap
;lcd_my_func.c,109 :: _CapLetterMap [52]
0x3642	0x6714FE00 ;_CapLetterMap+0
0x3646	0x47141D00 ;_CapLetterMap+4
0x364A	0x9C009D00 ;_CapLetterMap+8
0x364E	0xFA003F00 ;_CapLetterMap+12
0x3652	0x53000014 ;_CapLetterMap+16
0x3656	0x19009841 ;_CapLetterMap+20
0x365A	0x5A095A48 ;_CapLetterMap+24
0x365E	0xFC005F00 ;_CapLetterMap+28
0x3662	0xFC015F01 ;_CapLetterMap+32
0x3666	0x0414AF00 ;_CapLetterMap+36
0x366A	0x18C05B00 ;_CapLetterMap+40
0x366E	0x00C95A81 ;_CapLetterMap+44
0x3672	0x05C00058 ;_CapLetterMap+48
; end of _CapLetterMap
;lcd_my_func.c,131 :: _NumberMap [20]
0x3676	0x42005F00 ;_NumberMap+0
0x367A	0x6700F500 ;_NumberMap+4
0x367E	0xAF00EA00 ;_NumberMap+8
0x3682	0x4600BF00 ;_NumberMap+12
0x3686	0xEF00FF00 ;_NumberMap+16
; end of _NumberMap
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x00F8      [22]    _Delay_1us
0x0110      [66]    __FloatToSignedIntegral
0x0154     [136]    __Lib_ADC_32Lxxx_20ch_ADCx_Get_Sample
0x01DC     [152]    _GPIO_Clk_Enable
0x0274     [372]    lcd_my_func_LCD_Conv_Char_Seg
0x03E8      [64]    __SignedIntegralToFloat
0x0428     [254]    __Add_FP
0x0528     [104]    __Compare_FP
0x0590     [258]    __Sub_FP
0x0694      [28]    _ADC1_Get_Sample
0x06B0     [184]    _modf
0x0768      [70]    __FloatToUnsignedIntegral
0x07B0    [1364]    _LCD_GLASS_WriteChar
0x0D04      [44]    __UnsignedIntegralToFloat
0x0D30     [164]    __Div_FP
0x0DD4      [84]    _LCD_bar
0x0E28     [560]    _GPIO_Config
0x1058      [84]    _LCD_RAM_clear
0x10AC      [60]    _LCD_Master_Reset
0x10E8    [3736]    _LCD_GLASS_Configure_GPIO
0x1F80     [266]    _one_level_comparator
0x208C     [280]    _Out_data_to_LCD
0x21A8     [124]    _Read_ADC_chanell
0x2224     [138]    __Mul_FP
0x22B0     [196]    _LCD_bar_status
0x2374     [152]    __Lib_ADC_32Lxxx_20ch_ADCx_Init
0x240C      [24]    _GPIO_Analog_Input
0x2424      [36]    _LCD_GLASS_Clear
0x2448     [108]    _ControlDigit
0x24B4     [316]    _ADC_Set_Input_Channel
0x25F0      [52]    _ADC1_Init
0x2624     [156]    _displayData
0x26C0     [120]    _NVIC_IntEnable
0x2738    [1148]    _ControlOut
0x2BB4     [172]    _StatusLed
0x2C60     [104]    _ControlDigitalFlags
0x2CC8     [400]    _ControlAnalogFlags
0x2E58      [84]    _ReadAnalogInput
0x2EAC     [408]    _LCD_GLASS_Init
0x3044      [16]    _clear_WDT
0x3054     [204]    _Init_flags
0x3120      [58]    ___FillZeros
0x315C      [88]    __Lib_System_15X_SystemClockSetDefault
0x31B4      [20]    ___CC2DW
0x31C8      [14]    _EnableInterrupts
0x31D8      [44]    _Init_ADC_chanell
0x3204      [60]    _globalProcess
0x3240      [18]    _Init_LCD
0x3254      [72]    _WDT_Init
0x329C     [124]    _Init_pin
0x3318      [84]    _StartMainTimer_10ms
0x336C       [8]    ___GenExcept
0x3374     [120]    _main_timer_func
0x33EC      [16]    _key_timer_interrupt
0x33FC      [56]    _main
0x3434     [348]    __Lib_System_15X_InitialSetUpRCCRCC2
0x3590      [36]    __Lib_System_15X_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [4]    _InVoltageValue
0x20000004       [4]    _CurrentValue
0x20000008       [4]    _OutVoltageValue
0x2000000C       [1]    _status
0x2000000D       [2]    _t_bar
0x2000000F       [1]    StatusLed_count_st_led_L0
0x20000010       [1]    StatusLed_count_st_led1_L0
0x20000011       [1]    StatusLed_count_st_led2_L0
0x20000012       [2]    ControlDigitalFlags_start_button_status_count1_L0
0x20000014       [2]    ControlDigitalFlags_start_button_status_count2_L0
0x20000016       [2]    ControlDigitalFlags_change_button_status_count_L0
0x20000018       [2]    ControlDigitalFlags_change_button_status_count1_L0
0x2000001A       [2]    ControlAnalogFlags_input_voltage_status_first_step_count_L0
0x2000001C       [2]    ControlAnalogFlags_input_voltage_status_first_step_count1_L0
0x2000001E       [2]    ControlAnalogFlags_input_voltage_status_second_step_count_L0
0x20000020       [2]    ControlAnalogFlags_input_voltage_status_second_step_count1_L0
0x20000022       [2]    ControlAnalogFlags_current_status_count_L0
0x20000024       [2]    ControlAnalogFlags_current_status_count1_L0
0x20000026       [2]    ControlAnalogFlags_input_voltage_status_bypass_count_L0
0x20000028       [2]    ControlAnalogFlags_input_voltage_status_bypass_count1_L0
0x2000002A       [2]    ControlAnalogFlags_output_voltage_status_count_L0
0x2000002C       [2]    ControlAnalogFlags_output_voltage_status_count1_L0
0x2000002E       [2]    ControlAnalogFlags_short_current_status_count_L0
0x20000030       [2]    ControlAnalogFlags_short_current_status_count1_L0
0x20000032       [1]    ReadAnalogInput_rai_count_L0
0x20000033       [1]    ControlOut_rele_1_count_L0
0x20000034       [2]    ControlOut_main_count_L0
0x20000036       [2]    ControlOut_main_count1_L0
0x20000038       [1]    ControlOut_rele_2_count_L0
0x20000039       [1]    ControlOut_rele_bypass_count_L0
0x2000003A       [2]    ControlOut_c_L0
0x2000003C       [2]    ControlOut_c1_L0
0x2000003E       [2]    ControlOut_c2_L0
0x20000040       [2]    ControlOut_c3_L0
0x20000042       [2]    ControlOut_c4_L0
0x20000044       [2]    ControlOut_c5_L0
0x20000046       [2]    ControlOut_c6_L0
0x20000048       [2]    ControlOut_c7_L0
0x2000004A       [2]    ControlOut_c8_L0
0x2000004C       [2]    ControlOut_c9_L0
0x2000004E       [2]    ControlOut_c10_L0
0x20000050       [2]    ControlOut_c11_L0
0x20000052       [1]    displayData_in_reset_L0
0x20000053       [1]    displayData_state_L0
0x20000054       [2]    displayData_count_data_L0
0x20000056       [2]    main_timer_func_first_start_count_L0
0x20000058       [2]    main_timer_func_current_global_status_count_L0
0x2000005A      [20]    _flag_t
0x20000070       [4]    _OutVoltage
0x20000074      [12]    _strDisp
0x20000080       [4]    _ADC_Get_Sample_Ptr
0x20000084       [4]    ___System_CLOCK_IN_KHZ
0x20000088       [4]    __VOLTAGE_RANGE
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x35B4       [4]    ?ICS_InVoltageValue
0x35B8       [4]    ?ICS_CurrentValue
0x35BC       [4]    ?ICS_OutVoltageValue
0x35C0       [1]    ?ICS_status
0x35C1       [2]    ?ICS_t_bar
0x35C3       [1]    ?ICSStatusLed_count_st_led_L0
0x35C4       [1]    ?ICSStatusLed_count_st_led1_L0
0x35C5       [1]    ?ICSStatusLed_count_st_led2_L0
0x35C6       [2]    ?ICSControlDigitalFlags_start_button_status_count1_L0
0x35C8       [2]    ?ICSControlDigitalFlags_start_button_status_count2_L0
0x35CA       [2]    ?ICSControlDigitalFlags_change_button_status_count_L0
0x35CC       [2]    ?ICSControlDigitalFlags_change_button_status_count1_L0
0x35CE       [2]    ?ICSControlAnalogFlags_input_voltage_status_first_step_count_L0
0x35D0       [2]    ?ICSControlAnalogFlags_input_voltage_status_first_step_count1_L0
0x35D2       [2]    ?ICSControlAnalogFlags_input_voltage_status_second_step_count_L0
0x35D4       [2]    ?ICSControlAnalogFlags_input_voltage_status_second_step_count1_L0
0x35D6       [2]    ?ICSControlAnalogFlags_current_status_count_L0
0x35D8       [2]    ?ICSControlAnalogFlags_current_status_count1_L0
0x35DA       [2]    ?ICSControlAnalogFlags_input_voltage_status_bypass_count_L0
0x35DC       [2]    ?ICSControlAnalogFlags_input_voltage_status_bypass_count1_L0
0x35DE       [2]    ?ICSControlAnalogFlags_output_voltage_status_count_L0
0x35E0       [2]    ?ICSControlAnalogFlags_output_voltage_status_count1_L0
0x35E2       [2]    ?ICSControlAnalogFlags_short_current_status_count_L0
0x35E4       [2]    ?ICSControlAnalogFlags_short_current_status_count1_L0
0x35E6       [1]    ?ICSReadAnalogInput_rai_count_L0
0x35E7       [1]    ?ICSControlOut_rele_1_count_L0
0x35E8       [2]    ?ICSControlOut_main_count_L0
0x35EA       [2]    ?ICSControlOut_main_count1_L0
0x35EC       [1]    ?ICSControlOut_rele_2_count_L0
0x35ED       [1]    ?ICSControlOut_rele_bypass_count_L0
0x35EE       [2]    ?ICSControlOut_c_L0
0x35F0       [2]    ?ICSControlOut_c1_L0
0x35F2       [2]    ?ICSControlOut_c2_L0
0x35F4       [2]    ?ICSControlOut_c3_L0
0x35F6       [2]    ?ICSControlOut_c4_L0
0x35F8       [2]    ?ICSControlOut_c5_L0
0x35FA       [2]    ?ICSControlOut_c6_L0
0x35FC       [2]    ?ICSControlOut_c7_L0
0x35FE       [2]    ?ICSControlOut_c8_L0
0x3600       [2]    ?ICSControlOut_c9_L0
0x3602       [2]    ?ICSControlOut_c10_L0
0x3604       [2]    ?ICSControlOut_c11_L0
0x3606       [1]    ?ICSdisplayData_in_reset_L0
0x3607       [1]    ?ICSdisplayData_state_L0
0x3608       [2]    ?ICSdisplayData_count_data_L0
0x360A       [2]    ?ICSmain_timer_func_first_start_count_L0
0x360C       [2]    ?ICSmain_timer_func_current_global_status_count_L0
0x360E      [52]    _SmallLetterMap
0x3642      [52]    _CapLetterMap
0x3676      [20]    _NumberMap
